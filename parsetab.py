
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AEQL AND AND COMMA DO ELSE EQL FLOAT FUNC ID IF INT LBRK LESSTHAN LKEY LPAR MAIN MINUS MORETHAN MULT NOTEQL NUMFLOAT NUMINT OR OR PLUS PRINT RBRK RETURN RKEY RPAR SEMICOLON SLASH STRING VAR VOID WHILEprograma : VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadocsalidadoc :\n     debug : \n    variable : varf \n                | empty\n    funciones : funcionf \n                | empty\n    maines : mainf\n              | empty\n    varf : tipo varpvarp : ID array varpp\n            | ID varid varpp\n     varid :\n    varpp : varppp\n    varppp : COMMA varp\n              | SEMICOLON varpppp empty\n    varpppp : varf\n               | empty\n    tipo : INT funciontipo\n            | FLOAT funciontipo\n    array : LBRK exp RBRKexp : termino cuadexp auxexp\n    cuadexp :\n    auxexp : PLUS meteopdores exp\n              | MINUS meteopdores exp\n              | empty\n    termino : factor cuadtermino auxtermino\n    cuadtermino :\n    auxtermino : MULT meteopdores termino\n                  | SLASH meteopdores termino\n                  | empty\n    factor : LPAR infondo expresion RPAR outfondo\n              | varcte\n    infondo :\n    outfondo :\n    varcte : ID meteopandos\n              | NUMFLOAT meteconst\n              | NUMINT meteconst\n              | llamafunc\n    meteconst :\n    llamafunc : ID LPAR llamafuncp\n    llamafuncp : llamafuncpp\n                 | llamafuncpppp\n    llamafuncpp : tipo ID llamafuncppp \n    llamafuncppp : COMMA llamafuncpp\n                    | llamafuncpppp\n    llamafuncpppp : RPAR \n    funcionf : VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp\n                | tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp\n    resetmem :\n     funciontipo :\n     funcionid : \n    funcionp : funcionpp\n                | empty\n    funcionpp : tipo ID varid funcionppp\n    funcionppp : COMMA funcionpp\n                  | empty\n    funcionpppp : funcionf\n                   | empty\n    bloque : LKEY bloquep\n              | LKEY bloqueppp\n    bloquep : estatuto bloquepp\n    bloquepp : bloquep\n                | bloqueppp\n    bloqueppp : RKEY\n    estatuto : asignacion\n                | condif\n                | condwhile\n                | conddowhile\n                | escritura\n                | llamafunc SEMICOLON\n    asignacion : ID array asignacionp\n                  | ID meteopandos asignacionp\n    asignacionp : AEQL meteopdores expresionandor cuadass SEMICOLON \n    expresionandor : expresion cuadexpresionandor auxandor\n    cuadexpresionandor :\n    auxandor : AND meteopdores expresionandor\n                | OR meteopdores expresionandor\n                | empty\n     cuadass :\n     meteopdores :\n     meteopandos :\n    escritura : PRINT meteopdores LPAR escriturap\n    escriturap : expresion cuadescritura escriturapp\n                  | STRING meteconst cuadescriturastring escriturapp\n    cuadescritura :\n    cuadescriturastring :\n    escriturapp : COMMA escriturap\n                   | RPAR SEMICOLON\n    condif : IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif\n    cuadcondif :\n    cuadrellenoif :\n    condifp : ELSE cuadconifelse bloque SEMICOLON\n               | SEMICOLON\n    cuadconifelse :\n    condwhile : WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON\n    guardarsal :\n    quadcondwhile :\n    rellenocondwhile :\n    conddowhile : DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON\n    guardardowhile :\n    quadconddowhile :\n    expresion : exp cuadexpresion expresionp \n    cuadexpresion : \n    expresionp : MORETHAN meteopdores expresion\n                  | LESSTHAN meteopdores expresion\n                  | EQL meteopdores expresion\n                  | NOTEQL meteopdores expresion\n                  | empty\n    mainf : bloque SEMICOLON\n    empty :'
    
_lr_action_items = {'VAR':([0,],[2,]),'$end':([1,53,72,73,74,86,87,122,],[0,-111,-3,-8,-9,-2,-110,-1,]),'SEMICOLON':([2,10,12,16,17,30,31,33,34,35,36,37,38,45,46,47,49,51,52,57,60,61,64,66,67,68,69,71,75,83,84,88,89,91,97,108,109,110,111,112,113,118,119,121,123,124,125,140,151,152,153,154,162,167,168,174,177,178,179,184,189,192,196,204,209,210,211,212,213,214,],[3,15,-13,27,27,-23,-28,-33,-82,-40,-40,-39,53,-21,-111,-111,-36,-37,-38,-22,-26,-27,-31,-104,-41,-42,-43,-47,87,-35,-111,-60,-61,-65,126,-24,-25,-29,-30,-32,-103,-109,-44,-46,-62,-63,-64,-45,-105,-106,-107,-108,-50,-80,-76,186,188,-111,195,199,-75,-79,-99,-50,215,216,217,-77,-78,218,]),'FUNC':([3,4,5,6,11,24,25,27,28,41,42,43,44,56,],[-111,10,-4,-5,-10,-11,-14,-111,-12,-15,-111,-18,-17,-16,]),'INT':([3,15,27,50,78,103,120,164,186,217,],[8,8,8,8,8,8,8,8,8,8,]),'FLOAT':([3,15,27,50,78,103,120,164,186,217,],[9,9,9,9,9,9,9,9,9,9,]),'ID':([7,8,9,13,14,18,22,23,26,32,39,48,58,59,62,63,70,76,79,80,81,82,90,92,93,94,95,96,104,114,115,116,117,126,129,130,136,137,138,139,141,142,143,145,147,155,159,171,176,182,183,188,190,191,193,195,198,199,200,205,206,207,215,216,218,],[12,-51,-51,-19,-20,34,-51,40,12,-34,54,34,-81,-81,-81,-81,85,98,34,34,34,34,98,-66,-67,-68,-69,-70,134,-81,-81,-81,-81,-71,34,-97,34,34,34,34,-72,-81,-73,34,34,34,-83,34,34,-84,34,-74,-81,-81,-92,-94,-88,-89,-85,34,34,-90,-96,-100,-93,]),'LBRK':([12,98,],[18,18,]),'COMMA':([12,16,17,30,31,33,34,35,36,37,45,46,47,49,51,52,57,60,61,64,66,67,68,69,71,83,84,85,108,109,110,111,112,113,118,119,121,134,140,149,151,152,153,154,160,161,172,173,185,],[-13,26,26,-23,-28,-33,-82,-40,-40,-39,-21,-111,-111,-36,-37,-38,-22,-26,-27,-31,-104,-41,-42,-43,-47,-35,-111,120,-24,-25,-29,-30,-32,-103,-109,-44,-46,-13,-45,164,-105,-106,-107,-108,-86,-40,183,-87,183,]),'VOID':([15,186,217,],[22,22,22,]),'MAIN':([15,19,20,21,186,201,202,203,217,219,],[-111,38,-6,-7,-111,-48,-58,-59,-111,-49,]),'LPAR':([18,32,34,40,48,54,55,58,59,62,63,77,79,80,81,82,98,99,100,102,114,115,116,117,129,130,132,136,137,138,139,142,145,147,155,158,166,171,176,183,190,191,205,206,],[32,-34,50,-52,32,-52,78,-81,-81,-81,-81,103,32,32,32,32,50,129,130,-81,-81,-81,-81,-81,32,-97,147,32,32,32,32,-81,32,32,32,171,176,32,32,32,-81,-81,32,32,]),'NUMFLOAT':([18,32,48,58,59,62,63,79,80,81,82,114,115,116,117,129,130,136,137,138,139,142,145,147,155,171,176,183,190,191,205,206,],[35,-34,35,-81,-81,-81,-81,35,35,35,35,-81,-81,-81,-81,35,-97,35,35,35,35,-81,35,35,35,35,35,35,-81,-81,35,35,]),'NUMINT':([18,32,48,58,59,62,63,79,80,81,82,114,115,116,117,129,130,136,137,138,139,142,145,147,155,171,176,183,190,191,205,206,],[36,-34,36,-81,-81,-81,-81,36,36,36,36,-81,-81,-81,-81,36,-97,36,36,36,36,-81,36,36,36,36,36,36,-81,-81,36,36,]),'RBRK':([29,30,31,33,34,35,36,37,46,47,49,51,52,57,60,61,64,67,68,69,71,83,108,109,110,111,112,119,121,140,],[45,-23,-28,-33,-82,-40,-40,-39,-111,-111,-36,-37,-38,-22,-26,-27,-31,-41,-42,-43,-47,-35,-24,-25,-29,-30,-32,-44,-46,-45,]),'PLUS':([30,31,33,34,35,36,37,46,47,49,51,52,61,64,67,68,69,71,83,110,111,112,119,121,140,],[-23,-28,-33,-82,-40,-40,-39,58,-111,-36,-37,-38,-27,-31,-41,-42,-43,-47,-35,-29,-30,-32,-44,-46,-45,]),'MINUS':([30,31,33,34,35,36,37,46,47,49,51,52,61,64,67,68,69,71,83,110,111,112,119,121,140,],[-23,-28,-33,-82,-40,-40,-39,59,-111,-36,-37,-38,-27,-31,-41,-42,-43,-47,-35,-29,-30,-32,-44,-46,-45,]),'MORETHAN':([30,31,33,34,35,36,37,46,47,49,51,52,57,60,61,64,66,67,68,69,71,83,84,108,109,110,111,112,119,121,140,],[-23,-28,-33,-82,-40,-40,-39,-111,-111,-36,-37,-38,-22,-26,-27,-31,-104,-41,-42,-43,-47,-35,114,-24,-25,-29,-30,-32,-44,-46,-45,]),'LESSTHAN':([30,31,33,34,35,36,37,46,47,49,51,52,57,60,61,64,66,67,68,69,71,83,84,108,109,110,111,112,119,121,140,],[-23,-28,-33,-82,-40,-40,-39,-111,-111,-36,-37,-38,-22,-26,-27,-31,-104,-41,-42,-43,-47,-35,115,-24,-25,-29,-30,-32,-44,-46,-45,]),'EQL':([30,31,33,34,35,36,37,46,47,49,51,52,57,60,61,64,66,67,68,69,71,83,84,108,109,110,111,112,119,121,140,],[-23,-28,-33,-82,-40,-40,-39,-111,-111,-36,-37,-38,-22,-26,-27,-31,-104,-41,-42,-43,-47,-35,116,-24,-25,-29,-30,-32,-44,-46,-45,]),'NOTEQL':([30,31,33,34,35,36,37,46,47,49,51,52,57,60,61,64,66,67,68,69,71,83,84,108,109,110,111,112,119,121,140,],[-23,-28,-33,-82,-40,-40,-39,-111,-111,-36,-37,-38,-22,-26,-27,-31,-104,-41,-42,-43,-47,-35,117,-24,-25,-29,-30,-32,-44,-46,-45,]),'RPAR':([30,31,33,34,35,36,37,46,47,49,50,51,52,57,60,61,64,65,66,67,68,69,71,78,83,84,85,103,105,106,107,108,109,110,111,112,113,118,119,121,133,134,140,144,149,151,152,153,154,156,157,160,161,163,165,170,172,173,175,181,185,187,197,],[-23,-28,-33,-82,-40,-40,-39,-111,-111,-36,71,-37,-38,-22,-26,-27,-31,83,-104,-41,-42,-43,-47,-111,-35,-111,71,-111,135,-53,-54,-24,-25,-29,-30,-32,-103,-109,-44,-46,148,-13,-45,-91,-111,-105,-106,-107,-108,169,-98,-86,-40,-55,-57,180,184,-87,-56,-102,184,204,210,]),'AND':([30,31,33,34,35,36,37,46,47,49,51,52,57,60,61,64,66,67,68,69,71,83,84,108,109,110,111,112,113,118,119,121,140,151,152,153,154,168,178,],[-23,-28,-33,-82,-40,-40,-39,-111,-111,-36,-37,-38,-22,-26,-27,-31,-104,-41,-42,-43,-47,-35,-111,-24,-25,-29,-30,-32,-103,-109,-44,-46,-45,-105,-106,-107,-108,-76,190,]),'OR':([30,31,33,34,35,36,37,46,47,49,51,52,57,60,61,64,66,67,68,69,71,83,84,108,109,110,111,112,113,118,119,121,140,151,152,153,154,168,178,],[-23,-28,-33,-82,-40,-40,-39,-111,-111,-36,-37,-38,-22,-26,-27,-31,-104,-41,-42,-43,-47,-35,-111,-24,-25,-29,-30,-32,-103,-109,-44,-46,-45,-105,-106,-107,-108,-76,191,]),'MULT':([31,33,34,35,36,37,47,49,51,52,67,68,69,71,83,112,119,121,140,],[-28,-33,-82,-40,-40,-39,62,-36,-37,-38,-41,-42,-43,-47,-35,-32,-44,-46,-45,]),'SLASH':([31,33,34,35,36,37,47,49,51,52,67,68,69,71,83,112,119,121,140,],[-28,-33,-82,-40,-40,-39,63,-36,-37,-38,-41,-42,-43,-47,-35,-32,-44,-46,-45,]),'AEQL':([45,98,127,128,],[-21,-82,142,142,]),'LKEY':([53,101,131,135,148,169,180,194,208,],[76,-101,76,76,76,76,76,-95,76,]),'RKEY':([76,90,92,93,94,95,96,126,141,143,159,182,188,193,195,198,199,200,207,215,216,218,],[91,91,-66,-67,-68,-69,-70,-71,-72,-73,-83,-84,-74,-92,-94,-88,-89,-85,-90,-96,-100,-93,]),'IF':([76,90,92,93,94,95,96,126,141,143,159,182,188,193,195,198,199,200,207,215,216,218,],[99,99,-66,-67,-68,-69,-70,-71,-72,-73,-83,-84,-74,-92,-94,-88,-89,-85,-90,-96,-100,-93,]),'WHILE':([76,88,89,90,91,92,93,94,95,96,123,124,125,126,141,143,146,159,182,188,193,195,198,199,200,207,215,216,218,],[100,-60,-61,100,-65,-66,-67,-68,-69,-70,-62,-63,-64,-71,-72,-73,158,-83,-84,-74,-92,-94,-88,-89,-85,-90,-96,-100,-93,]),'DO':([76,90,92,93,94,95,96,126,141,143,159,182,188,193,195,198,199,200,207,215,216,218,],[101,101,-66,-67,-68,-69,-70,-71,-72,-73,-83,-84,-74,-92,-94,-88,-89,-85,-90,-96,-100,-93,]),'PRINT':([76,90,92,93,94,95,96,126,141,143,159,182,188,193,195,198,199,200,207,215,216,218,],[102,102,-66,-67,-68,-69,-70,-71,-72,-73,-83,-84,-74,-92,-94,-88,-89,-85,-90,-96,-100,-93,]),'RETURN':([88,89,91,123,124,125,150,],[-60,-61,-65,-62,-63,-64,166,]),'ELSE':([88,89,91,123,124,125,179,],[-60,-61,-65,-62,-63,-64,194,]),'STRING':([147,183,],[161,161,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'variable':([3,],[4,]),'varf':([3,27,],[5,44,]),'empty':([3,15,27,42,46,47,53,78,84,103,149,178,186,217,],[6,21,43,56,60,64,74,107,118,107,165,192,203,203,]),'tipo':([3,15,27,50,78,103,120,164,186,217,],[7,23,7,70,104,104,70,104,23,23,]),'varp':([7,26,],[11,41,]),'funciontipo':([8,9,22,],[13,14,39,]),'array':([12,98,],[16,127,]),'varid':([12,134,],[17,149,]),'funciones':([15,],[19,]),'funcionf':([15,186,217,],[20,202,202,]),'varpp':([16,17,],[24,28,]),'varppp':([16,17,],[25,25,]),'exp':([18,48,79,80,129,136,137,138,139,145,147,155,171,176,183,205,206,],[29,66,108,109,66,66,66,66,66,66,66,66,66,187,66,66,66,]),'termino':([18,48,79,80,81,82,129,136,137,138,139,145,147,155,171,176,183,205,206,],[30,30,30,30,110,111,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'factor':([18,48,79,80,81,82,129,136,137,138,139,145,147,155,171,176,183,205,206,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'varcte':([18,48,79,80,81,82,129,136,137,138,139,145,147,155,171,176,183,205,206,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'llamafunc':([18,48,76,79,80,81,82,90,129,136,137,138,139,145,147,155,171,176,183,205,206,],[37,37,97,37,37,37,37,97,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'varpppp':([27,],[42,]),'cuadexp':([30,],[46,]),'cuadtermino':([31,],[47,]),'infondo':([32,],[48,]),'meteopandos':([34,98,],[49,128,]),'meteconst':([35,36,161,],[51,52,173,]),'funcionid':([40,54,],[55,77,]),'auxexp':([46,],[57,]),'auxtermino':([47,],[61,]),'expresion':([48,129,136,137,138,139,145,147,155,171,183,205,206,],[65,144,151,152,153,154,157,160,168,181,160,168,168,]),'llamafuncp':([50,],[67,]),'llamafuncpp':([50,120,],[68,140,]),'llamafuncpppp':([50,85,],[69,121,]),'maines':([53,],[72,]),'mainf':([53,],[73,]),'bloque':([53,131,135,148,169,180,208,],[75,146,150,162,179,196,214,]),'meteopdores':([58,59,62,63,102,114,115,116,117,142,190,191,],[79,80,81,82,132,136,137,138,139,155,205,206,]),'cuadexpresion':([66,],[84,]),'debug':([72,],[86,]),'bloquep':([76,90,],[88,124,]),'bloqueppp':([76,90,],[89,125,]),'estatuto':([76,90,],[90,90,]),'asignacion':([76,90,],[92,92,]),'condif':([76,90,],[93,93,]),'condwhile':([76,90,],[94,94,]),'conddowhile':([76,90,],[95,95,]),'escritura':([76,90,],[96,96,]),'funcionp':([78,103,],[105,133,]),'funcionpp':([78,103,164,],[106,106,175,]),'outfondo':([83,],[112,]),'expresionp':([84,],[113,]),'llamafuncppp':([85,],[119,]),'salidadoc':([86,],[122,]),'bloquepp':([90,],[123,]),'guardardowhile':([101,],[131,]),'asignacionp':([127,128,],[141,143,]),'guardarsal':([130,],[145,]),'cuadcondif':([144,],[156,]),'escriturap':([147,183,],[159,198,]),'funcionppp':([149,],[163,]),'expresionandor':([155,205,206,],[167,212,213,]),'quadcondwhile':([157,],[170,]),'cuadescritura':([160,],[172,]),'resetmem':([162,204,],[174,211,]),'cuadass':([167,],[177,]),'cuadexpresionandor':([168,],[178,]),'escriturapp':([172,185,],[182,200,]),'cuadescriturastring':([173,],[185,]),'auxandor':([178,],[189,]),'condifp':([179,],[193,]),'quadconddowhile':([181,],[197,]),'funcionpppp':([186,217,],[201,219,]),'cuadrellenoif':([193,],[207,]),'cuadconifelse':([194,],[208,]),'rellenocondwhile':([196,],[209,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc','programa',11,'p_programa','anaSintaxis.py',174),
  ('salidadoc -> <empty>','salidadoc',0,'p_salidadoc','anaSintaxis.py',177),
  ('debug -> <empty>','debug',0,'p_debug','anaSintaxis.py',190),
  ('variable -> varf','variable',1,'p_programa1','anaSintaxis.py',205),
  ('variable -> empty','variable',1,'p_programa1','anaSintaxis.py',206),
  ('funciones -> funcionf','funciones',1,'p_programa2','anaSintaxis.py',210),
  ('funciones -> empty','funciones',1,'p_programa2','anaSintaxis.py',211),
  ('maines -> mainf','maines',1,'p_programa3','anaSintaxis.py',215),
  ('maines -> empty','maines',1,'p_programa3','anaSintaxis.py',216),
  ('varf -> tipo varp','varf',2,'p_variable1','anaSintaxis.py',220),
  ('varp -> ID array varpp','varp',3,'p_variable2','anaSintaxis.py',223),
  ('varp -> ID varid varpp','varp',3,'p_variable2','anaSintaxis.py',224),
  ('varid -> <empty>','varid',0,'p_varid','anaSintaxis.py',228),
  ('varpp -> varppp','varpp',1,'p_variable3','anaSintaxis.py',260),
  ('varppp -> COMMA varp','varppp',2,'p_variable4','anaSintaxis.py',264),
  ('varppp -> SEMICOLON varpppp empty','varppp',3,'p_variable4','anaSintaxis.py',265),
  ('varpppp -> varf','varpppp',1,'p_variable5','anaSintaxis.py',269),
  ('varpppp -> empty','varpppp',1,'p_variable5','anaSintaxis.py',270),
  ('tipo -> INT funciontipo','tipo',2,'p_tipo','anaSintaxis.py',274),
  ('tipo -> FLOAT funciontipo','tipo',2,'p_tipo','anaSintaxis.py',275),
  ('array -> LBRK exp RBRK','array',3,'p_array','anaSintaxis.py',280),
  ('exp -> termino cuadexp auxexp','exp',3,'p_exp','anaSintaxis.py',283),
  ('cuadexp -> <empty>','cuadexp',0,'p_cuadexp','anaSintaxis.py',287),
  ('auxexp -> PLUS meteopdores exp','auxexp',3,'p_auxexp','anaSintaxis.py',327),
  ('auxexp -> MINUS meteopdores exp','auxexp',3,'p_auxexp','anaSintaxis.py',328),
  ('auxexp -> empty','auxexp',1,'p_auxexp','anaSintaxis.py',329),
  ('termino -> factor cuadtermino auxtermino','termino',3,'p_termino','anaSintaxis.py',333),
  ('cuadtermino -> <empty>','cuadtermino',0,'p_cuadtermino','anaSintaxis.py',337),
  ('auxtermino -> MULT meteopdores termino','auxtermino',3,'p_auxtermino','anaSintaxis.py',377),
  ('auxtermino -> SLASH meteopdores termino','auxtermino',3,'p_auxtermino','anaSintaxis.py',378),
  ('auxtermino -> empty','auxtermino',1,'p_auxtermino','anaSintaxis.py',379),
  ('factor -> LPAR infondo expresion RPAR outfondo','factor',5,'p_factor','anaSintaxis.py',383),
  ('factor -> varcte','factor',1,'p_factor','anaSintaxis.py',384),
  ('infondo -> <empty>','infondo',0,'p_infondo','anaSintaxis.py',388),
  ('outfondo -> <empty>','outfondo',0,'p_outfondo','anaSintaxis.py',393),
  ('varcte -> ID meteopandos','varcte',2,'p_varcte','anaSintaxis.py',399),
  ('varcte -> NUMFLOAT meteconst','varcte',2,'p_varcte','anaSintaxis.py',400),
  ('varcte -> NUMINT meteconst','varcte',2,'p_varcte','anaSintaxis.py',401),
  ('varcte -> llamafunc','varcte',1,'p_varcte','anaSintaxis.py',402),
  ('meteconst -> <empty>','meteconst',0,'p_meteconst','anaSintaxis.py',406),
  ('llamafunc -> ID LPAR llamafuncp','llamafunc',3,'p_llamafunc1','anaSintaxis.py',430),
  ('llamafuncp -> llamafuncpp','llamafuncp',1,'p_llamafunc2','anaSintaxis.py',434),
  ('llamafuncp -> llamafuncpppp','llamafuncp',1,'p_llamafunc2','anaSintaxis.py',435),
  ('llamafuncpp -> tipo ID llamafuncppp','llamafuncpp',3,'p_llamafunc3','anaSintaxis.py',439),
  ('llamafuncppp -> COMMA llamafuncpp','llamafuncppp',2,'p_llamafunc4','anaSintaxis.py',442),
  ('llamafuncppp -> llamafuncpppp','llamafuncppp',1,'p_llamafunc4','anaSintaxis.py',443),
  ('llamafuncpppp -> RPAR','llamafuncpppp',1,'p_llamafunc5','anaSintaxis.py',446),
  ('funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp','funcionf',11,'p_funcion1','anaSintaxis.py',451),
  ('funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp','funcionf',14,'p_funcion1','anaSintaxis.py',452),
  ('resetmem -> <empty>','resetmem',0,'p_resetmem','anaSintaxis.py',456),
  ('funciontipo -> <empty>','funciontipo',0,'p_funciontipo','anaSintaxis.py',465),
  ('funcionid -> <empty>','funcionid',0,'p_funcionName','anaSintaxis.py',471),
  ('funcionp -> funcionpp','funcionp',1,'p_funcion3','anaSintaxis.py',484),
  ('funcionp -> empty','funcionp',1,'p_funcion3','anaSintaxis.py',485),
  ('funcionpp -> tipo ID varid funcionppp','funcionpp',4,'p_funcion4','anaSintaxis.py',489),
  ('funcionppp -> COMMA funcionpp','funcionppp',2,'p_funcion5','anaSintaxis.py',493),
  ('funcionppp -> empty','funcionppp',1,'p_funcion5','anaSintaxis.py',494),
  ('funcionpppp -> funcionf','funcionpppp',1,'p_funcion6','anaSintaxis.py',498),
  ('funcionpppp -> empty','funcionpppp',1,'p_funcion6','anaSintaxis.py',499),
  ('bloque -> LKEY bloquep','bloque',2,'p_bloque1','anaSintaxis.py',503),
  ('bloque -> LKEY bloqueppp','bloque',2,'p_bloque1','anaSintaxis.py',504),
  ('bloquep -> estatuto bloquepp','bloquep',2,'p_bloque2','anaSintaxis.py',508),
  ('bloquepp -> bloquep','bloquepp',1,'p_bloque3','anaSintaxis.py',512),
  ('bloquepp -> bloqueppp','bloquepp',1,'p_bloque3','anaSintaxis.py',513),
  ('bloqueppp -> RKEY','bloqueppp',1,'p_bloque4','anaSintaxis.py',517),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','anaSintaxis.py',521),
  ('estatuto -> condif','estatuto',1,'p_estatuto','anaSintaxis.py',522),
  ('estatuto -> condwhile','estatuto',1,'p_estatuto','anaSintaxis.py',523),
  ('estatuto -> conddowhile','estatuto',1,'p_estatuto','anaSintaxis.py',524),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','anaSintaxis.py',525),
  ('estatuto -> llamafunc SEMICOLON','estatuto',2,'p_estatuto','anaSintaxis.py',526),
  ('asignacion -> ID array asignacionp','asignacion',3,'p_asignacion','anaSintaxis.py',530),
  ('asignacion -> ID meteopandos asignacionp','asignacion',3,'p_asignacion','anaSintaxis.py',531),
  ('asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON','asignacionp',5,'p_asignacion2','anaSintaxis.py',535),
  ('expresionandor -> expresion cuadexpresionandor auxandor','expresionandor',3,'p_expresionandor','anaSintaxis.py',539),
  ('cuadexpresionandor -> <empty>','cuadexpresionandor',0,'p_cuadexpresionandor','anaSintaxis.py',543),
  ('auxandor -> AND meteopdores expresionandor','auxandor',3,'p_auxandor','anaSintaxis.py',583),
  ('auxandor -> OR meteopdores expresionandor','auxandor',3,'p_auxandor','anaSintaxis.py',584),
  ('auxandor -> empty','auxandor',1,'p_auxandor','anaSintaxis.py',585),
  ('cuadass -> <empty>','cuadass',0,'p_cuadass','anaSintaxis.py',589),
  ('meteopdores -> <empty>','meteopdores',0,'p_meteopdores','anaSintaxis.py',607),
  ('meteopandos -> <empty>','meteopandos',0,'p_meteopandos','anaSintaxis.py',613),
  ('escritura -> PRINT meteopdores LPAR escriturap','escritura',4,'p_escritura1','anaSintaxis.py',628),
  ('escriturap -> expresion cuadescritura escriturapp','escriturap',3,'p_escritura2','anaSintaxis.py',632),
  ('escriturap -> STRING meteconst cuadescriturastring escriturapp','escriturap',4,'p_escritura2','anaSintaxis.py',633),
  ('cuadescritura -> <empty>','cuadescritura',0,'p_cuadescritura','anaSintaxis.py',637),
  ('cuadescriturastring -> <empty>','cuadescriturastring',0,'p_cuadescriturastring','anaSintaxis.py',650),
  ('escriturapp -> COMMA escriturap','escriturapp',2,'p_escritura3','anaSintaxis.py',662),
  ('escriturapp -> RPAR SEMICOLON','escriturapp',2,'p_escritura3','anaSintaxis.py',663),
  ('condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif','condif',8,'p_condif1','anaSintaxis.py',667),
  ('cuadcondif -> <empty>','cuadcondif',0,'p_cuadcondif','anaSintaxis.py',671),
  ('cuadrellenoif -> <empty>','cuadrellenoif',0,'p_cuadrellenoif','anaSintaxis.py',682),
  ('condifp -> ELSE cuadconifelse bloque SEMICOLON','condifp',4,'p_condif2','anaSintaxis.py',689),
  ('condifp -> SEMICOLON','condifp',1,'p_condif2','anaSintaxis.py',690),
  ('cuadconifelse -> <empty>','cuadconifelse',0,'p_cuadconifelse','anaSintaxis.py',694),
  ('condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON','condwhile',9,'p_condwhile','anaSintaxis.py',705),
  ('guardarsal -> <empty>','guardarsal',0,'p_guardarsal','anaSintaxis.py',709),
  ('quadcondwhile -> <empty>','quadcondwhile',0,'p_quadcondwhile','anaSintaxis.py',714),
  ('rellenocondwhile -> <empty>','rellenocondwhile',0,'p_rellenocondwhile','anaSintaxis.py',725),
  ('conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON','conddowhile',9,'p_conddowhile','anaSintaxis.py',736),
  ('guardardowhile -> <empty>','guardardowhile',0,'p_guardardowhile','anaSintaxis.py',740),
  ('quadconddowhile -> <empty>','quadconddowhile',0,'p_quadconddowhile','anaSintaxis.py',745),
  ('expresion -> exp cuadexpresion expresionp','expresion',3,'p_expresion1','anaSintaxis.py',756),
  ('cuadexpresion -> <empty>','cuadexpresion',0,'p_cuadexpresion','anaSintaxis.py',759),
  ('expresionp -> MORETHAN meteopdores expresion','expresionp',3,'p_expresion2','anaSintaxis.py',832),
  ('expresionp -> LESSTHAN meteopdores expresion','expresionp',3,'p_expresion2','anaSintaxis.py',833),
  ('expresionp -> EQL meteopdores expresion','expresionp',3,'p_expresion2','anaSintaxis.py',834),
  ('expresionp -> NOTEQL meteopdores expresion','expresionp',3,'p_expresion2','anaSintaxis.py',835),
  ('expresionp -> empty','expresionp',1,'p_expresion2','anaSintaxis.py',836),
  ('mainf -> bloque SEMICOLON','mainf',2,'p_main','anaSintaxis.py',841),
  ('empty -> <empty>','empty',0,'p_empty','anaSintaxis.py',850),
]
