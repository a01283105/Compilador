Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug
Rule 2     debug -> <empty>
Rule 3     variable -> varf
Rule 4     variable -> empty
Rule 5     funciones -> funcionf
Rule 6     funciones -> empty
Rule 7     maines -> mainf
Rule 8     maines -> empty
Rule 9     varf -> tipo varp
Rule 10    varp -> ID array varpp
Rule 11    varp -> ID varid varpp
Rule 12    varid -> <empty>
Rule 13    varpp -> varppp
Rule 14    varppp -> COMMA varp
Rule 15    varppp -> SEMICOLON varpppp empty
Rule 16    varpppp -> varf
Rule 17    varpppp -> empty
Rule 18    tipo -> INT funciontipo
Rule 19    tipo -> FLOAT funciontipo
Rule 20    array -> LBRK exp RBRK
Rule 21    exp -> termino cuadexp auxexp
Rule 22    cuadexp -> <empty>
Rule 23    auxexp -> PLUS meteopdores exp
Rule 24    auxexp -> MINUS meteopdores exp
Rule 25    auxexp -> empty
Rule 26    termino -> factor cuadtermino auxtermino
Rule 27    cuadtermino -> <empty>
Rule 28    auxtermino -> MULT meteopdores termino
Rule 29    auxtermino -> SLASH meteopdores termino
Rule 30    auxtermino -> empty
Rule 31    factor -> LPAR expresionandor RPAR
Rule 32    factor -> varcte
Rule 33    varcte -> ID meteopandos
Rule 34    varcte -> NUMFLOAT meteconst
Rule 35    varcte -> NUMINT meteconst
Rule 36    varcte -> llamafunc
Rule 37    meteconst -> <empty>
Rule 38    llamafunc -> ID LPAR llamafuncp
Rule 39    llamafuncp -> llamafuncpp
Rule 40    llamafuncp -> llamafuncpppp
Rule 41    llamafuncpp -> tipo ID llamafuncppp
Rule 42    llamafuncppp -> COMMA llamafuncpp
Rule 43    llamafuncppp -> llamafuncpppp
Rule 44    llamafuncpppp -> RPAR
Rule 45    funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque SEMICOLON funcionpppp
Rule 46    funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR SEMICOLON funcionpppp
Rule 47    funciontipo -> <empty>
Rule 48    funcionid -> <empty>
Rule 49    funcionp -> funcionpp
Rule 50    funcionp -> empty
Rule 51    funcionpp -> tipo ID varid funcionppp
Rule 52    funcionppp -> COMMA funcionpp
Rule 53    funcionppp -> empty
Rule 54    funcionpppp -> funcionf
Rule 55    funcionpppp -> empty
Rule 56    bloque -> LKEY bloquep
Rule 57    bloque -> LKEY bloqueppp
Rule 58    bloquep -> estatuto bloquepp
Rule 59    bloquepp -> bloquep
Rule 60    bloquepp -> bloqueppp
Rule 61    bloqueppp -> RKEY
Rule 62    estatuto -> asignacion
Rule 63    estatuto -> condif
Rule 64    estatuto -> condwhile
Rule 65    estatuto -> conddowhile
Rule 66    estatuto -> escritura
Rule 67    estatuto -> llamafunc SEMICOLON
Rule 68    asignacion -> ID array asignacionp
Rule 69    asignacion -> ID meteopandos asignacionp
Rule 70    asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON
Rule 71    expresionandor -> expresion cuadexpresionandor auxandor
Rule 72    cuadexpresionandor -> <empty>
Rule 73    auxandor -> AND meteopdores expresionandor
Rule 74    auxandor -> OR meteopdores expresionandor
Rule 75    auxandor -> empty
Rule 76    cuadass -> <empty>
Rule 77    meteopdores -> <empty>
Rule 78    meteopandos -> <empty>
Rule 79    escritura -> PRINT meteopdores LPAR escriturap
Rule 80    escriturap -> expresion cuadescritura escriturapp
Rule 81    escriturap -> STRING escriturapp
Rule 82    cuadescritura -> <empty>
Rule 83    escriturapp -> COMMA escriturap
Rule 84    escriturapp -> RPAR SEMICOLON
Rule 85    condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif
Rule 86    cuadcondif -> <empty>
Rule 87    cuadrellenoif -> <empty>
Rule 88    condifp -> ELSE cuadconifelse bloque SEMICOLON
Rule 89    condifp -> SEMICOLON
Rule 90    cuadconifelse -> <empty>
Rule 91    condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
Rule 92    guardarsal -> <empty>
Rule 93    quadcondwhile -> <empty>
Rule 94    rellenocondwhile -> <empty>
Rule 95    conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
Rule 96    guardardowhile -> <empty>
Rule 97    quadconddowhile -> <empty>
Rule 98    expresion -> exp cuadexpresion expresionp
Rule 99    cuadexpresion -> <empty>
Rule 100   expresionp -> MORETHAN meteopdores expresion
Rule 101   expresionp -> LESSTHAN meteopdores expresion
Rule 102   expresionp -> EQL meteopdores expresion
Rule 103   expresionp -> NOTEQL meteopdores expresion
Rule 104   expresionp -> empty
Rule 105   mainf -> bloque SEMICOLON
Rule 106   empty -> <empty>

Terminals, with rules where they appear

AEQL                 : 70
AND                  : 73
COMMA                : 14 42 52 83
DO                   : 95
ELSE                 : 88
EQL                  : 102
FLOAT                : 19
FUNC                 : 1
ID                   : 10 11 33 38 41 45 46 51 68 69
IF                   : 85
INT                  : 18
LBRK                 : 20
LESSTHAN             : 101
LKEY                 : 56 57
LPAR                 : 31 38 45 46 46 79 85 91 95
MAIN                 : 1
MINUS                : 24
MORETHAN             : 100
MULT                 : 28
NOTEQL               : 103
NUMFLOAT             : 34
NUMINT               : 35
OR                   : 74
PLUS                 : 23
PRINT                : 79
RBRK                 : 20
RETURN               : 46
RKEY                 : 61
RPAR                 : 31 44 45 46 46 84 85 91 95
SEMICOLON            : 1 1 1 15 45 46 67 70 84 88 89 91 95 105
SLASH                : 29
STRING               : 81
VAR                  : 1
VOID                 : 45
WHILE                : 91 95
error                : 

Nonterminals, with rules where they appear

array                : 10 68
asignacion           : 62
asignacionp          : 68 69
auxandor             : 71
auxexp               : 21
auxtermino           : 26
bloque               : 45 46 85 88 91 95 105
bloquep              : 56 59
bloquepp             : 58
bloqueppp            : 57 60
conddowhile          : 65
condif               : 63
condifp              : 85
condwhile            : 64
cuadass              : 70
cuadcondif           : 85
cuadconifelse        : 88
cuadescritura        : 80
cuadexp              : 21
cuadexpresion        : 98
cuadexpresionandor   : 71
cuadrellenoif        : 85
cuadtermino          : 26
debug                : 1
empty                : 4 6 8 15 17 25 30 50 53 55 75 104
escritura            : 66
escriturap           : 79 83
escriturapp          : 80 81
estatuto             : 58
exp                  : 20 23 24 46 98
expresion            : 71 80 85 91 95 100 101 102 103
expresionandor       : 31 70 73 74
expresionp           : 98
factor               : 26
funciones            : 1
funcionf             : 5 54
funcionid            : 45 46
funcionp             : 45 46
funcionpp            : 49 52
funcionppp           : 51
funcionpppp          : 45 46
funciontipo          : 18 19 45
guardardowhile       : 95
guardarsal           : 91
llamafunc            : 36 67
llamafuncp           : 38
llamafuncpp          : 39 42
llamafuncppp         : 41
llamafuncpppp        : 40 43
maines               : 1
mainf                : 7
meteconst            : 34 35
meteopandos          : 33 69
meteopdores          : 23 24 28 29 70 73 74 79 100 101 102 103
programa             : 0
quadconddowhile      : 95
quadcondwhile        : 91
rellenocondwhile     : 91
termino              : 21 28 29
tipo                 : 9 41 46 51
varcte               : 32
varf                 : 3 16
variable             : 1
varid                : 11 51
varp                 : 9 14
varpp                : 10 11
varppp               : 13
varpppp              : 15

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug

    VAR             shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> VAR . SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug

    SEMICOLON       shift and go to state 3


state 3

    (1) programa -> VAR SEMICOLON . variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug
    (3) variable -> . varf
    (4) variable -> . empty
    (9) varf -> . tipo varp
    (106) empty -> .
    (18) tipo -> . INT funciontipo
    (19) tipo -> . FLOAT funciontipo

    FUNC            reduce using rule 106 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    variable                       shift and go to state 4
    varf                           shift and go to state 5
    empty                          shift and go to state 6
    tipo                           shift and go to state 7

state 4

    (1) programa -> VAR SEMICOLON variable . FUNC SEMICOLON funciones MAIN SEMICOLON maines debug

    FUNC            shift and go to state 10


state 5

    (3) variable -> varf .

    FUNC            reduce using rule 3 (variable -> varf .)


state 6

    (4) variable -> empty .

    FUNC            reduce using rule 4 (variable -> empty .)


state 7

    (9) varf -> tipo . varp
    (10) varp -> . ID array varpp
    (11) varp -> . ID varid varpp

    ID              shift and go to state 12

    varp                           shift and go to state 11

state 8

    (18) tipo -> INT . funciontipo
    (47) funciontipo -> .

    ID              reduce using rule 47 (funciontipo -> .)

    funciontipo                    shift and go to state 13

state 9

    (19) tipo -> FLOAT . funciontipo
    (47) funciontipo -> .

    ID              reduce using rule 47 (funciontipo -> .)

    funciontipo                    shift and go to state 14

state 10

    (1) programa -> VAR SEMICOLON variable FUNC . SEMICOLON funciones MAIN SEMICOLON maines debug

    SEMICOLON       shift and go to state 15


state 11

    (9) varf -> tipo varp .

    FUNC            reduce using rule 9 (varf -> tipo varp .)


state 12

    (10) varp -> ID . array varpp
    (11) varp -> ID . varid varpp
    (20) array -> . LBRK exp RBRK
    (12) varid -> .

    LBRK            shift and go to state 18
    COMMA           reduce using rule 12 (varid -> .)
    SEMICOLON       reduce using rule 12 (varid -> .)

    array                          shift and go to state 16
    varid                          shift and go to state 17

state 13

    (18) tipo -> INT funciontipo .

    ID              reduce using rule 18 (tipo -> INT funciontipo .)


state 14

    (19) tipo -> FLOAT funciontipo .

    ID              reduce using rule 19 (tipo -> FLOAT funciontipo .)


state 15

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON . funciones MAIN SEMICOLON maines debug
    (5) funciones -> . funcionf
    (6) funciones -> . empty
    (45) funcionf -> . VOID funciontipo ID funcionid LPAR funcionp RPAR bloque SEMICOLON funcionpppp
    (46) funcionf -> . tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR SEMICOLON funcionpppp
    (106) empty -> .
    (18) tipo -> . INT funciontipo
    (19) tipo -> . FLOAT funciontipo

    VOID            shift and go to state 22
    MAIN            reduce using rule 106 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funciones                      shift and go to state 19
    funcionf                       shift and go to state 20
    empty                          shift and go to state 21
    tipo                           shift and go to state 23

state 16

    (10) varp -> ID array . varpp
    (13) varpp -> . varppp
    (14) varppp -> . COMMA varp
    (15) varppp -> . SEMICOLON varpppp empty

    COMMA           shift and go to state 26
    SEMICOLON       shift and go to state 27

    varpp                          shift and go to state 24
    varppp                         shift and go to state 25

state 17

    (11) varp -> ID varid . varpp
    (13) varpp -> . varppp
    (14) varppp -> . COMMA varp
    (15) varppp -> . SEMICOLON varpppp empty

    COMMA           shift and go to state 26
    SEMICOLON       shift and go to state 27

    varpp                          shift and go to state 28
    varppp                         shift and go to state 25

state 18

    (20) array -> LBRK . exp RBRK
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 29
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 19

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones . MAIN SEMICOLON maines debug

    MAIN            shift and go to state 38


state 20

    (5) funciones -> funcionf .

    MAIN            reduce using rule 5 (funciones -> funcionf .)


state 21

    (6) funciones -> empty .

    MAIN            reduce using rule 6 (funciones -> empty .)


state 22

    (45) funcionf -> VOID . funciontipo ID funcionid LPAR funcionp RPAR bloque SEMICOLON funcionpppp
    (47) funciontipo -> .

    ID              reduce using rule 47 (funciontipo -> .)

    funciontipo                    shift and go to state 39

state 23

    (46) funcionf -> tipo . ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR SEMICOLON funcionpppp

    ID              shift and go to state 40


state 24

    (10) varp -> ID array varpp .

    FUNC            reduce using rule 10 (varp -> ID array varpp .)


state 25

    (13) varpp -> varppp .

    FUNC            reduce using rule 13 (varpp -> varppp .)


state 26

    (14) varppp -> COMMA . varp
    (10) varp -> . ID array varpp
    (11) varp -> . ID varid varpp

    ID              shift and go to state 12

    varp                           shift and go to state 41

state 27

    (15) varppp -> SEMICOLON . varpppp empty
    (16) varpppp -> . varf
    (17) varpppp -> . empty
    (9) varf -> . tipo varp
    (106) empty -> .
    (18) tipo -> . INT funciontipo
    (19) tipo -> . FLOAT funciontipo

    FUNC            reduce using rule 106 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    varpppp                        shift and go to state 42
    empty                          shift and go to state 43
    varf                           shift and go to state 44
    tipo                           shift and go to state 7

state 28

    (11) varp -> ID varid varpp .

    FUNC            reduce using rule 11 (varp -> ID varid varpp .)


state 29

    (20) array -> LBRK exp . RBRK

    RBRK            shift and go to state 45


state 30

    (21) exp -> termino . cuadexp auxexp
    (22) cuadexp -> .

    PLUS            reduce using rule 22 (cuadexp -> .)
    MINUS           reduce using rule 22 (cuadexp -> .)
    RBRK            reduce using rule 22 (cuadexp -> .)
    MORETHAN        reduce using rule 22 (cuadexp -> .)
    LESSTHAN        reduce using rule 22 (cuadexp -> .)
    EQL             reduce using rule 22 (cuadexp -> .)
    NOTEQL          reduce using rule 22 (cuadexp -> .)
    AND             reduce using rule 22 (cuadexp -> .)
    OR              reduce using rule 22 (cuadexp -> .)
    RPAR            reduce using rule 22 (cuadexp -> .)
    SEMICOLON       reduce using rule 22 (cuadexp -> .)
    COMMA           reduce using rule 22 (cuadexp -> .)

    cuadexp                        shift and go to state 46

state 31

    (26) termino -> factor . cuadtermino auxtermino
    (27) cuadtermino -> .

    MULT            reduce using rule 27 (cuadtermino -> .)
    SLASH           reduce using rule 27 (cuadtermino -> .)
    PLUS            reduce using rule 27 (cuadtermino -> .)
    MINUS           reduce using rule 27 (cuadtermino -> .)
    RBRK            reduce using rule 27 (cuadtermino -> .)
    MORETHAN        reduce using rule 27 (cuadtermino -> .)
    LESSTHAN        reduce using rule 27 (cuadtermino -> .)
    EQL             reduce using rule 27 (cuadtermino -> .)
    NOTEQL          reduce using rule 27 (cuadtermino -> .)
    AND             reduce using rule 27 (cuadtermino -> .)
    OR              reduce using rule 27 (cuadtermino -> .)
    RPAR            reduce using rule 27 (cuadtermino -> .)
    SEMICOLON       reduce using rule 27 (cuadtermino -> .)
    COMMA           reduce using rule 27 (cuadtermino -> .)

    cuadtermino                    shift and go to state 47

state 32

    (31) factor -> LPAR . expresionandor RPAR
    (71) expresionandor -> . expresion cuadexpresionandor auxandor
    (98) expresion -> . exp cuadexpresion expresionp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 48
    expresion                      shift and go to state 49
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 33

    (32) factor -> varcte .

    MULT            reduce using rule 32 (factor -> varcte .)
    SLASH           reduce using rule 32 (factor -> varcte .)
    PLUS            reduce using rule 32 (factor -> varcte .)
    MINUS           reduce using rule 32 (factor -> varcte .)
    RBRK            reduce using rule 32 (factor -> varcte .)
    MORETHAN        reduce using rule 32 (factor -> varcte .)
    LESSTHAN        reduce using rule 32 (factor -> varcte .)
    EQL             reduce using rule 32 (factor -> varcte .)
    NOTEQL          reduce using rule 32 (factor -> varcte .)
    AND             reduce using rule 32 (factor -> varcte .)
    OR              reduce using rule 32 (factor -> varcte .)
    RPAR            reduce using rule 32 (factor -> varcte .)
    SEMICOLON       reduce using rule 32 (factor -> varcte .)
    COMMA           reduce using rule 32 (factor -> varcte .)


state 34

    (33) varcte -> ID . meteopandos
    (38) llamafunc -> ID . LPAR llamafuncp
    (78) meteopandos -> .

    LPAR            shift and go to state 52
    MULT            reduce using rule 78 (meteopandos -> .)
    SLASH           reduce using rule 78 (meteopandos -> .)
    PLUS            reduce using rule 78 (meteopandos -> .)
    MINUS           reduce using rule 78 (meteopandos -> .)
    RBRK            reduce using rule 78 (meteopandos -> .)
    MORETHAN        reduce using rule 78 (meteopandos -> .)
    LESSTHAN        reduce using rule 78 (meteopandos -> .)
    EQL             reduce using rule 78 (meteopandos -> .)
    NOTEQL          reduce using rule 78 (meteopandos -> .)
    AND             reduce using rule 78 (meteopandos -> .)
    OR              reduce using rule 78 (meteopandos -> .)
    RPAR            reduce using rule 78 (meteopandos -> .)
    SEMICOLON       reduce using rule 78 (meteopandos -> .)
    COMMA           reduce using rule 78 (meteopandos -> .)

    meteopandos                    shift and go to state 51

state 35

    (34) varcte -> NUMFLOAT . meteconst
    (37) meteconst -> .

    MULT            reduce using rule 37 (meteconst -> .)
    SLASH           reduce using rule 37 (meteconst -> .)
    PLUS            reduce using rule 37 (meteconst -> .)
    MINUS           reduce using rule 37 (meteconst -> .)
    RBRK            reduce using rule 37 (meteconst -> .)
    MORETHAN        reduce using rule 37 (meteconst -> .)
    LESSTHAN        reduce using rule 37 (meteconst -> .)
    EQL             reduce using rule 37 (meteconst -> .)
    NOTEQL          reduce using rule 37 (meteconst -> .)
    AND             reduce using rule 37 (meteconst -> .)
    OR              reduce using rule 37 (meteconst -> .)
    RPAR            reduce using rule 37 (meteconst -> .)
    SEMICOLON       reduce using rule 37 (meteconst -> .)
    COMMA           reduce using rule 37 (meteconst -> .)

    meteconst                      shift and go to state 53

state 36

    (35) varcte -> NUMINT . meteconst
    (37) meteconst -> .

    MULT            reduce using rule 37 (meteconst -> .)
    SLASH           reduce using rule 37 (meteconst -> .)
    PLUS            reduce using rule 37 (meteconst -> .)
    MINUS           reduce using rule 37 (meteconst -> .)
    RBRK            reduce using rule 37 (meteconst -> .)
    MORETHAN        reduce using rule 37 (meteconst -> .)
    LESSTHAN        reduce using rule 37 (meteconst -> .)
    EQL             reduce using rule 37 (meteconst -> .)
    NOTEQL          reduce using rule 37 (meteconst -> .)
    AND             reduce using rule 37 (meteconst -> .)
    OR              reduce using rule 37 (meteconst -> .)
    RPAR            reduce using rule 37 (meteconst -> .)
    SEMICOLON       reduce using rule 37 (meteconst -> .)
    COMMA           reduce using rule 37 (meteconst -> .)

    meteconst                      shift and go to state 54

state 37

    (36) varcte -> llamafunc .

    MULT            reduce using rule 36 (varcte -> llamafunc .)
    SLASH           reduce using rule 36 (varcte -> llamafunc .)
    PLUS            reduce using rule 36 (varcte -> llamafunc .)
    MINUS           reduce using rule 36 (varcte -> llamafunc .)
    RBRK            reduce using rule 36 (varcte -> llamafunc .)
    MORETHAN        reduce using rule 36 (varcte -> llamafunc .)
    LESSTHAN        reduce using rule 36 (varcte -> llamafunc .)
    EQL             reduce using rule 36 (varcte -> llamafunc .)
    NOTEQL          reduce using rule 36 (varcte -> llamafunc .)
    AND             reduce using rule 36 (varcte -> llamafunc .)
    OR              reduce using rule 36 (varcte -> llamafunc .)
    RPAR            reduce using rule 36 (varcte -> llamafunc .)
    SEMICOLON       reduce using rule 36 (varcte -> llamafunc .)
    COMMA           reduce using rule 36 (varcte -> llamafunc .)


state 38

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN . SEMICOLON maines debug

    SEMICOLON       shift and go to state 55


state 39

    (45) funcionf -> VOID funciontipo . ID funcionid LPAR funcionp RPAR bloque SEMICOLON funcionpppp

    ID              shift and go to state 56


state 40

    (46) funcionf -> tipo ID . funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR SEMICOLON funcionpppp
    (48) funcionid -> .

    LPAR            reduce using rule 48 (funcionid -> .)

    funcionid                      shift and go to state 57

state 41

    (14) varppp -> COMMA varp .

    FUNC            reduce using rule 14 (varppp -> COMMA varp .)


state 42

    (15) varppp -> SEMICOLON varpppp . empty
    (106) empty -> .

    FUNC            reduce using rule 106 (empty -> .)

    empty                          shift and go to state 58

state 43

    (17) varpppp -> empty .

    FUNC            reduce using rule 17 (varpppp -> empty .)


state 44

    (16) varpppp -> varf .

    FUNC            reduce using rule 16 (varpppp -> varf .)


state 45

    (20) array -> LBRK exp RBRK .

    COMMA           reduce using rule 20 (array -> LBRK exp RBRK .)
    SEMICOLON       reduce using rule 20 (array -> LBRK exp RBRK .)
    AEQL            reduce using rule 20 (array -> LBRK exp RBRK .)


state 46

    (21) exp -> termino cuadexp . auxexp
    (23) auxexp -> . PLUS meteopdores exp
    (24) auxexp -> . MINUS meteopdores exp
    (25) auxexp -> . empty
    (106) empty -> .

    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    RBRK            reduce using rule 106 (empty -> .)
    MORETHAN        reduce using rule 106 (empty -> .)
    LESSTHAN        reduce using rule 106 (empty -> .)
    EQL             reduce using rule 106 (empty -> .)
    NOTEQL          reduce using rule 106 (empty -> .)
    AND             reduce using rule 106 (empty -> .)
    OR              reduce using rule 106 (empty -> .)
    RPAR            reduce using rule 106 (empty -> .)
    SEMICOLON       reduce using rule 106 (empty -> .)
    COMMA           reduce using rule 106 (empty -> .)

    auxexp                         shift and go to state 59
    empty                          shift and go to state 62

state 47

    (26) termino -> factor cuadtermino . auxtermino
    (28) auxtermino -> . MULT meteopdores termino
    (29) auxtermino -> . SLASH meteopdores termino
    (30) auxtermino -> . empty
    (106) empty -> .

    MULT            shift and go to state 64
    SLASH           shift and go to state 65
    PLUS            reduce using rule 106 (empty -> .)
    MINUS           reduce using rule 106 (empty -> .)
    RBRK            reduce using rule 106 (empty -> .)
    MORETHAN        reduce using rule 106 (empty -> .)
    LESSTHAN        reduce using rule 106 (empty -> .)
    EQL             reduce using rule 106 (empty -> .)
    NOTEQL          reduce using rule 106 (empty -> .)
    AND             reduce using rule 106 (empty -> .)
    OR              reduce using rule 106 (empty -> .)
    RPAR            reduce using rule 106 (empty -> .)
    SEMICOLON       reduce using rule 106 (empty -> .)
    COMMA           reduce using rule 106 (empty -> .)

    auxtermino                     shift and go to state 63
    empty                          shift and go to state 66

state 48

    (31) factor -> LPAR expresionandor . RPAR

    RPAR            shift and go to state 67


state 49

    (71) expresionandor -> expresion . cuadexpresionandor auxandor
    (72) cuadexpresionandor -> .

    AND             reduce using rule 72 (cuadexpresionandor -> .)
    OR              reduce using rule 72 (cuadexpresionandor -> .)
    RPAR            reduce using rule 72 (cuadexpresionandor -> .)
    SEMICOLON       reduce using rule 72 (cuadexpresionandor -> .)

    cuadexpresionandor             shift and go to state 68

state 50

    (98) expresion -> exp . cuadexpresion expresionp
    (99) cuadexpresion -> .

    MORETHAN        reduce using rule 99 (cuadexpresion -> .)
    LESSTHAN        reduce using rule 99 (cuadexpresion -> .)
    EQL             reduce using rule 99 (cuadexpresion -> .)
    NOTEQL          reduce using rule 99 (cuadexpresion -> .)
    AND             reduce using rule 99 (cuadexpresion -> .)
    OR              reduce using rule 99 (cuadexpresion -> .)
    RPAR            reduce using rule 99 (cuadexpresion -> .)
    SEMICOLON       reduce using rule 99 (cuadexpresion -> .)
    COMMA           reduce using rule 99 (cuadexpresion -> .)

    cuadexpresion                  shift and go to state 69

state 51

    (33) varcte -> ID meteopandos .

    MULT            reduce using rule 33 (varcte -> ID meteopandos .)
    SLASH           reduce using rule 33 (varcte -> ID meteopandos .)
    PLUS            reduce using rule 33 (varcte -> ID meteopandos .)
    MINUS           reduce using rule 33 (varcte -> ID meteopandos .)
    RBRK            reduce using rule 33 (varcte -> ID meteopandos .)
    MORETHAN        reduce using rule 33 (varcte -> ID meteopandos .)
    LESSTHAN        reduce using rule 33 (varcte -> ID meteopandos .)
    EQL             reduce using rule 33 (varcte -> ID meteopandos .)
    NOTEQL          reduce using rule 33 (varcte -> ID meteopandos .)
    AND             reduce using rule 33 (varcte -> ID meteopandos .)
    OR              reduce using rule 33 (varcte -> ID meteopandos .)
    RPAR            reduce using rule 33 (varcte -> ID meteopandos .)
    SEMICOLON       reduce using rule 33 (varcte -> ID meteopandos .)
    COMMA           reduce using rule 33 (varcte -> ID meteopandos .)


state 52

    (38) llamafunc -> ID LPAR . llamafuncp
    (39) llamafuncp -> . llamafuncpp
    (40) llamafuncp -> . llamafuncpppp
    (41) llamafuncpp -> . tipo ID llamafuncppp
    (44) llamafuncpppp -> . RPAR
    (18) tipo -> . INT funciontipo
    (19) tipo -> . FLOAT funciontipo

    RPAR            shift and go to state 74
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    llamafuncp                     shift and go to state 70
    llamafuncpp                    shift and go to state 71
    llamafuncpppp                  shift and go to state 72
    tipo                           shift and go to state 73

state 53

    (34) varcte -> NUMFLOAT meteconst .

    MULT            reduce using rule 34 (varcte -> NUMFLOAT meteconst .)
    SLASH           reduce using rule 34 (varcte -> NUMFLOAT meteconst .)
    PLUS            reduce using rule 34 (varcte -> NUMFLOAT meteconst .)
    MINUS           reduce using rule 34 (varcte -> NUMFLOAT meteconst .)
    RBRK            reduce using rule 34 (varcte -> NUMFLOAT meteconst .)
    MORETHAN        reduce using rule 34 (varcte -> NUMFLOAT meteconst .)
    LESSTHAN        reduce using rule 34 (varcte -> NUMFLOAT meteconst .)
    EQL             reduce using rule 34 (varcte -> NUMFLOAT meteconst .)
    NOTEQL          reduce using rule 34 (varcte -> NUMFLOAT meteconst .)
    AND             reduce using rule 34 (varcte -> NUMFLOAT meteconst .)
    OR              reduce using rule 34 (varcte -> NUMFLOAT meteconst .)
    RPAR            reduce using rule 34 (varcte -> NUMFLOAT meteconst .)
    SEMICOLON       reduce using rule 34 (varcte -> NUMFLOAT meteconst .)
    COMMA           reduce using rule 34 (varcte -> NUMFLOAT meteconst .)


state 54

    (35) varcte -> NUMINT meteconst .

    MULT            reduce using rule 35 (varcte -> NUMINT meteconst .)
    SLASH           reduce using rule 35 (varcte -> NUMINT meteconst .)
    PLUS            reduce using rule 35 (varcte -> NUMINT meteconst .)
    MINUS           reduce using rule 35 (varcte -> NUMINT meteconst .)
    RBRK            reduce using rule 35 (varcte -> NUMINT meteconst .)
    MORETHAN        reduce using rule 35 (varcte -> NUMINT meteconst .)
    LESSTHAN        reduce using rule 35 (varcte -> NUMINT meteconst .)
    EQL             reduce using rule 35 (varcte -> NUMINT meteconst .)
    NOTEQL          reduce using rule 35 (varcte -> NUMINT meteconst .)
    AND             reduce using rule 35 (varcte -> NUMINT meteconst .)
    OR              reduce using rule 35 (varcte -> NUMINT meteconst .)
    RPAR            reduce using rule 35 (varcte -> NUMINT meteconst .)
    SEMICOLON       reduce using rule 35 (varcte -> NUMINT meteconst .)
    COMMA           reduce using rule 35 (varcte -> NUMINT meteconst .)


state 55

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON . maines debug
    (7) maines -> . mainf
    (8) maines -> . empty
    (105) mainf -> . bloque SEMICOLON
    (106) empty -> .
    (56) bloque -> . LKEY bloquep
    (57) bloque -> . LKEY bloqueppp

    $end            reduce using rule 106 (empty -> .)
    LKEY            shift and go to state 79

    maines                         shift and go to state 75
    mainf                          shift and go to state 76
    empty                          shift and go to state 77
    bloque                         shift and go to state 78

state 56

    (45) funcionf -> VOID funciontipo ID . funcionid LPAR funcionp RPAR bloque SEMICOLON funcionpppp
    (48) funcionid -> .

    LPAR            reduce using rule 48 (funcionid -> .)

    funcionid                      shift and go to state 80

state 57

    (46) funcionf -> tipo ID funcionid . LPAR funcionp RPAR bloque RETURN LPAR exp RPAR SEMICOLON funcionpppp

    LPAR            shift and go to state 81


state 58

    (15) varppp -> SEMICOLON varpppp empty .

    FUNC            reduce using rule 15 (varppp -> SEMICOLON varpppp empty .)


state 59

    (21) exp -> termino cuadexp auxexp .

    RBRK            reduce using rule 21 (exp -> termino cuadexp auxexp .)
    MORETHAN        reduce using rule 21 (exp -> termino cuadexp auxexp .)
    LESSTHAN        reduce using rule 21 (exp -> termino cuadexp auxexp .)
    EQL             reduce using rule 21 (exp -> termino cuadexp auxexp .)
    NOTEQL          reduce using rule 21 (exp -> termino cuadexp auxexp .)
    AND             reduce using rule 21 (exp -> termino cuadexp auxexp .)
    OR              reduce using rule 21 (exp -> termino cuadexp auxexp .)
    RPAR            reduce using rule 21 (exp -> termino cuadexp auxexp .)
    SEMICOLON       reduce using rule 21 (exp -> termino cuadexp auxexp .)
    COMMA           reduce using rule 21 (exp -> termino cuadexp auxexp .)


state 60

    (23) auxexp -> PLUS . meteopdores exp
    (77) meteopdores -> .

    LPAR            reduce using rule 77 (meteopdores -> .)
    ID              reduce using rule 77 (meteopdores -> .)
    NUMFLOAT        reduce using rule 77 (meteopdores -> .)
    NUMINT          reduce using rule 77 (meteopdores -> .)

    meteopdores                    shift and go to state 82

state 61

    (24) auxexp -> MINUS . meteopdores exp
    (77) meteopdores -> .

    LPAR            reduce using rule 77 (meteopdores -> .)
    ID              reduce using rule 77 (meteopdores -> .)
    NUMFLOAT        reduce using rule 77 (meteopdores -> .)
    NUMINT          reduce using rule 77 (meteopdores -> .)

    meteopdores                    shift and go to state 83

state 62

    (25) auxexp -> empty .

    RBRK            reduce using rule 25 (auxexp -> empty .)
    MORETHAN        reduce using rule 25 (auxexp -> empty .)
    LESSTHAN        reduce using rule 25 (auxexp -> empty .)
    EQL             reduce using rule 25 (auxexp -> empty .)
    NOTEQL          reduce using rule 25 (auxexp -> empty .)
    AND             reduce using rule 25 (auxexp -> empty .)
    OR              reduce using rule 25 (auxexp -> empty .)
    RPAR            reduce using rule 25 (auxexp -> empty .)
    SEMICOLON       reduce using rule 25 (auxexp -> empty .)
    COMMA           reduce using rule 25 (auxexp -> empty .)


state 63

    (26) termino -> factor cuadtermino auxtermino .

    PLUS            reduce using rule 26 (termino -> factor cuadtermino auxtermino .)
    MINUS           reduce using rule 26 (termino -> factor cuadtermino auxtermino .)
    RBRK            reduce using rule 26 (termino -> factor cuadtermino auxtermino .)
    MORETHAN        reduce using rule 26 (termino -> factor cuadtermino auxtermino .)
    LESSTHAN        reduce using rule 26 (termino -> factor cuadtermino auxtermino .)
    EQL             reduce using rule 26 (termino -> factor cuadtermino auxtermino .)
    NOTEQL          reduce using rule 26 (termino -> factor cuadtermino auxtermino .)
    AND             reduce using rule 26 (termino -> factor cuadtermino auxtermino .)
    OR              reduce using rule 26 (termino -> factor cuadtermino auxtermino .)
    RPAR            reduce using rule 26 (termino -> factor cuadtermino auxtermino .)
    SEMICOLON       reduce using rule 26 (termino -> factor cuadtermino auxtermino .)
    COMMA           reduce using rule 26 (termino -> factor cuadtermino auxtermino .)


state 64

    (28) auxtermino -> MULT . meteopdores termino
    (77) meteopdores -> .

    LPAR            reduce using rule 77 (meteopdores -> .)
    ID              reduce using rule 77 (meteopdores -> .)
    NUMFLOAT        reduce using rule 77 (meteopdores -> .)
    NUMINT          reduce using rule 77 (meteopdores -> .)

    meteopdores                    shift and go to state 84

state 65

    (29) auxtermino -> SLASH . meteopdores termino
    (77) meteopdores -> .

    LPAR            reduce using rule 77 (meteopdores -> .)
    ID              reduce using rule 77 (meteopdores -> .)
    NUMFLOAT        reduce using rule 77 (meteopdores -> .)
    NUMINT          reduce using rule 77 (meteopdores -> .)

    meteopdores                    shift and go to state 85

state 66

    (30) auxtermino -> empty .

    PLUS            reduce using rule 30 (auxtermino -> empty .)
    MINUS           reduce using rule 30 (auxtermino -> empty .)
    RBRK            reduce using rule 30 (auxtermino -> empty .)
    MORETHAN        reduce using rule 30 (auxtermino -> empty .)
    LESSTHAN        reduce using rule 30 (auxtermino -> empty .)
    EQL             reduce using rule 30 (auxtermino -> empty .)
    NOTEQL          reduce using rule 30 (auxtermino -> empty .)
    AND             reduce using rule 30 (auxtermino -> empty .)
    OR              reduce using rule 30 (auxtermino -> empty .)
    RPAR            reduce using rule 30 (auxtermino -> empty .)
    SEMICOLON       reduce using rule 30 (auxtermino -> empty .)
    COMMA           reduce using rule 30 (auxtermino -> empty .)


state 67

    (31) factor -> LPAR expresionandor RPAR .

    MULT            reduce using rule 31 (factor -> LPAR expresionandor RPAR .)
    SLASH           reduce using rule 31 (factor -> LPAR expresionandor RPAR .)
    PLUS            reduce using rule 31 (factor -> LPAR expresionandor RPAR .)
    MINUS           reduce using rule 31 (factor -> LPAR expresionandor RPAR .)
    RBRK            reduce using rule 31 (factor -> LPAR expresionandor RPAR .)
    MORETHAN        reduce using rule 31 (factor -> LPAR expresionandor RPAR .)
    LESSTHAN        reduce using rule 31 (factor -> LPAR expresionandor RPAR .)
    EQL             reduce using rule 31 (factor -> LPAR expresionandor RPAR .)
    NOTEQL          reduce using rule 31 (factor -> LPAR expresionandor RPAR .)
    AND             reduce using rule 31 (factor -> LPAR expresionandor RPAR .)
    OR              reduce using rule 31 (factor -> LPAR expresionandor RPAR .)
    RPAR            reduce using rule 31 (factor -> LPAR expresionandor RPAR .)
    SEMICOLON       reduce using rule 31 (factor -> LPAR expresionandor RPAR .)
    COMMA           reduce using rule 31 (factor -> LPAR expresionandor RPAR .)


state 68

    (71) expresionandor -> expresion cuadexpresionandor . auxandor
    (73) auxandor -> . AND meteopdores expresionandor
    (74) auxandor -> . OR meteopdores expresionandor
    (75) auxandor -> . empty
    (106) empty -> .

    AND             shift and go to state 87
    OR              shift and go to state 88
    RPAR            reduce using rule 106 (empty -> .)
    SEMICOLON       reduce using rule 106 (empty -> .)

    auxandor                       shift and go to state 86
    empty                          shift and go to state 89

state 69

    (98) expresion -> exp cuadexpresion . expresionp
    (100) expresionp -> . MORETHAN meteopdores expresion
    (101) expresionp -> . LESSTHAN meteopdores expresion
    (102) expresionp -> . EQL meteopdores expresion
    (103) expresionp -> . NOTEQL meteopdores expresion
    (104) expresionp -> . empty
    (106) empty -> .

    MORETHAN        shift and go to state 91
    LESSTHAN        shift and go to state 92
    EQL             shift and go to state 93
    NOTEQL          shift and go to state 94
    AND             reduce using rule 106 (empty -> .)
    OR              reduce using rule 106 (empty -> .)
    RPAR            reduce using rule 106 (empty -> .)
    SEMICOLON       reduce using rule 106 (empty -> .)
    COMMA           reduce using rule 106 (empty -> .)

    expresionp                     shift and go to state 90
    empty                          shift and go to state 95

state 70

    (38) llamafunc -> ID LPAR llamafuncp .

    MULT            reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)
    SLASH           reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)
    PLUS            reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)
    MINUS           reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)
    RBRK            reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)
    MORETHAN        reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)
    LESSTHAN        reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)
    EQL             reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)
    NOTEQL          reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)
    AND             reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)
    OR              reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)
    RPAR            reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)
    SEMICOLON       reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)
    COMMA           reduce using rule 38 (llamafunc -> ID LPAR llamafuncp .)


state 71

    (39) llamafuncp -> llamafuncpp .

    MULT            reduce using rule 39 (llamafuncp -> llamafuncpp .)
    SLASH           reduce using rule 39 (llamafuncp -> llamafuncpp .)
    PLUS            reduce using rule 39 (llamafuncp -> llamafuncpp .)
    MINUS           reduce using rule 39 (llamafuncp -> llamafuncpp .)
    RBRK            reduce using rule 39 (llamafuncp -> llamafuncpp .)
    MORETHAN        reduce using rule 39 (llamafuncp -> llamafuncpp .)
    LESSTHAN        reduce using rule 39 (llamafuncp -> llamafuncpp .)
    EQL             reduce using rule 39 (llamafuncp -> llamafuncpp .)
    NOTEQL          reduce using rule 39 (llamafuncp -> llamafuncpp .)
    AND             reduce using rule 39 (llamafuncp -> llamafuncpp .)
    OR              reduce using rule 39 (llamafuncp -> llamafuncpp .)
    RPAR            reduce using rule 39 (llamafuncp -> llamafuncpp .)
    SEMICOLON       reduce using rule 39 (llamafuncp -> llamafuncpp .)
    COMMA           reduce using rule 39 (llamafuncp -> llamafuncpp .)


state 72

    (40) llamafuncp -> llamafuncpppp .

    MULT            reduce using rule 40 (llamafuncp -> llamafuncpppp .)
    SLASH           reduce using rule 40 (llamafuncp -> llamafuncpppp .)
    PLUS            reduce using rule 40 (llamafuncp -> llamafuncpppp .)
    MINUS           reduce using rule 40 (llamafuncp -> llamafuncpppp .)
    RBRK            reduce using rule 40 (llamafuncp -> llamafuncpppp .)
    MORETHAN        reduce using rule 40 (llamafuncp -> llamafuncpppp .)
    LESSTHAN        reduce using rule 40 (llamafuncp -> llamafuncpppp .)
    EQL             reduce using rule 40 (llamafuncp -> llamafuncpppp .)
    NOTEQL          reduce using rule 40 (llamafuncp -> llamafuncpppp .)
    AND             reduce using rule 40 (llamafuncp -> llamafuncpppp .)
    OR              reduce using rule 40 (llamafuncp -> llamafuncpppp .)
    RPAR            reduce using rule 40 (llamafuncp -> llamafuncpppp .)
    SEMICOLON       reduce using rule 40 (llamafuncp -> llamafuncpppp .)
    COMMA           reduce using rule 40 (llamafuncp -> llamafuncpppp .)


state 73

    (41) llamafuncpp -> tipo . ID llamafuncppp

    ID              shift and go to state 96


state 74

    (44) llamafuncpppp -> RPAR .

    MULT            reduce using rule 44 (llamafuncpppp -> RPAR .)
    SLASH           reduce using rule 44 (llamafuncpppp -> RPAR .)
    PLUS            reduce using rule 44 (llamafuncpppp -> RPAR .)
    MINUS           reduce using rule 44 (llamafuncpppp -> RPAR .)
    RBRK            reduce using rule 44 (llamafuncpppp -> RPAR .)
    MORETHAN        reduce using rule 44 (llamafuncpppp -> RPAR .)
    LESSTHAN        reduce using rule 44 (llamafuncpppp -> RPAR .)
    EQL             reduce using rule 44 (llamafuncpppp -> RPAR .)
    NOTEQL          reduce using rule 44 (llamafuncpppp -> RPAR .)
    AND             reduce using rule 44 (llamafuncpppp -> RPAR .)
    OR              reduce using rule 44 (llamafuncpppp -> RPAR .)
    RPAR            reduce using rule 44 (llamafuncpppp -> RPAR .)
    SEMICOLON       reduce using rule 44 (llamafuncpppp -> RPAR .)
    COMMA           reduce using rule 44 (llamafuncpppp -> RPAR .)


state 75

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines . debug
    (2) debug -> .

    $end            reduce using rule 2 (debug -> .)

    debug                          shift and go to state 97

state 76

    (7) maines -> mainf .

    $end            reduce using rule 7 (maines -> mainf .)


state 77

    (8) maines -> empty .

    $end            reduce using rule 8 (maines -> empty .)


state 78

    (105) mainf -> bloque . SEMICOLON

    SEMICOLON       shift and go to state 98


state 79

    (56) bloque -> LKEY . bloquep
    (57) bloque -> LKEY . bloqueppp
    (58) bloquep -> . estatuto bloquepp
    (61) bloqueppp -> . RKEY
    (62) estatuto -> . asignacion
    (63) estatuto -> . condif
    (64) estatuto -> . condwhile
    (65) estatuto -> . conddowhile
    (66) estatuto -> . escritura
    (67) estatuto -> . llamafunc SEMICOLON
    (68) asignacion -> . ID array asignacionp
    (69) asignacion -> . ID meteopandos asignacionp
    (85) condif -> . IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif
    (91) condwhile -> . WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (95) conddowhile -> . DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (79) escritura -> . PRINT meteopdores LPAR escriturap
    (38) llamafunc -> . ID LPAR llamafuncp

    RKEY            shift and go to state 102
    ID              shift and go to state 109
    IF              shift and go to state 110
    WHILE           shift and go to state 111
    DO              shift and go to state 112
    PRINT           shift and go to state 113

    bloquep                        shift and go to state 99
    bloqueppp                      shift and go to state 100
    estatuto                       shift and go to state 101
    asignacion                     shift and go to state 103
    condif                         shift and go to state 104
    condwhile                      shift and go to state 105
    conddowhile                    shift and go to state 106
    escritura                      shift and go to state 107
    llamafunc                      shift and go to state 108

state 80

    (45) funcionf -> VOID funciontipo ID funcionid . LPAR funcionp RPAR bloque SEMICOLON funcionpppp

    LPAR            shift and go to state 114


state 81

    (46) funcionf -> tipo ID funcionid LPAR . funcionp RPAR bloque RETURN LPAR exp RPAR SEMICOLON funcionpppp
    (49) funcionp -> . funcionpp
    (50) funcionp -> . empty
    (51) funcionpp -> . tipo ID varid funcionppp
    (106) empty -> .
    (18) tipo -> . INT funciontipo
    (19) tipo -> . FLOAT funciontipo

    RPAR            reduce using rule 106 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    tipo                           shift and go to state 115
    funcionp                       shift and go to state 116
    funcionpp                      shift and go to state 117
    empty                          shift and go to state 118

state 82

    (23) auxexp -> PLUS meteopdores . exp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 119
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 83

    (24) auxexp -> MINUS meteopdores . exp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 120
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 84

    (28) auxtermino -> MULT meteopdores . termino
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    termino                        shift and go to state 121
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 85

    (29) auxtermino -> SLASH meteopdores . termino
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    termino                        shift and go to state 122
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 86

    (71) expresionandor -> expresion cuadexpresionandor auxandor .

    RPAR            reduce using rule 71 (expresionandor -> expresion cuadexpresionandor auxandor .)
    SEMICOLON       reduce using rule 71 (expresionandor -> expresion cuadexpresionandor auxandor .)


state 87

    (73) auxandor -> AND . meteopdores expresionandor
    (77) meteopdores -> .

    LPAR            reduce using rule 77 (meteopdores -> .)
    ID              reduce using rule 77 (meteopdores -> .)
    NUMFLOAT        reduce using rule 77 (meteopdores -> .)
    NUMINT          reduce using rule 77 (meteopdores -> .)

    meteopdores                    shift and go to state 123

state 88

    (74) auxandor -> OR . meteopdores expresionandor
    (77) meteopdores -> .

    LPAR            reduce using rule 77 (meteopdores -> .)
    ID              reduce using rule 77 (meteopdores -> .)
    NUMFLOAT        reduce using rule 77 (meteopdores -> .)
    NUMINT          reduce using rule 77 (meteopdores -> .)

    meteopdores                    shift and go to state 124

state 89

    (75) auxandor -> empty .

    RPAR            reduce using rule 75 (auxandor -> empty .)
    SEMICOLON       reduce using rule 75 (auxandor -> empty .)


state 90

    (98) expresion -> exp cuadexpresion expresionp .

    AND             reduce using rule 98 (expresion -> exp cuadexpresion expresionp .)
    OR              reduce using rule 98 (expresion -> exp cuadexpresion expresionp .)
    RPAR            reduce using rule 98 (expresion -> exp cuadexpresion expresionp .)
    SEMICOLON       reduce using rule 98 (expresion -> exp cuadexpresion expresionp .)
    COMMA           reduce using rule 98 (expresion -> exp cuadexpresion expresionp .)


state 91

    (100) expresionp -> MORETHAN . meteopdores expresion
    (77) meteopdores -> .

    LPAR            reduce using rule 77 (meteopdores -> .)
    ID              reduce using rule 77 (meteopdores -> .)
    NUMFLOAT        reduce using rule 77 (meteopdores -> .)
    NUMINT          reduce using rule 77 (meteopdores -> .)

    meteopdores                    shift and go to state 125

state 92

    (101) expresionp -> LESSTHAN . meteopdores expresion
    (77) meteopdores -> .

    LPAR            reduce using rule 77 (meteopdores -> .)
    ID              reduce using rule 77 (meteopdores -> .)
    NUMFLOAT        reduce using rule 77 (meteopdores -> .)
    NUMINT          reduce using rule 77 (meteopdores -> .)

    meteopdores                    shift and go to state 126

state 93

    (102) expresionp -> EQL . meteopdores expresion
    (77) meteopdores -> .

    LPAR            reduce using rule 77 (meteopdores -> .)
    ID              reduce using rule 77 (meteopdores -> .)
    NUMFLOAT        reduce using rule 77 (meteopdores -> .)
    NUMINT          reduce using rule 77 (meteopdores -> .)

    meteopdores                    shift and go to state 127

state 94

    (103) expresionp -> NOTEQL . meteopdores expresion
    (77) meteopdores -> .

    LPAR            reduce using rule 77 (meteopdores -> .)
    ID              reduce using rule 77 (meteopdores -> .)
    NUMFLOAT        reduce using rule 77 (meteopdores -> .)
    NUMINT          reduce using rule 77 (meteopdores -> .)

    meteopdores                    shift and go to state 128

state 95

    (104) expresionp -> empty .

    AND             reduce using rule 104 (expresionp -> empty .)
    OR              reduce using rule 104 (expresionp -> empty .)
    RPAR            reduce using rule 104 (expresionp -> empty .)
    SEMICOLON       reduce using rule 104 (expresionp -> empty .)
    COMMA           reduce using rule 104 (expresionp -> empty .)


state 96

    (41) llamafuncpp -> tipo ID . llamafuncppp
    (42) llamafuncppp -> . COMMA llamafuncpp
    (43) llamafuncppp -> . llamafuncpppp
    (44) llamafuncpppp -> . RPAR

    COMMA           shift and go to state 130
    RPAR            shift and go to state 74

    llamafuncppp                   shift and go to state 129
    llamafuncpppp                  shift and go to state 131

state 97

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug .

    $end            reduce using rule 1 (programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug .)


state 98

    (105) mainf -> bloque SEMICOLON .

    $end            reduce using rule 105 (mainf -> bloque SEMICOLON .)


state 99

    (56) bloque -> LKEY bloquep .

    SEMICOLON       reduce using rule 56 (bloque -> LKEY bloquep .)
    WHILE           reduce using rule 56 (bloque -> LKEY bloquep .)
    RETURN          reduce using rule 56 (bloque -> LKEY bloquep .)
    ELSE            reduce using rule 56 (bloque -> LKEY bloquep .)


state 100

    (57) bloque -> LKEY bloqueppp .

    SEMICOLON       reduce using rule 57 (bloque -> LKEY bloqueppp .)
    WHILE           reduce using rule 57 (bloque -> LKEY bloqueppp .)
    RETURN          reduce using rule 57 (bloque -> LKEY bloqueppp .)
    ELSE            reduce using rule 57 (bloque -> LKEY bloqueppp .)


state 101

    (58) bloquep -> estatuto . bloquepp
    (59) bloquepp -> . bloquep
    (60) bloquepp -> . bloqueppp
    (58) bloquep -> . estatuto bloquepp
    (61) bloqueppp -> . RKEY
    (62) estatuto -> . asignacion
    (63) estatuto -> . condif
    (64) estatuto -> . condwhile
    (65) estatuto -> . conddowhile
    (66) estatuto -> . escritura
    (67) estatuto -> . llamafunc SEMICOLON
    (68) asignacion -> . ID array asignacionp
    (69) asignacion -> . ID meteopandos asignacionp
    (85) condif -> . IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif
    (91) condwhile -> . WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (95) conddowhile -> . DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (79) escritura -> . PRINT meteopdores LPAR escriturap
    (38) llamafunc -> . ID LPAR llamafuncp

    RKEY            shift and go to state 102
    ID              shift and go to state 109
    IF              shift and go to state 110
    WHILE           shift and go to state 111
    DO              shift and go to state 112
    PRINT           shift and go to state 113

    estatuto                       shift and go to state 101
    bloquepp                       shift and go to state 132
    bloquep                        shift and go to state 133
    bloqueppp                      shift and go to state 134
    asignacion                     shift and go to state 103
    condif                         shift and go to state 104
    condwhile                      shift and go to state 105
    conddowhile                    shift and go to state 106
    escritura                      shift and go to state 107
    llamafunc                      shift and go to state 108

state 102

    (61) bloqueppp -> RKEY .

    SEMICOLON       reduce using rule 61 (bloqueppp -> RKEY .)
    WHILE           reduce using rule 61 (bloqueppp -> RKEY .)
    RETURN          reduce using rule 61 (bloqueppp -> RKEY .)
    ELSE            reduce using rule 61 (bloqueppp -> RKEY .)


state 103

    (62) estatuto -> asignacion .

    RKEY            reduce using rule 62 (estatuto -> asignacion .)
    ID              reduce using rule 62 (estatuto -> asignacion .)
    IF              reduce using rule 62 (estatuto -> asignacion .)
    WHILE           reduce using rule 62 (estatuto -> asignacion .)
    DO              reduce using rule 62 (estatuto -> asignacion .)
    PRINT           reduce using rule 62 (estatuto -> asignacion .)


state 104

    (63) estatuto -> condif .

    RKEY            reduce using rule 63 (estatuto -> condif .)
    ID              reduce using rule 63 (estatuto -> condif .)
    IF              reduce using rule 63 (estatuto -> condif .)
    WHILE           reduce using rule 63 (estatuto -> condif .)
    DO              reduce using rule 63 (estatuto -> condif .)
    PRINT           reduce using rule 63 (estatuto -> condif .)


state 105

    (64) estatuto -> condwhile .

    RKEY            reduce using rule 64 (estatuto -> condwhile .)
    ID              reduce using rule 64 (estatuto -> condwhile .)
    IF              reduce using rule 64 (estatuto -> condwhile .)
    WHILE           reduce using rule 64 (estatuto -> condwhile .)
    DO              reduce using rule 64 (estatuto -> condwhile .)
    PRINT           reduce using rule 64 (estatuto -> condwhile .)


state 106

    (65) estatuto -> conddowhile .

    RKEY            reduce using rule 65 (estatuto -> conddowhile .)
    ID              reduce using rule 65 (estatuto -> conddowhile .)
    IF              reduce using rule 65 (estatuto -> conddowhile .)
    WHILE           reduce using rule 65 (estatuto -> conddowhile .)
    DO              reduce using rule 65 (estatuto -> conddowhile .)
    PRINT           reduce using rule 65 (estatuto -> conddowhile .)


state 107

    (66) estatuto -> escritura .

    RKEY            reduce using rule 66 (estatuto -> escritura .)
    ID              reduce using rule 66 (estatuto -> escritura .)
    IF              reduce using rule 66 (estatuto -> escritura .)
    WHILE           reduce using rule 66 (estatuto -> escritura .)
    DO              reduce using rule 66 (estatuto -> escritura .)
    PRINT           reduce using rule 66 (estatuto -> escritura .)


state 108

    (67) estatuto -> llamafunc . SEMICOLON

    SEMICOLON       shift and go to state 135


state 109

    (68) asignacion -> ID . array asignacionp
    (69) asignacion -> ID . meteopandos asignacionp
    (38) llamafunc -> ID . LPAR llamafuncp
    (20) array -> . LBRK exp RBRK
    (78) meteopandos -> .

    LPAR            shift and go to state 52
    LBRK            shift and go to state 18
    AEQL            reduce using rule 78 (meteopandos -> .)

    array                          shift and go to state 136
    meteopandos                    shift and go to state 137

state 110

    (85) condif -> IF . LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif

    LPAR            shift and go to state 138


state 111

    (91) condwhile -> WHILE . LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON

    LPAR            shift and go to state 139


state 112

    (95) conddowhile -> DO . guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (96) guardardowhile -> .

    LKEY            reduce using rule 96 (guardardowhile -> .)

    guardardowhile                 shift and go to state 140

state 113

    (79) escritura -> PRINT . meteopdores LPAR escriturap
    (77) meteopdores -> .

    LPAR            reduce using rule 77 (meteopdores -> .)

    meteopdores                    shift and go to state 141

state 114

    (45) funcionf -> VOID funciontipo ID funcionid LPAR . funcionp RPAR bloque SEMICOLON funcionpppp
    (49) funcionp -> . funcionpp
    (50) funcionp -> . empty
    (51) funcionpp -> . tipo ID varid funcionppp
    (106) empty -> .
    (18) tipo -> . INT funciontipo
    (19) tipo -> . FLOAT funciontipo

    RPAR            reduce using rule 106 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funcionp                       shift and go to state 142
    funcionpp                      shift and go to state 117
    empty                          shift and go to state 118
    tipo                           shift and go to state 115

state 115

    (51) funcionpp -> tipo . ID varid funcionppp

    ID              shift and go to state 143


state 116

    (46) funcionf -> tipo ID funcionid LPAR funcionp . RPAR bloque RETURN LPAR exp RPAR SEMICOLON funcionpppp

    RPAR            shift and go to state 144


state 117

    (49) funcionp -> funcionpp .

    RPAR            reduce using rule 49 (funcionp -> funcionpp .)


state 118

    (50) funcionp -> empty .

    RPAR            reduce using rule 50 (funcionp -> empty .)


state 119

    (23) auxexp -> PLUS meteopdores exp .

    RBRK            reduce using rule 23 (auxexp -> PLUS meteopdores exp .)
    MORETHAN        reduce using rule 23 (auxexp -> PLUS meteopdores exp .)
    LESSTHAN        reduce using rule 23 (auxexp -> PLUS meteopdores exp .)
    EQL             reduce using rule 23 (auxexp -> PLUS meteopdores exp .)
    NOTEQL          reduce using rule 23 (auxexp -> PLUS meteopdores exp .)
    AND             reduce using rule 23 (auxexp -> PLUS meteopdores exp .)
    OR              reduce using rule 23 (auxexp -> PLUS meteopdores exp .)
    RPAR            reduce using rule 23 (auxexp -> PLUS meteopdores exp .)
    SEMICOLON       reduce using rule 23 (auxexp -> PLUS meteopdores exp .)
    COMMA           reduce using rule 23 (auxexp -> PLUS meteopdores exp .)


state 120

    (24) auxexp -> MINUS meteopdores exp .

    RBRK            reduce using rule 24 (auxexp -> MINUS meteopdores exp .)
    MORETHAN        reduce using rule 24 (auxexp -> MINUS meteopdores exp .)
    LESSTHAN        reduce using rule 24 (auxexp -> MINUS meteopdores exp .)
    EQL             reduce using rule 24 (auxexp -> MINUS meteopdores exp .)
    NOTEQL          reduce using rule 24 (auxexp -> MINUS meteopdores exp .)
    AND             reduce using rule 24 (auxexp -> MINUS meteopdores exp .)
    OR              reduce using rule 24 (auxexp -> MINUS meteopdores exp .)
    RPAR            reduce using rule 24 (auxexp -> MINUS meteopdores exp .)
    SEMICOLON       reduce using rule 24 (auxexp -> MINUS meteopdores exp .)
    COMMA           reduce using rule 24 (auxexp -> MINUS meteopdores exp .)


state 121

    (28) auxtermino -> MULT meteopdores termino .

    PLUS            reduce using rule 28 (auxtermino -> MULT meteopdores termino .)
    MINUS           reduce using rule 28 (auxtermino -> MULT meteopdores termino .)
    RBRK            reduce using rule 28 (auxtermino -> MULT meteopdores termino .)
    MORETHAN        reduce using rule 28 (auxtermino -> MULT meteopdores termino .)
    LESSTHAN        reduce using rule 28 (auxtermino -> MULT meteopdores termino .)
    EQL             reduce using rule 28 (auxtermino -> MULT meteopdores termino .)
    NOTEQL          reduce using rule 28 (auxtermino -> MULT meteopdores termino .)
    AND             reduce using rule 28 (auxtermino -> MULT meteopdores termino .)
    OR              reduce using rule 28 (auxtermino -> MULT meteopdores termino .)
    RPAR            reduce using rule 28 (auxtermino -> MULT meteopdores termino .)
    SEMICOLON       reduce using rule 28 (auxtermino -> MULT meteopdores termino .)
    COMMA           reduce using rule 28 (auxtermino -> MULT meteopdores termino .)


state 122

    (29) auxtermino -> SLASH meteopdores termino .

    PLUS            reduce using rule 29 (auxtermino -> SLASH meteopdores termino .)
    MINUS           reduce using rule 29 (auxtermino -> SLASH meteopdores termino .)
    RBRK            reduce using rule 29 (auxtermino -> SLASH meteopdores termino .)
    MORETHAN        reduce using rule 29 (auxtermino -> SLASH meteopdores termino .)
    LESSTHAN        reduce using rule 29 (auxtermino -> SLASH meteopdores termino .)
    EQL             reduce using rule 29 (auxtermino -> SLASH meteopdores termino .)
    NOTEQL          reduce using rule 29 (auxtermino -> SLASH meteopdores termino .)
    AND             reduce using rule 29 (auxtermino -> SLASH meteopdores termino .)
    OR              reduce using rule 29 (auxtermino -> SLASH meteopdores termino .)
    RPAR            reduce using rule 29 (auxtermino -> SLASH meteopdores termino .)
    SEMICOLON       reduce using rule 29 (auxtermino -> SLASH meteopdores termino .)
    COMMA           reduce using rule 29 (auxtermino -> SLASH meteopdores termino .)


state 123

    (73) auxandor -> AND meteopdores . expresionandor
    (71) expresionandor -> . expresion cuadexpresionandor auxandor
    (98) expresion -> . exp cuadexpresion expresionp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 145
    expresion                      shift and go to state 49
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 124

    (74) auxandor -> OR meteopdores . expresionandor
    (71) expresionandor -> . expresion cuadexpresionandor auxandor
    (98) expresion -> . exp cuadexpresion expresionp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 146
    expresion                      shift and go to state 49
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 125

    (100) expresionp -> MORETHAN meteopdores . expresion
    (98) expresion -> . exp cuadexpresion expresionp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 147
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 126

    (101) expresionp -> LESSTHAN meteopdores . expresion
    (98) expresion -> . exp cuadexpresion expresionp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 148
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 127

    (102) expresionp -> EQL meteopdores . expresion
    (98) expresion -> . exp cuadexpresion expresionp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 149
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 128

    (103) expresionp -> NOTEQL meteopdores . expresion
    (98) expresion -> . exp cuadexpresion expresionp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 150
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 129

    (41) llamafuncpp -> tipo ID llamafuncppp .

    MULT            reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)
    SLASH           reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)
    PLUS            reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)
    MINUS           reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)
    RBRK            reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)
    MORETHAN        reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)
    LESSTHAN        reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)
    EQL             reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)
    NOTEQL          reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)
    AND             reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)
    OR              reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)
    RPAR            reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)
    SEMICOLON       reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)
    COMMA           reduce using rule 41 (llamafuncpp -> tipo ID llamafuncppp .)


state 130

    (42) llamafuncppp -> COMMA . llamafuncpp
    (41) llamafuncpp -> . tipo ID llamafuncppp
    (18) tipo -> . INT funciontipo
    (19) tipo -> . FLOAT funciontipo

    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    llamafuncpp                    shift and go to state 151
    tipo                           shift and go to state 73

state 131

    (43) llamafuncppp -> llamafuncpppp .

    MULT            reduce using rule 43 (llamafuncppp -> llamafuncpppp .)
    SLASH           reduce using rule 43 (llamafuncppp -> llamafuncpppp .)
    PLUS            reduce using rule 43 (llamafuncppp -> llamafuncpppp .)
    MINUS           reduce using rule 43 (llamafuncppp -> llamafuncpppp .)
    RBRK            reduce using rule 43 (llamafuncppp -> llamafuncpppp .)
    MORETHAN        reduce using rule 43 (llamafuncppp -> llamafuncpppp .)
    LESSTHAN        reduce using rule 43 (llamafuncppp -> llamafuncpppp .)
    EQL             reduce using rule 43 (llamafuncppp -> llamafuncpppp .)
    NOTEQL          reduce using rule 43 (llamafuncppp -> llamafuncpppp .)
    AND             reduce using rule 43 (llamafuncppp -> llamafuncpppp .)
    OR              reduce using rule 43 (llamafuncppp -> llamafuncpppp .)
    RPAR            reduce using rule 43 (llamafuncppp -> llamafuncpppp .)
    SEMICOLON       reduce using rule 43 (llamafuncppp -> llamafuncpppp .)
    COMMA           reduce using rule 43 (llamafuncppp -> llamafuncpppp .)


state 132

    (58) bloquep -> estatuto bloquepp .

    SEMICOLON       reduce using rule 58 (bloquep -> estatuto bloquepp .)
    WHILE           reduce using rule 58 (bloquep -> estatuto bloquepp .)
    RETURN          reduce using rule 58 (bloquep -> estatuto bloquepp .)
    ELSE            reduce using rule 58 (bloquep -> estatuto bloquepp .)


state 133

    (59) bloquepp -> bloquep .

    SEMICOLON       reduce using rule 59 (bloquepp -> bloquep .)
    WHILE           reduce using rule 59 (bloquepp -> bloquep .)
    RETURN          reduce using rule 59 (bloquepp -> bloquep .)
    ELSE            reduce using rule 59 (bloquepp -> bloquep .)


state 134

    (60) bloquepp -> bloqueppp .

    SEMICOLON       reduce using rule 60 (bloquepp -> bloqueppp .)
    WHILE           reduce using rule 60 (bloquepp -> bloqueppp .)
    RETURN          reduce using rule 60 (bloquepp -> bloqueppp .)
    ELSE            reduce using rule 60 (bloquepp -> bloqueppp .)


state 135

    (67) estatuto -> llamafunc SEMICOLON .

    RKEY            reduce using rule 67 (estatuto -> llamafunc SEMICOLON .)
    ID              reduce using rule 67 (estatuto -> llamafunc SEMICOLON .)
    IF              reduce using rule 67 (estatuto -> llamafunc SEMICOLON .)
    WHILE           reduce using rule 67 (estatuto -> llamafunc SEMICOLON .)
    DO              reduce using rule 67 (estatuto -> llamafunc SEMICOLON .)
    PRINT           reduce using rule 67 (estatuto -> llamafunc SEMICOLON .)


state 136

    (68) asignacion -> ID array . asignacionp
    (70) asignacionp -> . AEQL meteopdores expresionandor cuadass SEMICOLON

    AEQL            shift and go to state 153

    asignacionp                    shift and go to state 152

state 137

    (69) asignacion -> ID meteopandos . asignacionp
    (70) asignacionp -> . AEQL meteopdores expresionandor cuadass SEMICOLON

    AEQL            shift and go to state 153

    asignacionp                    shift and go to state 154

state 138

    (85) condif -> IF LPAR . expresion cuadcondif RPAR bloque condifp cuadrellenoif
    (98) expresion -> . exp cuadexpresion expresionp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 155
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 139

    (91) condwhile -> WHILE LPAR . guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (92) guardarsal -> .

    LPAR            reduce using rule 92 (guardarsal -> .)
    ID              reduce using rule 92 (guardarsal -> .)
    NUMFLOAT        reduce using rule 92 (guardarsal -> .)
    NUMINT          reduce using rule 92 (guardarsal -> .)

    guardarsal                     shift and go to state 156

state 140

    (95) conddowhile -> DO guardardowhile . bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (56) bloque -> . LKEY bloquep
    (57) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 79

    bloque                         shift and go to state 157

state 141

    (79) escritura -> PRINT meteopdores . LPAR escriturap

    LPAR            shift and go to state 158


state 142

    (45) funcionf -> VOID funciontipo ID funcionid LPAR funcionp . RPAR bloque SEMICOLON funcionpppp

    RPAR            shift and go to state 159


state 143

    (51) funcionpp -> tipo ID . varid funcionppp
    (12) varid -> .

    COMMA           reduce using rule 12 (varid -> .)
    RPAR            reduce using rule 12 (varid -> .)

    varid                          shift and go to state 160

state 144

    (46) funcionf -> tipo ID funcionid LPAR funcionp RPAR . bloque RETURN LPAR exp RPAR SEMICOLON funcionpppp
    (56) bloque -> . LKEY bloquep
    (57) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 79

    bloque                         shift and go to state 161

state 145

    (73) auxandor -> AND meteopdores expresionandor .

    RPAR            reduce using rule 73 (auxandor -> AND meteopdores expresionandor .)
    SEMICOLON       reduce using rule 73 (auxandor -> AND meteopdores expresionandor .)


state 146

    (74) auxandor -> OR meteopdores expresionandor .

    RPAR            reduce using rule 74 (auxandor -> OR meteopdores expresionandor .)
    SEMICOLON       reduce using rule 74 (auxandor -> OR meteopdores expresionandor .)


state 147

    (100) expresionp -> MORETHAN meteopdores expresion .

    AND             reduce using rule 100 (expresionp -> MORETHAN meteopdores expresion .)
    OR              reduce using rule 100 (expresionp -> MORETHAN meteopdores expresion .)
    RPAR            reduce using rule 100 (expresionp -> MORETHAN meteopdores expresion .)
    SEMICOLON       reduce using rule 100 (expresionp -> MORETHAN meteopdores expresion .)
    COMMA           reduce using rule 100 (expresionp -> MORETHAN meteopdores expresion .)


state 148

    (101) expresionp -> LESSTHAN meteopdores expresion .

    AND             reduce using rule 101 (expresionp -> LESSTHAN meteopdores expresion .)
    OR              reduce using rule 101 (expresionp -> LESSTHAN meteopdores expresion .)
    RPAR            reduce using rule 101 (expresionp -> LESSTHAN meteopdores expresion .)
    SEMICOLON       reduce using rule 101 (expresionp -> LESSTHAN meteopdores expresion .)
    COMMA           reduce using rule 101 (expresionp -> LESSTHAN meteopdores expresion .)


state 149

    (102) expresionp -> EQL meteopdores expresion .

    AND             reduce using rule 102 (expresionp -> EQL meteopdores expresion .)
    OR              reduce using rule 102 (expresionp -> EQL meteopdores expresion .)
    RPAR            reduce using rule 102 (expresionp -> EQL meteopdores expresion .)
    SEMICOLON       reduce using rule 102 (expresionp -> EQL meteopdores expresion .)
    COMMA           reduce using rule 102 (expresionp -> EQL meteopdores expresion .)


state 150

    (103) expresionp -> NOTEQL meteopdores expresion .

    AND             reduce using rule 103 (expresionp -> NOTEQL meteopdores expresion .)
    OR              reduce using rule 103 (expresionp -> NOTEQL meteopdores expresion .)
    RPAR            reduce using rule 103 (expresionp -> NOTEQL meteopdores expresion .)
    SEMICOLON       reduce using rule 103 (expresionp -> NOTEQL meteopdores expresion .)
    COMMA           reduce using rule 103 (expresionp -> NOTEQL meteopdores expresion .)


state 151

    (42) llamafuncppp -> COMMA llamafuncpp .

    MULT            reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)
    SLASH           reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)
    PLUS            reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)
    MINUS           reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)
    RBRK            reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)
    MORETHAN        reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)
    LESSTHAN        reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)
    EQL             reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)
    NOTEQL          reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)
    AND             reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)
    OR              reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)
    RPAR            reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)
    SEMICOLON       reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)
    COMMA           reduce using rule 42 (llamafuncppp -> COMMA llamafuncpp .)


state 152

    (68) asignacion -> ID array asignacionp .

    RKEY            reduce using rule 68 (asignacion -> ID array asignacionp .)
    ID              reduce using rule 68 (asignacion -> ID array asignacionp .)
    IF              reduce using rule 68 (asignacion -> ID array asignacionp .)
    WHILE           reduce using rule 68 (asignacion -> ID array asignacionp .)
    DO              reduce using rule 68 (asignacion -> ID array asignacionp .)
    PRINT           reduce using rule 68 (asignacion -> ID array asignacionp .)


state 153

    (70) asignacionp -> AEQL . meteopdores expresionandor cuadass SEMICOLON
    (77) meteopdores -> .

    LPAR            reduce using rule 77 (meteopdores -> .)
    ID              reduce using rule 77 (meteopdores -> .)
    NUMFLOAT        reduce using rule 77 (meteopdores -> .)
    NUMINT          reduce using rule 77 (meteopdores -> .)

    meteopdores                    shift and go to state 162

state 154

    (69) asignacion -> ID meteopandos asignacionp .

    RKEY            reduce using rule 69 (asignacion -> ID meteopandos asignacionp .)
    ID              reduce using rule 69 (asignacion -> ID meteopandos asignacionp .)
    IF              reduce using rule 69 (asignacion -> ID meteopandos asignacionp .)
    WHILE           reduce using rule 69 (asignacion -> ID meteopandos asignacionp .)
    DO              reduce using rule 69 (asignacion -> ID meteopandos asignacionp .)
    PRINT           reduce using rule 69 (asignacion -> ID meteopandos asignacionp .)


state 155

    (85) condif -> IF LPAR expresion . cuadcondif RPAR bloque condifp cuadrellenoif
    (86) cuadcondif -> .

    RPAR            reduce using rule 86 (cuadcondif -> .)

    cuadcondif                     shift and go to state 163

state 156

    (91) condwhile -> WHILE LPAR guardarsal . expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (98) expresion -> . exp cuadexpresion expresionp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 164
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 157

    (95) conddowhile -> DO guardardowhile bloque . WHILE LPAR expresion quadconddowhile RPAR SEMICOLON

    WHILE           shift and go to state 165


state 158

    (79) escritura -> PRINT meteopdores LPAR . escriturap
    (80) escriturap -> . expresion cuadescritura escriturapp
    (81) escriturap -> . STRING escriturapp
    (98) expresion -> . exp cuadexpresion expresionp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    STRING          shift and go to state 168
    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    escriturap                     shift and go to state 166
    expresion                      shift and go to state 167
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 159

    (45) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR . bloque SEMICOLON funcionpppp
    (56) bloque -> . LKEY bloquep
    (57) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 79

    bloque                         shift and go to state 169

state 160

    (51) funcionpp -> tipo ID varid . funcionppp
    (52) funcionppp -> . COMMA funcionpp
    (53) funcionppp -> . empty
    (106) empty -> .

    COMMA           shift and go to state 171
    RPAR            reduce using rule 106 (empty -> .)

    funcionppp                     shift and go to state 170
    empty                          shift and go to state 172

state 161

    (46) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque . RETURN LPAR exp RPAR SEMICOLON funcionpppp

    RETURN          shift and go to state 173


state 162

    (70) asignacionp -> AEQL meteopdores . expresionandor cuadass SEMICOLON
    (71) expresionandor -> . expresion cuadexpresionandor auxandor
    (98) expresion -> . exp cuadexpresion expresionp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 174
    expresion                      shift and go to state 49
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 163

    (85) condif -> IF LPAR expresion cuadcondif . RPAR bloque condifp cuadrellenoif

    RPAR            shift and go to state 175


state 164

    (91) condwhile -> WHILE LPAR guardarsal expresion . quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (93) quadcondwhile -> .

    RPAR            reduce using rule 93 (quadcondwhile -> .)

    quadcondwhile                  shift and go to state 176

state 165

    (95) conddowhile -> DO guardardowhile bloque WHILE . LPAR expresion quadconddowhile RPAR SEMICOLON

    LPAR            shift and go to state 177


state 166

    (79) escritura -> PRINT meteopdores LPAR escriturap .

    RKEY            reduce using rule 79 (escritura -> PRINT meteopdores LPAR escriturap .)
    ID              reduce using rule 79 (escritura -> PRINT meteopdores LPAR escriturap .)
    IF              reduce using rule 79 (escritura -> PRINT meteopdores LPAR escriturap .)
    WHILE           reduce using rule 79 (escritura -> PRINT meteopdores LPAR escriturap .)
    DO              reduce using rule 79 (escritura -> PRINT meteopdores LPAR escriturap .)
    PRINT           reduce using rule 79 (escritura -> PRINT meteopdores LPAR escriturap .)


state 167

    (80) escriturap -> expresion . cuadescritura escriturapp
    (82) cuadescritura -> .

    COMMA           reduce using rule 82 (cuadescritura -> .)
    RPAR            reduce using rule 82 (cuadescritura -> .)

    cuadescritura                  shift and go to state 178

state 168

    (81) escriturap -> STRING . escriturapp
    (83) escriturapp -> . COMMA escriturap
    (84) escriturapp -> . RPAR SEMICOLON

    COMMA           shift and go to state 180
    RPAR            shift and go to state 181

    escriturapp                    shift and go to state 179

state 169

    (45) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque . SEMICOLON funcionpppp

    SEMICOLON       shift and go to state 182


state 170

    (51) funcionpp -> tipo ID varid funcionppp .

    RPAR            reduce using rule 51 (funcionpp -> tipo ID varid funcionppp .)


state 171

    (52) funcionppp -> COMMA . funcionpp
    (51) funcionpp -> . tipo ID varid funcionppp
    (18) tipo -> . INT funciontipo
    (19) tipo -> . FLOAT funciontipo

    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funcionpp                      shift and go to state 183
    tipo                           shift and go to state 115

state 172

    (53) funcionppp -> empty .

    RPAR            reduce using rule 53 (funcionppp -> empty .)


state 173

    (46) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN . LPAR exp RPAR SEMICOLON funcionpppp

    LPAR            shift and go to state 184


state 174

    (70) asignacionp -> AEQL meteopdores expresionandor . cuadass SEMICOLON
    (76) cuadass -> .

    SEMICOLON       reduce using rule 76 (cuadass -> .)

    cuadass                        shift and go to state 185

state 175

    (85) condif -> IF LPAR expresion cuadcondif RPAR . bloque condifp cuadrellenoif
    (56) bloque -> . LKEY bloquep
    (57) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 79

    bloque                         shift and go to state 186

state 176

    (91) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile . RPAR bloque rellenocondwhile SEMICOLON

    RPAR            shift and go to state 187


state 177

    (95) conddowhile -> DO guardardowhile bloque WHILE LPAR . expresion quadconddowhile RPAR SEMICOLON
    (98) expresion -> . exp cuadexpresion expresionp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 188
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 178

    (80) escriturap -> expresion cuadescritura . escriturapp
    (83) escriturapp -> . COMMA escriturap
    (84) escriturapp -> . RPAR SEMICOLON

    COMMA           shift and go to state 180
    RPAR            shift and go to state 181

    escriturapp                    shift and go to state 189

state 179

    (81) escriturap -> STRING escriturapp .

    RKEY            reduce using rule 81 (escriturap -> STRING escriturapp .)
    ID              reduce using rule 81 (escriturap -> STRING escriturapp .)
    IF              reduce using rule 81 (escriturap -> STRING escriturapp .)
    WHILE           reduce using rule 81 (escriturap -> STRING escriturapp .)
    DO              reduce using rule 81 (escriturap -> STRING escriturapp .)
    PRINT           reduce using rule 81 (escriturap -> STRING escriturapp .)


state 180

    (83) escriturapp -> COMMA . escriturap
    (80) escriturap -> . expresion cuadescritura escriturapp
    (81) escriturap -> . STRING escriturapp
    (98) expresion -> . exp cuadexpresion expresionp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    STRING          shift and go to state 168
    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    escriturap                     shift and go to state 190
    expresion                      shift and go to state 167
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 181

    (84) escriturapp -> RPAR . SEMICOLON

    SEMICOLON       shift and go to state 191


state 182

    (45) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque SEMICOLON . funcionpppp
    (54) funcionpppp -> . funcionf
    (55) funcionpppp -> . empty
    (45) funcionf -> . VOID funciontipo ID funcionid LPAR funcionp RPAR bloque SEMICOLON funcionpppp
    (46) funcionf -> . tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR SEMICOLON funcionpppp
    (106) empty -> .
    (18) tipo -> . INT funciontipo
    (19) tipo -> . FLOAT funciontipo

    VOID            shift and go to state 22
    MAIN            reduce using rule 106 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funcionpppp                    shift and go to state 192
    funcionf                       shift and go to state 193
    empty                          shift and go to state 194
    tipo                           shift and go to state 23

state 183

    (52) funcionppp -> COMMA funcionpp .

    RPAR            reduce using rule 52 (funcionppp -> COMMA funcionpp .)


state 184

    (46) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR . exp RPAR SEMICOLON funcionpppp
    (21) exp -> . termino cuadexp auxexp
    (26) termino -> . factor cuadtermino auxtermino
    (31) factor -> . LPAR expresionandor RPAR
    (32) factor -> . varcte
    (33) varcte -> . ID meteopandos
    (34) varcte -> . NUMFLOAT meteconst
    (35) varcte -> . NUMINT meteconst
    (36) varcte -> . llamafunc
    (38) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 195
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 185

    (70) asignacionp -> AEQL meteopdores expresionandor cuadass . SEMICOLON

    SEMICOLON       shift and go to state 196


state 186

    (85) condif -> IF LPAR expresion cuadcondif RPAR bloque . condifp cuadrellenoif
    (88) condifp -> . ELSE cuadconifelse bloque SEMICOLON
    (89) condifp -> . SEMICOLON

    ELSE            shift and go to state 198
    SEMICOLON       shift and go to state 199

    condifp                        shift and go to state 197

state 187

    (91) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR . bloque rellenocondwhile SEMICOLON
    (56) bloque -> . LKEY bloquep
    (57) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 79

    bloque                         shift and go to state 200

state 188

    (95) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion . quadconddowhile RPAR SEMICOLON
    (97) quadconddowhile -> .

    RPAR            reduce using rule 97 (quadconddowhile -> .)

    quadconddowhile                shift and go to state 201

state 189

    (80) escriturap -> expresion cuadescritura escriturapp .

    RKEY            reduce using rule 80 (escriturap -> expresion cuadescritura escriturapp .)
    ID              reduce using rule 80 (escriturap -> expresion cuadescritura escriturapp .)
    IF              reduce using rule 80 (escriturap -> expresion cuadescritura escriturapp .)
    WHILE           reduce using rule 80 (escriturap -> expresion cuadescritura escriturapp .)
    DO              reduce using rule 80 (escriturap -> expresion cuadescritura escriturapp .)
    PRINT           reduce using rule 80 (escriturap -> expresion cuadescritura escriturapp .)


state 190

    (83) escriturapp -> COMMA escriturap .

    RKEY            reduce using rule 83 (escriturapp -> COMMA escriturap .)
    ID              reduce using rule 83 (escriturapp -> COMMA escriturap .)
    IF              reduce using rule 83 (escriturapp -> COMMA escriturap .)
    WHILE           reduce using rule 83 (escriturapp -> COMMA escriturap .)
    DO              reduce using rule 83 (escriturapp -> COMMA escriturap .)
    PRINT           reduce using rule 83 (escriturapp -> COMMA escriturap .)


state 191

    (84) escriturapp -> RPAR SEMICOLON .

    RKEY            reduce using rule 84 (escriturapp -> RPAR SEMICOLON .)
    ID              reduce using rule 84 (escriturapp -> RPAR SEMICOLON .)
    IF              reduce using rule 84 (escriturapp -> RPAR SEMICOLON .)
    WHILE           reduce using rule 84 (escriturapp -> RPAR SEMICOLON .)
    DO              reduce using rule 84 (escriturapp -> RPAR SEMICOLON .)
    PRINT           reduce using rule 84 (escriturapp -> RPAR SEMICOLON .)


state 192

    (45) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque SEMICOLON funcionpppp .

    MAIN            reduce using rule 45 (funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque SEMICOLON funcionpppp .)


state 193

    (54) funcionpppp -> funcionf .

    MAIN            reduce using rule 54 (funcionpppp -> funcionf .)


state 194

    (55) funcionpppp -> empty .

    MAIN            reduce using rule 55 (funcionpppp -> empty .)


state 195

    (46) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp . RPAR SEMICOLON funcionpppp

    RPAR            shift and go to state 202


state 196

    (70) asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .

    RKEY            reduce using rule 70 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    ID              reduce using rule 70 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    IF              reduce using rule 70 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    WHILE           reduce using rule 70 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    DO              reduce using rule 70 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    PRINT           reduce using rule 70 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)


state 197

    (85) condif -> IF LPAR expresion cuadcondif RPAR bloque condifp . cuadrellenoif
    (87) cuadrellenoif -> .

    RKEY            reduce using rule 87 (cuadrellenoif -> .)
    ID              reduce using rule 87 (cuadrellenoif -> .)
    IF              reduce using rule 87 (cuadrellenoif -> .)
    WHILE           reduce using rule 87 (cuadrellenoif -> .)
    DO              reduce using rule 87 (cuadrellenoif -> .)
    PRINT           reduce using rule 87 (cuadrellenoif -> .)

    cuadrellenoif                  shift and go to state 203

state 198

    (88) condifp -> ELSE . cuadconifelse bloque SEMICOLON
    (90) cuadconifelse -> .

    LKEY            reduce using rule 90 (cuadconifelse -> .)

    cuadconifelse                  shift and go to state 204

state 199

    (89) condifp -> SEMICOLON .

    RKEY            reduce using rule 89 (condifp -> SEMICOLON .)
    ID              reduce using rule 89 (condifp -> SEMICOLON .)
    IF              reduce using rule 89 (condifp -> SEMICOLON .)
    WHILE           reduce using rule 89 (condifp -> SEMICOLON .)
    DO              reduce using rule 89 (condifp -> SEMICOLON .)
    PRINT           reduce using rule 89 (condifp -> SEMICOLON .)


state 200

    (91) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque . rellenocondwhile SEMICOLON
    (94) rellenocondwhile -> .

    SEMICOLON       reduce using rule 94 (rellenocondwhile -> .)

    rellenocondwhile               shift and go to state 205

state 201

    (95) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile . RPAR SEMICOLON

    RPAR            shift and go to state 206


state 202

    (46) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR . SEMICOLON funcionpppp

    SEMICOLON       shift and go to state 207


state 203

    (85) condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .

    RKEY            reduce using rule 85 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    ID              reduce using rule 85 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    IF              reduce using rule 85 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    WHILE           reduce using rule 85 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    DO              reduce using rule 85 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    PRINT           reduce using rule 85 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)


state 204

    (88) condifp -> ELSE cuadconifelse . bloque SEMICOLON
    (56) bloque -> . LKEY bloquep
    (57) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 79

    bloque                         shift and go to state 208

state 205

    (91) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile . SEMICOLON

    SEMICOLON       shift and go to state 209


state 206

    (95) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR . SEMICOLON

    SEMICOLON       shift and go to state 210


state 207

    (46) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR SEMICOLON . funcionpppp
    (54) funcionpppp -> . funcionf
    (55) funcionpppp -> . empty
    (45) funcionf -> . VOID funciontipo ID funcionid LPAR funcionp RPAR bloque SEMICOLON funcionpppp
    (46) funcionf -> . tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR SEMICOLON funcionpppp
    (106) empty -> .
    (18) tipo -> . INT funciontipo
    (19) tipo -> . FLOAT funciontipo

    VOID            shift and go to state 22
    MAIN            reduce using rule 106 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    tipo                           shift and go to state 23
    funcionpppp                    shift and go to state 211
    funcionf                       shift and go to state 193
    empty                          shift and go to state 194

state 208

    (88) condifp -> ELSE cuadconifelse bloque . SEMICOLON

    SEMICOLON       shift and go to state 212


state 209

    (91) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .

    RKEY            reduce using rule 91 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    ID              reduce using rule 91 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    IF              reduce using rule 91 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    WHILE           reduce using rule 91 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    DO              reduce using rule 91 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    PRINT           reduce using rule 91 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)


state 210

    (95) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .

    RKEY            reduce using rule 95 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    ID              reduce using rule 95 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    IF              reduce using rule 95 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    WHILE           reduce using rule 95 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    DO              reduce using rule 95 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    PRINT           reduce using rule 95 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)


state 211

    (46) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR SEMICOLON funcionpppp .

    MAIN            reduce using rule 46 (funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR SEMICOLON funcionpppp .)


state 212

    (88) condifp -> ELSE cuadconifelse bloque SEMICOLON .

    RKEY            reduce using rule 88 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    ID              reduce using rule 88 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    IF              reduce using rule 88 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    WHILE           reduce using rule 88 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    DO              reduce using rule 88 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    PRINT           reduce using rule 88 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)

