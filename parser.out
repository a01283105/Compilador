Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc
Rule 2     salidadoc -> <empty>
Rule 3     debug -> <empty>
Rule 4     variable -> varf
Rule 5     variable -> empty
Rule 6     funciones -> funcionf
Rule 7     funciones -> empty
Rule 8     maines -> mainf
Rule 9     maines -> empty
Rule 10    varf -> tipo varp
Rule 11    varp -> ID array varpp
Rule 12    varp -> ID varid varpp
Rule 13    varid -> <empty>
Rule 14    varpp -> varppp
Rule 15    varppp -> COMMA varp
Rule 16    varppp -> SEMICOLON varpppp empty
Rule 17    varpppp -> varf
Rule 18    varpppp -> empty
Rule 19    tipo -> INT funciontipo
Rule 20    tipo -> FLOAT funciontipo
Rule 21    array -> LBRK exp RBRK
Rule 22    exp -> termino cuadexp auxexp
Rule 23    cuadexp -> <empty>
Rule 24    auxexp -> PLUS meteopdores exp
Rule 25    auxexp -> MINUS meteopdores exp
Rule 26    auxexp -> empty
Rule 27    termino -> factor cuadtermino auxtermino
Rule 28    cuadtermino -> <empty>
Rule 29    auxtermino -> MULT meteopdores termino
Rule 30    auxtermino -> SLASH meteopdores termino
Rule 31    auxtermino -> empty
Rule 32    factor -> LPAR infondo expresion RPAR outfondo
Rule 33    factor -> varcte
Rule 34    infondo -> <empty>
Rule 35    outfondo -> <empty>
Rule 36    varcte -> ID meteopandos
Rule 37    varcte -> NUMFLOAT meteconst
Rule 38    varcte -> NUMINT meteconst
Rule 39    varcte -> llamafunc
Rule 40    meteconst -> <empty>
Rule 41    llamafunc -> ID LPAR llamafuncp
Rule 42    llamafuncp -> llamafuncpp
Rule 43    llamafuncp -> llamafuncpppp
Rule 44    llamafuncpp -> tipo ID llamafuncppp
Rule 45    llamafuncppp -> COMMA llamafuncpp
Rule 46    llamafuncppp -> llamafuncpppp
Rule 47    llamafuncpppp -> RPAR
Rule 48    funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
Rule 49    funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
Rule 50    resetmem -> <empty>
Rule 51    funciontipo -> <empty>
Rule 52    funcionid -> <empty>
Rule 53    funcionp -> funcionpp
Rule 54    funcionp -> empty
Rule 55    funcionpp -> tipo ID varid funcionppp
Rule 56    funcionppp -> COMMA funcionpp
Rule 57    funcionppp -> empty
Rule 58    funcionpppp -> funcionf
Rule 59    funcionpppp -> empty
Rule 60    bloque -> LKEY bloquep
Rule 61    bloque -> LKEY bloqueppp
Rule 62    bloquep -> estatuto bloquepp
Rule 63    bloquepp -> bloquep
Rule 64    bloquepp -> bloqueppp
Rule 65    bloqueppp -> RKEY
Rule 66    estatuto -> asignacion
Rule 67    estatuto -> condif
Rule 68    estatuto -> condwhile
Rule 69    estatuto -> conddowhile
Rule 70    estatuto -> escritura
Rule 71    estatuto -> llamafunc SEMICOLON
Rule 72    asignacion -> ID array asignacionp
Rule 73    asignacion -> ID meteopandos asignacionp
Rule 74    asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON
Rule 75    expresionandor -> expresion cuadexpresionandor auxandor
Rule 76    cuadexpresionandor -> <empty>
Rule 77    auxandor -> AND meteopdores expresionandor
Rule 78    auxandor -> OR meteopdores expresionandor
Rule 79    auxandor -> empty
Rule 80    cuadass -> <empty>
Rule 81    meteopdores -> <empty>
Rule 82    meteopandos -> <empty>
Rule 83    escritura -> PRINT meteopdores LPAR escriturap
Rule 84    escriturap -> expresion cuadescritura escriturapp
Rule 85    escriturap -> STRING meteconst cuadescriturastring escriturapp
Rule 86    cuadescritura -> <empty>
Rule 87    cuadescriturastring -> <empty>
Rule 88    escriturapp -> COMMA escriturap
Rule 89    escriturapp -> RPAR SEMICOLON
Rule 90    condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif
Rule 91    cuadcondif -> <empty>
Rule 92    cuadrellenoif -> <empty>
Rule 93    condifp -> ELSE cuadconifelse bloque SEMICOLON
Rule 94    condifp -> SEMICOLON
Rule 95    cuadconifelse -> <empty>
Rule 96    condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
Rule 97    guardarsal -> <empty>
Rule 98    quadcondwhile -> <empty>
Rule 99    rellenocondwhile -> <empty>
Rule 100   conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
Rule 101   guardardowhile -> <empty>
Rule 102   quadconddowhile -> <empty>
Rule 103   expresion -> exp cuadexpresion expresionp
Rule 104   cuadexpresion -> <empty>
Rule 105   expresionp -> MORETHAN meteopdores expresion
Rule 106   expresionp -> LESSTHAN meteopdores expresion
Rule 107   expresionp -> EQL meteopdores expresion
Rule 108   expresionp -> NOTEQL meteopdores expresion
Rule 109   expresionp -> empty
Rule 110   mainf -> bloque SEMICOLON
Rule 111   empty -> <empty>

Terminals, with rules where they appear

AEQL                 : 74
AND                  : 77
COMMA                : 15 45 56 88
DO                   : 100
ELSE                 : 93
EQL                  : 107
FLOAT                : 20
FUNC                 : 1
ID                   : 11 12 36 41 44 48 49 55 72 73
IF                   : 90
INT                  : 19
LBRK                 : 21
LESSTHAN             : 106
LKEY                 : 60 61
LPAR                 : 32 41 48 49 49 83 90 96 100
MAIN                 : 1
MINUS                : 25
MORETHAN             : 105
MULT                 : 29
NOTEQL               : 108
NUMFLOAT             : 37
NUMINT               : 38
OR                   : 78
PLUS                 : 24
PRINT                : 83
RBRK                 : 21
RETURN               : 49
RKEY                 : 65
RPAR                 : 32 47 48 49 49 89 90 96 100
SEMICOLON            : 1 1 1 16 48 49 71 74 89 93 94 96 100 110
SLASH                : 30
STRING               : 85
VAR                  : 1
VOID                 : 48
WHILE                : 96 100
error                : 

Nonterminals, with rules where they appear

array                : 11 72
asignacion           : 66
asignacionp          : 72 73
auxandor             : 75
auxexp               : 22
auxtermino           : 27
bloque               : 48 49 90 93 96 100 110
bloquep              : 60 63
bloquepp             : 62
bloqueppp            : 61 64
conddowhile          : 69
condif               : 67
condifp              : 90
condwhile            : 68
cuadass              : 74
cuadcondif           : 90
cuadconifelse        : 93
cuadescritura        : 84
cuadescriturastring  : 85
cuadexp              : 22
cuadexpresion        : 103
cuadexpresionandor   : 75
cuadrellenoif        : 90
cuadtermino          : 27
debug                : 1
empty                : 5 7 9 16 18 26 31 54 57 59 79 109
escritura            : 70
escriturap           : 83 88
escriturapp          : 84 85
estatuto             : 62
exp                  : 21 24 25 49 103
expresion            : 32 75 84 90 96 100 105 106 107 108
expresionandor       : 74 77 78
expresionp           : 103
factor               : 27
funciones            : 1
funcionf             : 6 58
funcionid            : 48 49
funcionp             : 48 49
funcionpp            : 53 56
funcionppp           : 55
funcionpppp          : 48 49
funciontipo          : 19 20 48
guardardowhile       : 100
guardarsal           : 96
infondo              : 32
llamafunc            : 39 71
llamafuncp           : 41
llamafuncpp          : 42 45
llamafuncppp         : 44
llamafuncpppp        : 43 46
maines               : 1
mainf                : 8
meteconst            : 37 38 85
meteopandos          : 36 73
meteopdores          : 24 25 29 30 74 77 78 83 105 106 107 108
outfondo             : 32
programa             : 0
quadconddowhile      : 100
quadcondwhile        : 96
rellenocondwhile     : 96
resetmem             : 48 49
salidadoc            : 1
termino              : 22 29 30
tipo                 : 10 44 49 55
varcte               : 33
varf                 : 4 17
variable             : 1
varid                : 12 55
varp                 : 10 15
varpp                : 11 12
varppp               : 14
varpppp              : 16

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc

    VAR             shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> VAR . SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc

    SEMICOLON       shift and go to state 3


state 3

    (1) programa -> VAR SEMICOLON . variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc
    (4) variable -> . varf
    (5) variable -> . empty
    (10) varf -> . tipo varp
    (111) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    FUNC            reduce using rule 111 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    variable                       shift and go to state 4
    varf                           shift and go to state 5
    empty                          shift and go to state 6
    tipo                           shift and go to state 7

state 4

    (1) programa -> VAR SEMICOLON variable . FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc

    FUNC            shift and go to state 10


state 5

    (4) variable -> varf .

    FUNC            reduce using rule 4 (variable -> varf .)


state 6

    (5) variable -> empty .

    FUNC            reduce using rule 5 (variable -> empty .)


state 7

    (10) varf -> tipo . varp
    (11) varp -> . ID array varpp
    (12) varp -> . ID varid varpp

    ID              shift and go to state 12

    varp                           shift and go to state 11

state 8

    (19) tipo -> INT . funciontipo
    (51) funciontipo -> .

    ID              reduce using rule 51 (funciontipo -> .)

    funciontipo                    shift and go to state 13

state 9

    (20) tipo -> FLOAT . funciontipo
    (51) funciontipo -> .

    ID              reduce using rule 51 (funciontipo -> .)

    funciontipo                    shift and go to state 14

state 10

    (1) programa -> VAR SEMICOLON variable FUNC . SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc

    SEMICOLON       shift and go to state 15


state 11

    (10) varf -> tipo varp .

    FUNC            reduce using rule 10 (varf -> tipo varp .)


state 12

    (11) varp -> ID . array varpp
    (12) varp -> ID . varid varpp
    (21) array -> . LBRK exp RBRK
    (13) varid -> .

    LBRK            shift and go to state 18
    COMMA           reduce using rule 13 (varid -> .)
    SEMICOLON       reduce using rule 13 (varid -> .)

    array                          shift and go to state 16
    varid                          shift and go to state 17

state 13

    (19) tipo -> INT funciontipo .

    ID              reduce using rule 19 (tipo -> INT funciontipo .)


state 14

    (20) tipo -> FLOAT funciontipo .

    ID              reduce using rule 20 (tipo -> FLOAT funciontipo .)


state 15

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON . funciones MAIN SEMICOLON maines debug salidadoc
    (6) funciones -> . funcionf
    (7) funciones -> . empty
    (48) funcionf -> . VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (49) funcionf -> . tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (111) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    VOID            shift and go to state 22
    MAIN            reduce using rule 111 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funciones                      shift and go to state 19
    funcionf                       shift and go to state 20
    empty                          shift and go to state 21
    tipo                           shift and go to state 23

state 16

    (11) varp -> ID array . varpp
    (14) varpp -> . varppp
    (15) varppp -> . COMMA varp
    (16) varppp -> . SEMICOLON varpppp empty

    COMMA           shift and go to state 26
    SEMICOLON       shift and go to state 27

    varpp                          shift and go to state 24
    varppp                         shift and go to state 25

state 17

    (12) varp -> ID varid . varpp
    (14) varpp -> . varppp
    (15) varppp -> . COMMA varp
    (16) varppp -> . SEMICOLON varpppp empty

    COMMA           shift and go to state 26
    SEMICOLON       shift and go to state 27

    varpp                          shift and go to state 28
    varppp                         shift and go to state 25

state 18

    (21) array -> LBRK . exp RBRK
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 29
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 19

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones . MAIN SEMICOLON maines debug salidadoc

    MAIN            shift and go to state 38


state 20

    (6) funciones -> funcionf .

    MAIN            reduce using rule 6 (funciones -> funcionf .)


state 21

    (7) funciones -> empty .

    MAIN            reduce using rule 7 (funciones -> empty .)


state 22

    (48) funcionf -> VOID . funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (51) funciontipo -> .

    ID              reduce using rule 51 (funciontipo -> .)

    funciontipo                    shift and go to state 39

state 23

    (49) funcionf -> tipo . ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp

    ID              shift and go to state 40


state 24

    (11) varp -> ID array varpp .

    FUNC            reduce using rule 11 (varp -> ID array varpp .)


state 25

    (14) varpp -> varppp .

    FUNC            reduce using rule 14 (varpp -> varppp .)


state 26

    (15) varppp -> COMMA . varp
    (11) varp -> . ID array varpp
    (12) varp -> . ID varid varpp

    ID              shift and go to state 12

    varp                           shift and go to state 41

state 27

    (16) varppp -> SEMICOLON . varpppp empty
    (17) varpppp -> . varf
    (18) varpppp -> . empty
    (10) varf -> . tipo varp
    (111) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    FUNC            reduce using rule 111 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    varpppp                        shift and go to state 42
    empty                          shift and go to state 43
    varf                           shift and go to state 44
    tipo                           shift and go to state 7

state 28

    (12) varp -> ID varid varpp .

    FUNC            reduce using rule 12 (varp -> ID varid varpp .)


state 29

    (21) array -> LBRK exp . RBRK

    RBRK            shift and go to state 45


state 30

    (22) exp -> termino . cuadexp auxexp
    (23) cuadexp -> .

    PLUS            reduce using rule 23 (cuadexp -> .)
    MINUS           reduce using rule 23 (cuadexp -> .)
    RBRK            reduce using rule 23 (cuadexp -> .)
    MORETHAN        reduce using rule 23 (cuadexp -> .)
    LESSTHAN        reduce using rule 23 (cuadexp -> .)
    EQL             reduce using rule 23 (cuadexp -> .)
    NOTEQL          reduce using rule 23 (cuadexp -> .)
    RPAR            reduce using rule 23 (cuadexp -> .)
    COMMA           reduce using rule 23 (cuadexp -> .)
    AND             reduce using rule 23 (cuadexp -> .)
    OR              reduce using rule 23 (cuadexp -> .)
    SEMICOLON       reduce using rule 23 (cuadexp -> .)

    cuadexp                        shift and go to state 46

state 31

    (27) termino -> factor . cuadtermino auxtermino
    (28) cuadtermino -> .

    MULT            reduce using rule 28 (cuadtermino -> .)
    SLASH           reduce using rule 28 (cuadtermino -> .)
    PLUS            reduce using rule 28 (cuadtermino -> .)
    MINUS           reduce using rule 28 (cuadtermino -> .)
    RBRK            reduce using rule 28 (cuadtermino -> .)
    MORETHAN        reduce using rule 28 (cuadtermino -> .)
    LESSTHAN        reduce using rule 28 (cuadtermino -> .)
    EQL             reduce using rule 28 (cuadtermino -> .)
    NOTEQL          reduce using rule 28 (cuadtermino -> .)
    RPAR            reduce using rule 28 (cuadtermino -> .)
    COMMA           reduce using rule 28 (cuadtermino -> .)
    AND             reduce using rule 28 (cuadtermino -> .)
    OR              reduce using rule 28 (cuadtermino -> .)
    SEMICOLON       reduce using rule 28 (cuadtermino -> .)

    cuadtermino                    shift and go to state 47

state 32

    (32) factor -> LPAR . infondo expresion RPAR outfondo
    (34) infondo -> .

    LPAR            reduce using rule 34 (infondo -> .)
    ID              reduce using rule 34 (infondo -> .)
    NUMFLOAT        reduce using rule 34 (infondo -> .)
    NUMINT          reduce using rule 34 (infondo -> .)

    infondo                        shift and go to state 48

state 33

    (33) factor -> varcte .

    MULT            reduce using rule 33 (factor -> varcte .)
    SLASH           reduce using rule 33 (factor -> varcte .)
    PLUS            reduce using rule 33 (factor -> varcte .)
    MINUS           reduce using rule 33 (factor -> varcte .)
    RBRK            reduce using rule 33 (factor -> varcte .)
    MORETHAN        reduce using rule 33 (factor -> varcte .)
    LESSTHAN        reduce using rule 33 (factor -> varcte .)
    EQL             reduce using rule 33 (factor -> varcte .)
    NOTEQL          reduce using rule 33 (factor -> varcte .)
    RPAR            reduce using rule 33 (factor -> varcte .)
    COMMA           reduce using rule 33 (factor -> varcte .)
    AND             reduce using rule 33 (factor -> varcte .)
    OR              reduce using rule 33 (factor -> varcte .)
    SEMICOLON       reduce using rule 33 (factor -> varcte .)


state 34

    (36) varcte -> ID . meteopandos
    (41) llamafunc -> ID . LPAR llamafuncp
    (82) meteopandos -> .

    LPAR            shift and go to state 50
    MULT            reduce using rule 82 (meteopandos -> .)
    SLASH           reduce using rule 82 (meteopandos -> .)
    PLUS            reduce using rule 82 (meteopandos -> .)
    MINUS           reduce using rule 82 (meteopandos -> .)
    RBRK            reduce using rule 82 (meteopandos -> .)
    MORETHAN        reduce using rule 82 (meteopandos -> .)
    LESSTHAN        reduce using rule 82 (meteopandos -> .)
    EQL             reduce using rule 82 (meteopandos -> .)
    NOTEQL          reduce using rule 82 (meteopandos -> .)
    RPAR            reduce using rule 82 (meteopandos -> .)
    COMMA           reduce using rule 82 (meteopandos -> .)
    AND             reduce using rule 82 (meteopandos -> .)
    OR              reduce using rule 82 (meteopandos -> .)
    SEMICOLON       reduce using rule 82 (meteopandos -> .)

    meteopandos                    shift and go to state 49

state 35

    (37) varcte -> NUMFLOAT . meteconst
    (40) meteconst -> .

    MULT            reduce using rule 40 (meteconst -> .)
    SLASH           reduce using rule 40 (meteconst -> .)
    PLUS            reduce using rule 40 (meteconst -> .)
    MINUS           reduce using rule 40 (meteconst -> .)
    RBRK            reduce using rule 40 (meteconst -> .)
    MORETHAN        reduce using rule 40 (meteconst -> .)
    LESSTHAN        reduce using rule 40 (meteconst -> .)
    EQL             reduce using rule 40 (meteconst -> .)
    NOTEQL          reduce using rule 40 (meteconst -> .)
    RPAR            reduce using rule 40 (meteconst -> .)
    COMMA           reduce using rule 40 (meteconst -> .)
    AND             reduce using rule 40 (meteconst -> .)
    OR              reduce using rule 40 (meteconst -> .)
    SEMICOLON       reduce using rule 40 (meteconst -> .)

    meteconst                      shift and go to state 51

state 36

    (38) varcte -> NUMINT . meteconst
    (40) meteconst -> .

    MULT            reduce using rule 40 (meteconst -> .)
    SLASH           reduce using rule 40 (meteconst -> .)
    PLUS            reduce using rule 40 (meteconst -> .)
    MINUS           reduce using rule 40 (meteconst -> .)
    RBRK            reduce using rule 40 (meteconst -> .)
    MORETHAN        reduce using rule 40 (meteconst -> .)
    LESSTHAN        reduce using rule 40 (meteconst -> .)
    EQL             reduce using rule 40 (meteconst -> .)
    NOTEQL          reduce using rule 40 (meteconst -> .)
    RPAR            reduce using rule 40 (meteconst -> .)
    COMMA           reduce using rule 40 (meteconst -> .)
    AND             reduce using rule 40 (meteconst -> .)
    OR              reduce using rule 40 (meteconst -> .)
    SEMICOLON       reduce using rule 40 (meteconst -> .)

    meteconst                      shift and go to state 52

state 37

    (39) varcte -> llamafunc .

    MULT            reduce using rule 39 (varcte -> llamafunc .)
    SLASH           reduce using rule 39 (varcte -> llamafunc .)
    PLUS            reduce using rule 39 (varcte -> llamafunc .)
    MINUS           reduce using rule 39 (varcte -> llamafunc .)
    RBRK            reduce using rule 39 (varcte -> llamafunc .)
    MORETHAN        reduce using rule 39 (varcte -> llamafunc .)
    LESSTHAN        reduce using rule 39 (varcte -> llamafunc .)
    EQL             reduce using rule 39 (varcte -> llamafunc .)
    NOTEQL          reduce using rule 39 (varcte -> llamafunc .)
    RPAR            reduce using rule 39 (varcte -> llamafunc .)
    COMMA           reduce using rule 39 (varcte -> llamafunc .)
    AND             reduce using rule 39 (varcte -> llamafunc .)
    OR              reduce using rule 39 (varcte -> llamafunc .)
    SEMICOLON       reduce using rule 39 (varcte -> llamafunc .)


state 38

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN . SEMICOLON maines debug salidadoc

    SEMICOLON       shift and go to state 53


state 39

    (48) funcionf -> VOID funciontipo . ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp

    ID              shift and go to state 54


state 40

    (49) funcionf -> tipo ID . funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (52) funcionid -> .

    LPAR            reduce using rule 52 (funcionid -> .)

    funcionid                      shift and go to state 55

state 41

    (15) varppp -> COMMA varp .

    FUNC            reduce using rule 15 (varppp -> COMMA varp .)


state 42

    (16) varppp -> SEMICOLON varpppp . empty
    (111) empty -> .

    FUNC            reduce using rule 111 (empty -> .)

    empty                          shift and go to state 56

state 43

    (18) varpppp -> empty .

    FUNC            reduce using rule 18 (varpppp -> empty .)


state 44

    (17) varpppp -> varf .

    FUNC            reduce using rule 17 (varpppp -> varf .)


state 45

    (21) array -> LBRK exp RBRK .

    COMMA           reduce using rule 21 (array -> LBRK exp RBRK .)
    SEMICOLON       reduce using rule 21 (array -> LBRK exp RBRK .)
    AEQL            reduce using rule 21 (array -> LBRK exp RBRK .)


state 46

    (22) exp -> termino cuadexp . auxexp
    (24) auxexp -> . PLUS meteopdores exp
    (25) auxexp -> . MINUS meteopdores exp
    (26) auxexp -> . empty
    (111) empty -> .

    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    RBRK            reduce using rule 111 (empty -> .)
    MORETHAN        reduce using rule 111 (empty -> .)
    LESSTHAN        reduce using rule 111 (empty -> .)
    EQL             reduce using rule 111 (empty -> .)
    NOTEQL          reduce using rule 111 (empty -> .)
    RPAR            reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    AND             reduce using rule 111 (empty -> .)
    OR              reduce using rule 111 (empty -> .)
    SEMICOLON       reduce using rule 111 (empty -> .)

    auxexp                         shift and go to state 57
    empty                          shift and go to state 60

state 47

    (27) termino -> factor cuadtermino . auxtermino
    (29) auxtermino -> . MULT meteopdores termino
    (30) auxtermino -> . SLASH meteopdores termino
    (31) auxtermino -> . empty
    (111) empty -> .

    MULT            shift and go to state 62
    SLASH           shift and go to state 63
    PLUS            reduce using rule 111 (empty -> .)
    MINUS           reduce using rule 111 (empty -> .)
    RBRK            reduce using rule 111 (empty -> .)
    MORETHAN        reduce using rule 111 (empty -> .)
    LESSTHAN        reduce using rule 111 (empty -> .)
    EQL             reduce using rule 111 (empty -> .)
    NOTEQL          reduce using rule 111 (empty -> .)
    RPAR            reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    AND             reduce using rule 111 (empty -> .)
    OR              reduce using rule 111 (empty -> .)
    SEMICOLON       reduce using rule 111 (empty -> .)

    auxtermino                     shift and go to state 61
    empty                          shift and go to state 64

state 48

    (32) factor -> LPAR infondo . expresion RPAR outfondo
    (103) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 65
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 49

    (36) varcte -> ID meteopandos .

    MULT            reduce using rule 36 (varcte -> ID meteopandos .)
    SLASH           reduce using rule 36 (varcte -> ID meteopandos .)
    PLUS            reduce using rule 36 (varcte -> ID meteopandos .)
    MINUS           reduce using rule 36 (varcte -> ID meteopandos .)
    RBRK            reduce using rule 36 (varcte -> ID meteopandos .)
    MORETHAN        reduce using rule 36 (varcte -> ID meteopandos .)
    LESSTHAN        reduce using rule 36 (varcte -> ID meteopandos .)
    EQL             reduce using rule 36 (varcte -> ID meteopandos .)
    NOTEQL          reduce using rule 36 (varcte -> ID meteopandos .)
    RPAR            reduce using rule 36 (varcte -> ID meteopandos .)
    COMMA           reduce using rule 36 (varcte -> ID meteopandos .)
    AND             reduce using rule 36 (varcte -> ID meteopandos .)
    OR              reduce using rule 36 (varcte -> ID meteopandos .)
    SEMICOLON       reduce using rule 36 (varcte -> ID meteopandos .)


state 50

    (41) llamafunc -> ID LPAR . llamafuncp
    (42) llamafuncp -> . llamafuncpp
    (43) llamafuncp -> . llamafuncpppp
    (44) llamafuncpp -> . tipo ID llamafuncppp
    (47) llamafuncpppp -> . RPAR
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    RPAR            shift and go to state 71
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    llamafuncp                     shift and go to state 67
    llamafuncpp                    shift and go to state 68
    llamafuncpppp                  shift and go to state 69
    tipo                           shift and go to state 70

state 51

    (37) varcte -> NUMFLOAT meteconst .

    MULT            reduce using rule 37 (varcte -> NUMFLOAT meteconst .)
    SLASH           reduce using rule 37 (varcte -> NUMFLOAT meteconst .)
    PLUS            reduce using rule 37 (varcte -> NUMFLOAT meteconst .)
    MINUS           reduce using rule 37 (varcte -> NUMFLOAT meteconst .)
    RBRK            reduce using rule 37 (varcte -> NUMFLOAT meteconst .)
    MORETHAN        reduce using rule 37 (varcte -> NUMFLOAT meteconst .)
    LESSTHAN        reduce using rule 37 (varcte -> NUMFLOAT meteconst .)
    EQL             reduce using rule 37 (varcte -> NUMFLOAT meteconst .)
    NOTEQL          reduce using rule 37 (varcte -> NUMFLOAT meteconst .)
    RPAR            reduce using rule 37 (varcte -> NUMFLOAT meteconst .)
    COMMA           reduce using rule 37 (varcte -> NUMFLOAT meteconst .)
    AND             reduce using rule 37 (varcte -> NUMFLOAT meteconst .)
    OR              reduce using rule 37 (varcte -> NUMFLOAT meteconst .)
    SEMICOLON       reduce using rule 37 (varcte -> NUMFLOAT meteconst .)


state 52

    (38) varcte -> NUMINT meteconst .

    MULT            reduce using rule 38 (varcte -> NUMINT meteconst .)
    SLASH           reduce using rule 38 (varcte -> NUMINT meteconst .)
    PLUS            reduce using rule 38 (varcte -> NUMINT meteconst .)
    MINUS           reduce using rule 38 (varcte -> NUMINT meteconst .)
    RBRK            reduce using rule 38 (varcte -> NUMINT meteconst .)
    MORETHAN        reduce using rule 38 (varcte -> NUMINT meteconst .)
    LESSTHAN        reduce using rule 38 (varcte -> NUMINT meteconst .)
    EQL             reduce using rule 38 (varcte -> NUMINT meteconst .)
    NOTEQL          reduce using rule 38 (varcte -> NUMINT meteconst .)
    RPAR            reduce using rule 38 (varcte -> NUMINT meteconst .)
    COMMA           reduce using rule 38 (varcte -> NUMINT meteconst .)
    AND             reduce using rule 38 (varcte -> NUMINT meteconst .)
    OR              reduce using rule 38 (varcte -> NUMINT meteconst .)
    SEMICOLON       reduce using rule 38 (varcte -> NUMINT meteconst .)


state 53

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON . maines debug salidadoc
    (8) maines -> . mainf
    (9) maines -> . empty
    (110) mainf -> . bloque SEMICOLON
    (111) empty -> .
    (60) bloque -> . LKEY bloquep
    (61) bloque -> . LKEY bloqueppp

    $end            reduce using rule 111 (empty -> .)
    LKEY            shift and go to state 76

    maines                         shift and go to state 72
    mainf                          shift and go to state 73
    empty                          shift and go to state 74
    bloque                         shift and go to state 75

state 54

    (48) funcionf -> VOID funciontipo ID . funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (52) funcionid -> .

    LPAR            reduce using rule 52 (funcionid -> .)

    funcionid                      shift and go to state 77

state 55

    (49) funcionf -> tipo ID funcionid . LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp

    LPAR            shift and go to state 78


state 56

    (16) varppp -> SEMICOLON varpppp empty .

    FUNC            reduce using rule 16 (varppp -> SEMICOLON varpppp empty .)


state 57

    (22) exp -> termino cuadexp auxexp .

    RBRK            reduce using rule 22 (exp -> termino cuadexp auxexp .)
    MORETHAN        reduce using rule 22 (exp -> termino cuadexp auxexp .)
    LESSTHAN        reduce using rule 22 (exp -> termino cuadexp auxexp .)
    EQL             reduce using rule 22 (exp -> termino cuadexp auxexp .)
    NOTEQL          reduce using rule 22 (exp -> termino cuadexp auxexp .)
    RPAR            reduce using rule 22 (exp -> termino cuadexp auxexp .)
    COMMA           reduce using rule 22 (exp -> termino cuadexp auxexp .)
    AND             reduce using rule 22 (exp -> termino cuadexp auxexp .)
    OR              reduce using rule 22 (exp -> termino cuadexp auxexp .)
    SEMICOLON       reduce using rule 22 (exp -> termino cuadexp auxexp .)


state 58

    (24) auxexp -> PLUS . meteopdores exp
    (81) meteopdores -> .

    LPAR            reduce using rule 81 (meteopdores -> .)
    ID              reduce using rule 81 (meteopdores -> .)
    NUMFLOAT        reduce using rule 81 (meteopdores -> .)
    NUMINT          reduce using rule 81 (meteopdores -> .)

    meteopdores                    shift and go to state 79

state 59

    (25) auxexp -> MINUS . meteopdores exp
    (81) meteopdores -> .

    LPAR            reduce using rule 81 (meteopdores -> .)
    ID              reduce using rule 81 (meteopdores -> .)
    NUMFLOAT        reduce using rule 81 (meteopdores -> .)
    NUMINT          reduce using rule 81 (meteopdores -> .)

    meteopdores                    shift and go to state 80

state 60

    (26) auxexp -> empty .

    RBRK            reduce using rule 26 (auxexp -> empty .)
    MORETHAN        reduce using rule 26 (auxexp -> empty .)
    LESSTHAN        reduce using rule 26 (auxexp -> empty .)
    EQL             reduce using rule 26 (auxexp -> empty .)
    NOTEQL          reduce using rule 26 (auxexp -> empty .)
    RPAR            reduce using rule 26 (auxexp -> empty .)
    COMMA           reduce using rule 26 (auxexp -> empty .)
    AND             reduce using rule 26 (auxexp -> empty .)
    OR              reduce using rule 26 (auxexp -> empty .)
    SEMICOLON       reduce using rule 26 (auxexp -> empty .)


state 61

    (27) termino -> factor cuadtermino auxtermino .

    PLUS            reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    MINUS           reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    RBRK            reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    MORETHAN        reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    LESSTHAN        reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    EQL             reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    NOTEQL          reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    RPAR            reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    COMMA           reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    AND             reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    OR              reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    SEMICOLON       reduce using rule 27 (termino -> factor cuadtermino auxtermino .)


state 62

    (29) auxtermino -> MULT . meteopdores termino
    (81) meteopdores -> .

    LPAR            reduce using rule 81 (meteopdores -> .)
    ID              reduce using rule 81 (meteopdores -> .)
    NUMFLOAT        reduce using rule 81 (meteopdores -> .)
    NUMINT          reduce using rule 81 (meteopdores -> .)

    meteopdores                    shift and go to state 81

state 63

    (30) auxtermino -> SLASH . meteopdores termino
    (81) meteopdores -> .

    LPAR            reduce using rule 81 (meteopdores -> .)
    ID              reduce using rule 81 (meteopdores -> .)
    NUMFLOAT        reduce using rule 81 (meteopdores -> .)
    NUMINT          reduce using rule 81 (meteopdores -> .)

    meteopdores                    shift and go to state 82

state 64

    (31) auxtermino -> empty .

    PLUS            reduce using rule 31 (auxtermino -> empty .)
    MINUS           reduce using rule 31 (auxtermino -> empty .)
    RBRK            reduce using rule 31 (auxtermino -> empty .)
    MORETHAN        reduce using rule 31 (auxtermino -> empty .)
    LESSTHAN        reduce using rule 31 (auxtermino -> empty .)
    EQL             reduce using rule 31 (auxtermino -> empty .)
    NOTEQL          reduce using rule 31 (auxtermino -> empty .)
    RPAR            reduce using rule 31 (auxtermino -> empty .)
    COMMA           reduce using rule 31 (auxtermino -> empty .)
    AND             reduce using rule 31 (auxtermino -> empty .)
    OR              reduce using rule 31 (auxtermino -> empty .)
    SEMICOLON       reduce using rule 31 (auxtermino -> empty .)


state 65

    (32) factor -> LPAR infondo expresion . RPAR outfondo

    RPAR            shift and go to state 83


state 66

    (103) expresion -> exp . cuadexpresion expresionp
    (104) cuadexpresion -> .

    MORETHAN        reduce using rule 104 (cuadexpresion -> .)
    LESSTHAN        reduce using rule 104 (cuadexpresion -> .)
    EQL             reduce using rule 104 (cuadexpresion -> .)
    NOTEQL          reduce using rule 104 (cuadexpresion -> .)
    RPAR            reduce using rule 104 (cuadexpresion -> .)
    COMMA           reduce using rule 104 (cuadexpresion -> .)
    AND             reduce using rule 104 (cuadexpresion -> .)
    OR              reduce using rule 104 (cuadexpresion -> .)
    SEMICOLON       reduce using rule 104 (cuadexpresion -> .)

    cuadexpresion                  shift and go to state 84

state 67

    (41) llamafunc -> ID LPAR llamafuncp .

    MULT            reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)
    SLASH           reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)
    PLUS            reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)
    MINUS           reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)
    RBRK            reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)
    MORETHAN        reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)
    LESSTHAN        reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)
    EQL             reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)
    NOTEQL          reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)
    RPAR            reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)
    SEMICOLON       reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)
    COMMA           reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)
    AND             reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)
    OR              reduce using rule 41 (llamafunc -> ID LPAR llamafuncp .)


state 68

    (42) llamafuncp -> llamafuncpp .

    MULT            reduce using rule 42 (llamafuncp -> llamafuncpp .)
    SLASH           reduce using rule 42 (llamafuncp -> llamafuncpp .)
    PLUS            reduce using rule 42 (llamafuncp -> llamafuncpp .)
    MINUS           reduce using rule 42 (llamafuncp -> llamafuncpp .)
    RBRK            reduce using rule 42 (llamafuncp -> llamafuncpp .)
    MORETHAN        reduce using rule 42 (llamafuncp -> llamafuncpp .)
    LESSTHAN        reduce using rule 42 (llamafuncp -> llamafuncpp .)
    EQL             reduce using rule 42 (llamafuncp -> llamafuncpp .)
    NOTEQL          reduce using rule 42 (llamafuncp -> llamafuncpp .)
    RPAR            reduce using rule 42 (llamafuncp -> llamafuncpp .)
    SEMICOLON       reduce using rule 42 (llamafuncp -> llamafuncpp .)
    COMMA           reduce using rule 42 (llamafuncp -> llamafuncpp .)
    AND             reduce using rule 42 (llamafuncp -> llamafuncpp .)
    OR              reduce using rule 42 (llamafuncp -> llamafuncpp .)


state 69

    (43) llamafuncp -> llamafuncpppp .

    MULT            reduce using rule 43 (llamafuncp -> llamafuncpppp .)
    SLASH           reduce using rule 43 (llamafuncp -> llamafuncpppp .)
    PLUS            reduce using rule 43 (llamafuncp -> llamafuncpppp .)
    MINUS           reduce using rule 43 (llamafuncp -> llamafuncpppp .)
    RBRK            reduce using rule 43 (llamafuncp -> llamafuncpppp .)
    MORETHAN        reduce using rule 43 (llamafuncp -> llamafuncpppp .)
    LESSTHAN        reduce using rule 43 (llamafuncp -> llamafuncpppp .)
    EQL             reduce using rule 43 (llamafuncp -> llamafuncpppp .)
    NOTEQL          reduce using rule 43 (llamafuncp -> llamafuncpppp .)
    RPAR            reduce using rule 43 (llamafuncp -> llamafuncpppp .)
    SEMICOLON       reduce using rule 43 (llamafuncp -> llamafuncpppp .)
    COMMA           reduce using rule 43 (llamafuncp -> llamafuncpppp .)
    AND             reduce using rule 43 (llamafuncp -> llamafuncpppp .)
    OR              reduce using rule 43 (llamafuncp -> llamafuncpppp .)


state 70

    (44) llamafuncpp -> tipo . ID llamafuncppp

    ID              shift and go to state 85


state 71

    (47) llamafuncpppp -> RPAR .

    MULT            reduce using rule 47 (llamafuncpppp -> RPAR .)
    SLASH           reduce using rule 47 (llamafuncpppp -> RPAR .)
    PLUS            reduce using rule 47 (llamafuncpppp -> RPAR .)
    MINUS           reduce using rule 47 (llamafuncpppp -> RPAR .)
    RBRK            reduce using rule 47 (llamafuncpppp -> RPAR .)
    MORETHAN        reduce using rule 47 (llamafuncpppp -> RPAR .)
    LESSTHAN        reduce using rule 47 (llamafuncpppp -> RPAR .)
    EQL             reduce using rule 47 (llamafuncpppp -> RPAR .)
    NOTEQL          reduce using rule 47 (llamafuncpppp -> RPAR .)
    RPAR            reduce using rule 47 (llamafuncpppp -> RPAR .)
    SEMICOLON       reduce using rule 47 (llamafuncpppp -> RPAR .)
    COMMA           reduce using rule 47 (llamafuncpppp -> RPAR .)
    AND             reduce using rule 47 (llamafuncpppp -> RPAR .)
    OR              reduce using rule 47 (llamafuncpppp -> RPAR .)


state 72

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines . debug salidadoc
    (3) debug -> .

    $end            reduce using rule 3 (debug -> .)

    debug                          shift and go to state 86

state 73

    (8) maines -> mainf .

    $end            reduce using rule 8 (maines -> mainf .)


state 74

    (9) maines -> empty .

    $end            reduce using rule 9 (maines -> empty .)


state 75

    (110) mainf -> bloque . SEMICOLON

    SEMICOLON       shift and go to state 87


state 76

    (60) bloque -> LKEY . bloquep
    (61) bloque -> LKEY . bloqueppp
    (62) bloquep -> . estatuto bloquepp
    (65) bloqueppp -> . RKEY
    (66) estatuto -> . asignacion
    (67) estatuto -> . condif
    (68) estatuto -> . condwhile
    (69) estatuto -> . conddowhile
    (70) estatuto -> . escritura
    (71) estatuto -> . llamafunc SEMICOLON
    (72) asignacion -> . ID array asignacionp
    (73) asignacion -> . ID meteopandos asignacionp
    (90) condif -> . IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif
    (96) condwhile -> . WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (100) conddowhile -> . DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (83) escritura -> . PRINT meteopdores LPAR escriturap
    (41) llamafunc -> . ID LPAR llamafuncp

    RKEY            shift and go to state 91
    ID              shift and go to state 98
    IF              shift and go to state 99
    WHILE           shift and go to state 100
    DO              shift and go to state 101
    PRINT           shift and go to state 102

    bloquep                        shift and go to state 88
    bloqueppp                      shift and go to state 89
    estatuto                       shift and go to state 90
    asignacion                     shift and go to state 92
    condif                         shift and go to state 93
    condwhile                      shift and go to state 94
    conddowhile                    shift and go to state 95
    escritura                      shift and go to state 96
    llamafunc                      shift and go to state 97

state 77

    (48) funcionf -> VOID funciontipo ID funcionid . LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp

    LPAR            shift and go to state 103


state 78

    (49) funcionf -> tipo ID funcionid LPAR . funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (53) funcionp -> . funcionpp
    (54) funcionp -> . empty
    (55) funcionpp -> . tipo ID varid funcionppp
    (111) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    RPAR            reduce using rule 111 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    tipo                           shift and go to state 104
    funcionp                       shift and go to state 105
    funcionpp                      shift and go to state 106
    empty                          shift and go to state 107

state 79

    (24) auxexp -> PLUS meteopdores . exp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 108
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 80

    (25) auxexp -> MINUS meteopdores . exp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 109
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 81

    (29) auxtermino -> MULT meteopdores . termino
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    termino                        shift and go to state 110
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 82

    (30) auxtermino -> SLASH meteopdores . termino
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    termino                        shift and go to state 111
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 83

    (32) factor -> LPAR infondo expresion RPAR . outfondo
    (35) outfondo -> .

    MULT            reduce using rule 35 (outfondo -> .)
    SLASH           reduce using rule 35 (outfondo -> .)
    PLUS            reduce using rule 35 (outfondo -> .)
    MINUS           reduce using rule 35 (outfondo -> .)
    RBRK            reduce using rule 35 (outfondo -> .)
    MORETHAN        reduce using rule 35 (outfondo -> .)
    LESSTHAN        reduce using rule 35 (outfondo -> .)
    EQL             reduce using rule 35 (outfondo -> .)
    NOTEQL          reduce using rule 35 (outfondo -> .)
    RPAR            reduce using rule 35 (outfondo -> .)
    COMMA           reduce using rule 35 (outfondo -> .)
    AND             reduce using rule 35 (outfondo -> .)
    OR              reduce using rule 35 (outfondo -> .)
    SEMICOLON       reduce using rule 35 (outfondo -> .)

    outfondo                       shift and go to state 112

state 84

    (103) expresion -> exp cuadexpresion . expresionp
    (105) expresionp -> . MORETHAN meteopdores expresion
    (106) expresionp -> . LESSTHAN meteopdores expresion
    (107) expresionp -> . EQL meteopdores expresion
    (108) expresionp -> . NOTEQL meteopdores expresion
    (109) expresionp -> . empty
    (111) empty -> .

    MORETHAN        shift and go to state 114
    LESSTHAN        shift and go to state 115
    EQL             shift and go to state 116
    NOTEQL          shift and go to state 117
    RPAR            reduce using rule 111 (empty -> .)
    COMMA           reduce using rule 111 (empty -> .)
    AND             reduce using rule 111 (empty -> .)
    OR              reduce using rule 111 (empty -> .)
    SEMICOLON       reduce using rule 111 (empty -> .)

    expresionp                     shift and go to state 113
    empty                          shift and go to state 118

state 85

    (44) llamafuncpp -> tipo ID . llamafuncppp
    (45) llamafuncppp -> . COMMA llamafuncpp
    (46) llamafuncppp -> . llamafuncpppp
    (47) llamafuncpppp -> . RPAR

    COMMA           shift and go to state 120
    RPAR            shift and go to state 71

    llamafuncppp                   shift and go to state 119
    llamafuncpppp                  shift and go to state 121

state 86

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug . salidadoc
    (2) salidadoc -> .

    $end            reduce using rule 2 (salidadoc -> .)

    salidadoc                      shift and go to state 122

state 87

    (110) mainf -> bloque SEMICOLON .

    $end            reduce using rule 110 (mainf -> bloque SEMICOLON .)


state 88

    (60) bloque -> LKEY bloquep .

    SEMICOLON       reduce using rule 60 (bloque -> LKEY bloquep .)
    WHILE           reduce using rule 60 (bloque -> LKEY bloquep .)
    RETURN          reduce using rule 60 (bloque -> LKEY bloquep .)
    ELSE            reduce using rule 60 (bloque -> LKEY bloquep .)


state 89

    (61) bloque -> LKEY bloqueppp .

    SEMICOLON       reduce using rule 61 (bloque -> LKEY bloqueppp .)
    WHILE           reduce using rule 61 (bloque -> LKEY bloqueppp .)
    RETURN          reduce using rule 61 (bloque -> LKEY bloqueppp .)
    ELSE            reduce using rule 61 (bloque -> LKEY bloqueppp .)


state 90

    (62) bloquep -> estatuto . bloquepp
    (63) bloquepp -> . bloquep
    (64) bloquepp -> . bloqueppp
    (62) bloquep -> . estatuto bloquepp
    (65) bloqueppp -> . RKEY
    (66) estatuto -> . asignacion
    (67) estatuto -> . condif
    (68) estatuto -> . condwhile
    (69) estatuto -> . conddowhile
    (70) estatuto -> . escritura
    (71) estatuto -> . llamafunc SEMICOLON
    (72) asignacion -> . ID array asignacionp
    (73) asignacion -> . ID meteopandos asignacionp
    (90) condif -> . IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif
    (96) condwhile -> . WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (100) conddowhile -> . DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (83) escritura -> . PRINT meteopdores LPAR escriturap
    (41) llamafunc -> . ID LPAR llamafuncp

    RKEY            shift and go to state 91
    ID              shift and go to state 98
    IF              shift and go to state 99
    WHILE           shift and go to state 100
    DO              shift and go to state 101
    PRINT           shift and go to state 102

    estatuto                       shift and go to state 90
    bloquepp                       shift and go to state 123
    bloquep                        shift and go to state 124
    bloqueppp                      shift and go to state 125
    asignacion                     shift and go to state 92
    condif                         shift and go to state 93
    condwhile                      shift and go to state 94
    conddowhile                    shift and go to state 95
    escritura                      shift and go to state 96
    llamafunc                      shift and go to state 97

state 91

    (65) bloqueppp -> RKEY .

    SEMICOLON       reduce using rule 65 (bloqueppp -> RKEY .)
    WHILE           reduce using rule 65 (bloqueppp -> RKEY .)
    RETURN          reduce using rule 65 (bloqueppp -> RKEY .)
    ELSE            reduce using rule 65 (bloqueppp -> RKEY .)


state 92

    (66) estatuto -> asignacion .

    RKEY            reduce using rule 66 (estatuto -> asignacion .)
    ID              reduce using rule 66 (estatuto -> asignacion .)
    IF              reduce using rule 66 (estatuto -> asignacion .)
    WHILE           reduce using rule 66 (estatuto -> asignacion .)
    DO              reduce using rule 66 (estatuto -> asignacion .)
    PRINT           reduce using rule 66 (estatuto -> asignacion .)


state 93

    (67) estatuto -> condif .

    RKEY            reduce using rule 67 (estatuto -> condif .)
    ID              reduce using rule 67 (estatuto -> condif .)
    IF              reduce using rule 67 (estatuto -> condif .)
    WHILE           reduce using rule 67 (estatuto -> condif .)
    DO              reduce using rule 67 (estatuto -> condif .)
    PRINT           reduce using rule 67 (estatuto -> condif .)


state 94

    (68) estatuto -> condwhile .

    RKEY            reduce using rule 68 (estatuto -> condwhile .)
    ID              reduce using rule 68 (estatuto -> condwhile .)
    IF              reduce using rule 68 (estatuto -> condwhile .)
    WHILE           reduce using rule 68 (estatuto -> condwhile .)
    DO              reduce using rule 68 (estatuto -> condwhile .)
    PRINT           reduce using rule 68 (estatuto -> condwhile .)


state 95

    (69) estatuto -> conddowhile .

    RKEY            reduce using rule 69 (estatuto -> conddowhile .)
    ID              reduce using rule 69 (estatuto -> conddowhile .)
    IF              reduce using rule 69 (estatuto -> conddowhile .)
    WHILE           reduce using rule 69 (estatuto -> conddowhile .)
    DO              reduce using rule 69 (estatuto -> conddowhile .)
    PRINT           reduce using rule 69 (estatuto -> conddowhile .)


state 96

    (70) estatuto -> escritura .

    RKEY            reduce using rule 70 (estatuto -> escritura .)
    ID              reduce using rule 70 (estatuto -> escritura .)
    IF              reduce using rule 70 (estatuto -> escritura .)
    WHILE           reduce using rule 70 (estatuto -> escritura .)
    DO              reduce using rule 70 (estatuto -> escritura .)
    PRINT           reduce using rule 70 (estatuto -> escritura .)


state 97

    (71) estatuto -> llamafunc . SEMICOLON

    SEMICOLON       shift and go to state 126


state 98

    (72) asignacion -> ID . array asignacionp
    (73) asignacion -> ID . meteopandos asignacionp
    (41) llamafunc -> ID . LPAR llamafuncp
    (21) array -> . LBRK exp RBRK
    (82) meteopandos -> .

    LPAR            shift and go to state 50
    LBRK            shift and go to state 18
    AEQL            reduce using rule 82 (meteopandos -> .)

    array                          shift and go to state 127
    meteopandos                    shift and go to state 128

state 99

    (90) condif -> IF . LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif

    LPAR            shift and go to state 129


state 100

    (96) condwhile -> WHILE . LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON

    LPAR            shift and go to state 130


state 101

    (100) conddowhile -> DO . guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (101) guardardowhile -> .

    LKEY            reduce using rule 101 (guardardowhile -> .)

    guardardowhile                 shift and go to state 131

state 102

    (83) escritura -> PRINT . meteopdores LPAR escriturap
    (81) meteopdores -> .

    LPAR            reduce using rule 81 (meteopdores -> .)

    meteopdores                    shift and go to state 132

state 103

    (48) funcionf -> VOID funciontipo ID funcionid LPAR . funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (53) funcionp -> . funcionpp
    (54) funcionp -> . empty
    (55) funcionpp -> . tipo ID varid funcionppp
    (111) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    RPAR            reduce using rule 111 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funcionp                       shift and go to state 133
    funcionpp                      shift and go to state 106
    empty                          shift and go to state 107
    tipo                           shift and go to state 104

state 104

    (55) funcionpp -> tipo . ID varid funcionppp

    ID              shift and go to state 134


state 105

    (49) funcionf -> tipo ID funcionid LPAR funcionp . RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp

    RPAR            shift and go to state 135


state 106

    (53) funcionp -> funcionpp .

    RPAR            reduce using rule 53 (funcionp -> funcionpp .)


state 107

    (54) funcionp -> empty .

    RPAR            reduce using rule 54 (funcionp -> empty .)


state 108

    (24) auxexp -> PLUS meteopdores exp .

    RBRK            reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    MORETHAN        reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    LESSTHAN        reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    EQL             reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    NOTEQL          reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    RPAR            reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    COMMA           reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    AND             reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    OR              reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    SEMICOLON       reduce using rule 24 (auxexp -> PLUS meteopdores exp .)


state 109

    (25) auxexp -> MINUS meteopdores exp .

    RBRK            reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    MORETHAN        reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    LESSTHAN        reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    EQL             reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    NOTEQL          reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    RPAR            reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    COMMA           reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    AND             reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    OR              reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    SEMICOLON       reduce using rule 25 (auxexp -> MINUS meteopdores exp .)


state 110

    (29) auxtermino -> MULT meteopdores termino .

    PLUS            reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    MINUS           reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    RBRK            reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    MORETHAN        reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    LESSTHAN        reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    EQL             reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    NOTEQL          reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    RPAR            reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    COMMA           reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    AND             reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    OR              reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    SEMICOLON       reduce using rule 29 (auxtermino -> MULT meteopdores termino .)


state 111

    (30) auxtermino -> SLASH meteopdores termino .

    PLUS            reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    MINUS           reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    RBRK            reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    MORETHAN        reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    LESSTHAN        reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    EQL             reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    NOTEQL          reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    RPAR            reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    COMMA           reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    AND             reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    OR              reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    SEMICOLON       reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)


state 112

    (32) factor -> LPAR infondo expresion RPAR outfondo .

    MULT            reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)
    SLASH           reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)
    PLUS            reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)
    MINUS           reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)
    RBRK            reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)
    MORETHAN        reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)
    LESSTHAN        reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)
    EQL             reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)
    NOTEQL          reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)
    RPAR            reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)
    COMMA           reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)
    AND             reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)
    OR              reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)
    SEMICOLON       reduce using rule 32 (factor -> LPAR infondo expresion RPAR outfondo .)


state 113

    (103) expresion -> exp cuadexpresion expresionp .

    RPAR            reduce using rule 103 (expresion -> exp cuadexpresion expresionp .)
    COMMA           reduce using rule 103 (expresion -> exp cuadexpresion expresionp .)
    AND             reduce using rule 103 (expresion -> exp cuadexpresion expresionp .)
    OR              reduce using rule 103 (expresion -> exp cuadexpresion expresionp .)
    SEMICOLON       reduce using rule 103 (expresion -> exp cuadexpresion expresionp .)


state 114

    (105) expresionp -> MORETHAN . meteopdores expresion
    (81) meteopdores -> .

    LPAR            reduce using rule 81 (meteopdores -> .)
    ID              reduce using rule 81 (meteopdores -> .)
    NUMFLOAT        reduce using rule 81 (meteopdores -> .)
    NUMINT          reduce using rule 81 (meteopdores -> .)

    meteopdores                    shift and go to state 136

state 115

    (106) expresionp -> LESSTHAN . meteopdores expresion
    (81) meteopdores -> .

    LPAR            reduce using rule 81 (meteopdores -> .)
    ID              reduce using rule 81 (meteopdores -> .)
    NUMFLOAT        reduce using rule 81 (meteopdores -> .)
    NUMINT          reduce using rule 81 (meteopdores -> .)

    meteopdores                    shift and go to state 137

state 116

    (107) expresionp -> EQL . meteopdores expresion
    (81) meteopdores -> .

    LPAR            reduce using rule 81 (meteopdores -> .)
    ID              reduce using rule 81 (meteopdores -> .)
    NUMFLOAT        reduce using rule 81 (meteopdores -> .)
    NUMINT          reduce using rule 81 (meteopdores -> .)

    meteopdores                    shift and go to state 138

state 117

    (108) expresionp -> NOTEQL . meteopdores expresion
    (81) meteopdores -> .

    LPAR            reduce using rule 81 (meteopdores -> .)
    ID              reduce using rule 81 (meteopdores -> .)
    NUMFLOAT        reduce using rule 81 (meteopdores -> .)
    NUMINT          reduce using rule 81 (meteopdores -> .)

    meteopdores                    shift and go to state 139

state 118

    (109) expresionp -> empty .

    RPAR            reduce using rule 109 (expresionp -> empty .)
    COMMA           reduce using rule 109 (expresionp -> empty .)
    AND             reduce using rule 109 (expresionp -> empty .)
    OR              reduce using rule 109 (expresionp -> empty .)
    SEMICOLON       reduce using rule 109 (expresionp -> empty .)


state 119

    (44) llamafuncpp -> tipo ID llamafuncppp .

    MULT            reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)
    SLASH           reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)
    PLUS            reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)
    MINUS           reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)
    RBRK            reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)
    MORETHAN        reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)
    LESSTHAN        reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)
    EQL             reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)
    NOTEQL          reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)
    RPAR            reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)
    SEMICOLON       reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)
    COMMA           reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)
    AND             reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)
    OR              reduce using rule 44 (llamafuncpp -> tipo ID llamafuncppp .)


state 120

    (45) llamafuncppp -> COMMA . llamafuncpp
    (44) llamafuncpp -> . tipo ID llamafuncppp
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    llamafuncpp                    shift and go to state 140
    tipo                           shift and go to state 70

state 121

    (46) llamafuncppp -> llamafuncpppp .

    MULT            reduce using rule 46 (llamafuncppp -> llamafuncpppp .)
    SLASH           reduce using rule 46 (llamafuncppp -> llamafuncpppp .)
    PLUS            reduce using rule 46 (llamafuncppp -> llamafuncpppp .)
    MINUS           reduce using rule 46 (llamafuncppp -> llamafuncpppp .)
    RBRK            reduce using rule 46 (llamafuncppp -> llamafuncpppp .)
    MORETHAN        reduce using rule 46 (llamafuncppp -> llamafuncpppp .)
    LESSTHAN        reduce using rule 46 (llamafuncppp -> llamafuncpppp .)
    EQL             reduce using rule 46 (llamafuncppp -> llamafuncpppp .)
    NOTEQL          reduce using rule 46 (llamafuncppp -> llamafuncpppp .)
    RPAR            reduce using rule 46 (llamafuncppp -> llamafuncpppp .)
    SEMICOLON       reduce using rule 46 (llamafuncppp -> llamafuncpppp .)
    COMMA           reduce using rule 46 (llamafuncppp -> llamafuncpppp .)
    AND             reduce using rule 46 (llamafuncppp -> llamafuncpppp .)
    OR              reduce using rule 46 (llamafuncppp -> llamafuncpppp .)


state 122

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc .

    $end            reduce using rule 1 (programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc .)


state 123

    (62) bloquep -> estatuto bloquepp .

    SEMICOLON       reduce using rule 62 (bloquep -> estatuto bloquepp .)
    WHILE           reduce using rule 62 (bloquep -> estatuto bloquepp .)
    RETURN          reduce using rule 62 (bloquep -> estatuto bloquepp .)
    ELSE            reduce using rule 62 (bloquep -> estatuto bloquepp .)


state 124

    (63) bloquepp -> bloquep .

    SEMICOLON       reduce using rule 63 (bloquepp -> bloquep .)
    WHILE           reduce using rule 63 (bloquepp -> bloquep .)
    RETURN          reduce using rule 63 (bloquepp -> bloquep .)
    ELSE            reduce using rule 63 (bloquepp -> bloquep .)


state 125

    (64) bloquepp -> bloqueppp .

    SEMICOLON       reduce using rule 64 (bloquepp -> bloqueppp .)
    WHILE           reduce using rule 64 (bloquepp -> bloqueppp .)
    RETURN          reduce using rule 64 (bloquepp -> bloqueppp .)
    ELSE            reduce using rule 64 (bloquepp -> bloqueppp .)


state 126

    (71) estatuto -> llamafunc SEMICOLON .

    RKEY            reduce using rule 71 (estatuto -> llamafunc SEMICOLON .)
    ID              reduce using rule 71 (estatuto -> llamafunc SEMICOLON .)
    IF              reduce using rule 71 (estatuto -> llamafunc SEMICOLON .)
    WHILE           reduce using rule 71 (estatuto -> llamafunc SEMICOLON .)
    DO              reduce using rule 71 (estatuto -> llamafunc SEMICOLON .)
    PRINT           reduce using rule 71 (estatuto -> llamafunc SEMICOLON .)


state 127

    (72) asignacion -> ID array . asignacionp
    (74) asignacionp -> . AEQL meteopdores expresionandor cuadass SEMICOLON

    AEQL            shift and go to state 142

    asignacionp                    shift and go to state 141

state 128

    (73) asignacion -> ID meteopandos . asignacionp
    (74) asignacionp -> . AEQL meteopdores expresionandor cuadass SEMICOLON

    AEQL            shift and go to state 142

    asignacionp                    shift and go to state 143

state 129

    (90) condif -> IF LPAR . expresion cuadcondif RPAR bloque condifp cuadrellenoif
    (103) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 144
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 130

    (96) condwhile -> WHILE LPAR . guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (97) guardarsal -> .

    LPAR            reduce using rule 97 (guardarsal -> .)
    ID              reduce using rule 97 (guardarsal -> .)
    NUMFLOAT        reduce using rule 97 (guardarsal -> .)
    NUMINT          reduce using rule 97 (guardarsal -> .)

    guardarsal                     shift and go to state 145

state 131

    (100) conddowhile -> DO guardardowhile . bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (60) bloque -> . LKEY bloquep
    (61) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 76

    bloque                         shift and go to state 146

state 132

    (83) escritura -> PRINT meteopdores . LPAR escriturap

    LPAR            shift and go to state 147


state 133

    (48) funcionf -> VOID funciontipo ID funcionid LPAR funcionp . RPAR bloque resetmem SEMICOLON funcionpppp

    RPAR            shift and go to state 148


state 134

    (55) funcionpp -> tipo ID . varid funcionppp
    (13) varid -> .

    COMMA           reduce using rule 13 (varid -> .)
    RPAR            reduce using rule 13 (varid -> .)

    varid                          shift and go to state 149

state 135

    (49) funcionf -> tipo ID funcionid LPAR funcionp RPAR . bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (60) bloque -> . LKEY bloquep
    (61) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 76

    bloque                         shift and go to state 150

state 136

    (105) expresionp -> MORETHAN meteopdores . expresion
    (103) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 151
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 137

    (106) expresionp -> LESSTHAN meteopdores . expresion
    (103) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 152
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 138

    (107) expresionp -> EQL meteopdores . expresion
    (103) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 153
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 139

    (108) expresionp -> NOTEQL meteopdores . expresion
    (103) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 154
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 140

    (45) llamafuncppp -> COMMA llamafuncpp .

    MULT            reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)
    SLASH           reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)
    PLUS            reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)
    MINUS           reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)
    RBRK            reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)
    MORETHAN        reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)
    LESSTHAN        reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)
    EQL             reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)
    NOTEQL          reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)
    RPAR            reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)
    SEMICOLON       reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)
    COMMA           reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)
    AND             reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)
    OR              reduce using rule 45 (llamafuncppp -> COMMA llamafuncpp .)


state 141

    (72) asignacion -> ID array asignacionp .

    RKEY            reduce using rule 72 (asignacion -> ID array asignacionp .)
    ID              reduce using rule 72 (asignacion -> ID array asignacionp .)
    IF              reduce using rule 72 (asignacion -> ID array asignacionp .)
    WHILE           reduce using rule 72 (asignacion -> ID array asignacionp .)
    DO              reduce using rule 72 (asignacion -> ID array asignacionp .)
    PRINT           reduce using rule 72 (asignacion -> ID array asignacionp .)


state 142

    (74) asignacionp -> AEQL . meteopdores expresionandor cuadass SEMICOLON
    (81) meteopdores -> .

    LPAR            reduce using rule 81 (meteopdores -> .)
    ID              reduce using rule 81 (meteopdores -> .)
    NUMFLOAT        reduce using rule 81 (meteopdores -> .)
    NUMINT          reduce using rule 81 (meteopdores -> .)

    meteopdores                    shift and go to state 155

state 143

    (73) asignacion -> ID meteopandos asignacionp .

    RKEY            reduce using rule 73 (asignacion -> ID meteopandos asignacionp .)
    ID              reduce using rule 73 (asignacion -> ID meteopandos asignacionp .)
    IF              reduce using rule 73 (asignacion -> ID meteopandos asignacionp .)
    WHILE           reduce using rule 73 (asignacion -> ID meteopandos asignacionp .)
    DO              reduce using rule 73 (asignacion -> ID meteopandos asignacionp .)
    PRINT           reduce using rule 73 (asignacion -> ID meteopandos asignacionp .)


state 144

    (90) condif -> IF LPAR expresion . cuadcondif RPAR bloque condifp cuadrellenoif
    (91) cuadcondif -> .

    RPAR            reduce using rule 91 (cuadcondif -> .)

    cuadcondif                     shift and go to state 156

state 145

    (96) condwhile -> WHILE LPAR guardarsal . expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (103) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 157
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 146

    (100) conddowhile -> DO guardardowhile bloque . WHILE LPAR expresion quadconddowhile RPAR SEMICOLON

    WHILE           shift and go to state 158


state 147

    (83) escritura -> PRINT meteopdores LPAR . escriturap
    (84) escriturap -> . expresion cuadescritura escriturapp
    (85) escriturap -> . STRING meteconst cuadescriturastring escriturapp
    (103) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    STRING          shift and go to state 161
    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    escriturap                     shift and go to state 159
    expresion                      shift and go to state 160
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 148

    (48) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR . bloque resetmem SEMICOLON funcionpppp
    (60) bloque -> . LKEY bloquep
    (61) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 76

    bloque                         shift and go to state 162

state 149

    (55) funcionpp -> tipo ID varid . funcionppp
    (56) funcionppp -> . COMMA funcionpp
    (57) funcionppp -> . empty
    (111) empty -> .

    COMMA           shift and go to state 164
    RPAR            reduce using rule 111 (empty -> .)

    funcionppp                     shift and go to state 163
    empty                          shift and go to state 165

state 150

    (49) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque . RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp

    RETURN          shift and go to state 166


state 151

    (105) expresionp -> MORETHAN meteopdores expresion .

    RPAR            reduce using rule 105 (expresionp -> MORETHAN meteopdores expresion .)
    COMMA           reduce using rule 105 (expresionp -> MORETHAN meteopdores expresion .)
    AND             reduce using rule 105 (expresionp -> MORETHAN meteopdores expresion .)
    OR              reduce using rule 105 (expresionp -> MORETHAN meteopdores expresion .)
    SEMICOLON       reduce using rule 105 (expresionp -> MORETHAN meteopdores expresion .)


state 152

    (106) expresionp -> LESSTHAN meteopdores expresion .

    RPAR            reduce using rule 106 (expresionp -> LESSTHAN meteopdores expresion .)
    COMMA           reduce using rule 106 (expresionp -> LESSTHAN meteopdores expresion .)
    AND             reduce using rule 106 (expresionp -> LESSTHAN meteopdores expresion .)
    OR              reduce using rule 106 (expresionp -> LESSTHAN meteopdores expresion .)
    SEMICOLON       reduce using rule 106 (expresionp -> LESSTHAN meteopdores expresion .)


state 153

    (107) expresionp -> EQL meteopdores expresion .

    RPAR            reduce using rule 107 (expresionp -> EQL meteopdores expresion .)
    COMMA           reduce using rule 107 (expresionp -> EQL meteopdores expresion .)
    AND             reduce using rule 107 (expresionp -> EQL meteopdores expresion .)
    OR              reduce using rule 107 (expresionp -> EQL meteopdores expresion .)
    SEMICOLON       reduce using rule 107 (expresionp -> EQL meteopdores expresion .)


state 154

    (108) expresionp -> NOTEQL meteopdores expresion .

    RPAR            reduce using rule 108 (expresionp -> NOTEQL meteopdores expresion .)
    COMMA           reduce using rule 108 (expresionp -> NOTEQL meteopdores expresion .)
    AND             reduce using rule 108 (expresionp -> NOTEQL meteopdores expresion .)
    OR              reduce using rule 108 (expresionp -> NOTEQL meteopdores expresion .)
    SEMICOLON       reduce using rule 108 (expresionp -> NOTEQL meteopdores expresion .)


state 155

    (74) asignacionp -> AEQL meteopdores . expresionandor cuadass SEMICOLON
    (75) expresionandor -> . expresion cuadexpresionandor auxandor
    (103) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 167
    expresion                      shift and go to state 168
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 156

    (90) condif -> IF LPAR expresion cuadcondif . RPAR bloque condifp cuadrellenoif

    RPAR            shift and go to state 169


state 157

    (96) condwhile -> WHILE LPAR guardarsal expresion . quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (98) quadcondwhile -> .

    RPAR            reduce using rule 98 (quadcondwhile -> .)

    quadcondwhile                  shift and go to state 170

state 158

    (100) conddowhile -> DO guardardowhile bloque WHILE . LPAR expresion quadconddowhile RPAR SEMICOLON

    LPAR            shift and go to state 171


state 159

    (83) escritura -> PRINT meteopdores LPAR escriturap .

    RKEY            reduce using rule 83 (escritura -> PRINT meteopdores LPAR escriturap .)
    ID              reduce using rule 83 (escritura -> PRINT meteopdores LPAR escriturap .)
    IF              reduce using rule 83 (escritura -> PRINT meteopdores LPAR escriturap .)
    WHILE           reduce using rule 83 (escritura -> PRINT meteopdores LPAR escriturap .)
    DO              reduce using rule 83 (escritura -> PRINT meteopdores LPAR escriturap .)
    PRINT           reduce using rule 83 (escritura -> PRINT meteopdores LPAR escriturap .)


state 160

    (84) escriturap -> expresion . cuadescritura escriturapp
    (86) cuadescritura -> .

    COMMA           reduce using rule 86 (cuadescritura -> .)
    RPAR            reduce using rule 86 (cuadescritura -> .)

    cuadescritura                  shift and go to state 172

state 161

    (85) escriturap -> STRING . meteconst cuadescriturastring escriturapp
    (40) meteconst -> .

    COMMA           reduce using rule 40 (meteconst -> .)
    RPAR            reduce using rule 40 (meteconst -> .)

    meteconst                      shift and go to state 173

state 162

    (48) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque . resetmem SEMICOLON funcionpppp
    (50) resetmem -> .

    SEMICOLON       reduce using rule 50 (resetmem -> .)

    resetmem                       shift and go to state 174

state 163

    (55) funcionpp -> tipo ID varid funcionppp .

    RPAR            reduce using rule 55 (funcionpp -> tipo ID varid funcionppp .)


state 164

    (56) funcionppp -> COMMA . funcionpp
    (55) funcionpp -> . tipo ID varid funcionppp
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funcionpp                      shift and go to state 175
    tipo                           shift and go to state 104

state 165

    (57) funcionppp -> empty .

    RPAR            reduce using rule 57 (funcionppp -> empty .)


state 166

    (49) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN . LPAR exp RPAR resetmem SEMICOLON funcionpppp

    LPAR            shift and go to state 176


state 167

    (74) asignacionp -> AEQL meteopdores expresionandor . cuadass SEMICOLON
    (80) cuadass -> .

    SEMICOLON       reduce using rule 80 (cuadass -> .)

    cuadass                        shift and go to state 177

state 168

    (75) expresionandor -> expresion . cuadexpresionandor auxandor
    (76) cuadexpresionandor -> .

    AND             reduce using rule 76 (cuadexpresionandor -> .)
    OR              reduce using rule 76 (cuadexpresionandor -> .)
    SEMICOLON       reduce using rule 76 (cuadexpresionandor -> .)

    cuadexpresionandor             shift and go to state 178

state 169

    (90) condif -> IF LPAR expresion cuadcondif RPAR . bloque condifp cuadrellenoif
    (60) bloque -> . LKEY bloquep
    (61) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 76

    bloque                         shift and go to state 179

state 170

    (96) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile . RPAR bloque rellenocondwhile SEMICOLON

    RPAR            shift and go to state 180


state 171

    (100) conddowhile -> DO guardardowhile bloque WHILE LPAR . expresion quadconddowhile RPAR SEMICOLON
    (103) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 181
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 172

    (84) escriturap -> expresion cuadescritura . escriturapp
    (88) escriturapp -> . COMMA escriturap
    (89) escriturapp -> . RPAR SEMICOLON

    COMMA           shift and go to state 183
    RPAR            shift and go to state 184

    escriturapp                    shift and go to state 182

state 173

    (85) escriturap -> STRING meteconst . cuadescriturastring escriturapp
    (87) cuadescriturastring -> .

    COMMA           reduce using rule 87 (cuadescriturastring -> .)
    RPAR            reduce using rule 87 (cuadescriturastring -> .)

    cuadescriturastring            shift and go to state 185

state 174

    (48) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem . SEMICOLON funcionpppp

    SEMICOLON       shift and go to state 186


state 175

    (56) funcionppp -> COMMA funcionpp .

    RPAR            reduce using rule 56 (funcionppp -> COMMA funcionpp .)


state 176

    (49) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR . exp RPAR resetmem SEMICOLON funcionpppp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 187
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 177

    (74) asignacionp -> AEQL meteopdores expresionandor cuadass . SEMICOLON

    SEMICOLON       shift and go to state 188


state 178

    (75) expresionandor -> expresion cuadexpresionandor . auxandor
    (77) auxandor -> . AND meteopdores expresionandor
    (78) auxandor -> . OR meteopdores expresionandor
    (79) auxandor -> . empty
    (111) empty -> .

    AND             shift and go to state 190
    OR              shift and go to state 191
    SEMICOLON       reduce using rule 111 (empty -> .)

    auxandor                       shift and go to state 189
    empty                          shift and go to state 192

state 179

    (90) condif -> IF LPAR expresion cuadcondif RPAR bloque . condifp cuadrellenoif
    (93) condifp -> . ELSE cuadconifelse bloque SEMICOLON
    (94) condifp -> . SEMICOLON

    ELSE            shift and go to state 194
    SEMICOLON       shift and go to state 195

    condifp                        shift and go to state 193

state 180

    (96) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR . bloque rellenocondwhile SEMICOLON
    (60) bloque -> . LKEY bloquep
    (61) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 76

    bloque                         shift and go to state 196

state 181

    (100) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion . quadconddowhile RPAR SEMICOLON
    (102) quadconddowhile -> .

    RPAR            reduce using rule 102 (quadconddowhile -> .)

    quadconddowhile                shift and go to state 197

state 182

    (84) escriturap -> expresion cuadescritura escriturapp .

    RKEY            reduce using rule 84 (escriturap -> expresion cuadescritura escriturapp .)
    ID              reduce using rule 84 (escriturap -> expresion cuadescritura escriturapp .)
    IF              reduce using rule 84 (escriturap -> expresion cuadescritura escriturapp .)
    WHILE           reduce using rule 84 (escriturap -> expresion cuadescritura escriturapp .)
    DO              reduce using rule 84 (escriturap -> expresion cuadescritura escriturapp .)
    PRINT           reduce using rule 84 (escriturap -> expresion cuadescritura escriturapp .)


state 183

    (88) escriturapp -> COMMA . escriturap
    (84) escriturap -> . expresion cuadescritura escriturapp
    (85) escriturap -> . STRING meteconst cuadescriturastring escriturapp
    (103) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    STRING          shift and go to state 161
    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    escriturap                     shift and go to state 198
    expresion                      shift and go to state 160
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 184

    (89) escriturapp -> RPAR . SEMICOLON

    SEMICOLON       shift and go to state 199


state 185

    (85) escriturap -> STRING meteconst cuadescriturastring . escriturapp
    (88) escriturapp -> . COMMA escriturap
    (89) escriturapp -> . RPAR SEMICOLON

    COMMA           shift and go to state 183
    RPAR            shift and go to state 184

    escriturapp                    shift and go to state 200

state 186

    (48) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON . funcionpppp
    (58) funcionpppp -> . funcionf
    (59) funcionpppp -> . empty
    (48) funcionf -> . VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (49) funcionf -> . tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (111) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    VOID            shift and go to state 22
    MAIN            reduce using rule 111 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funcionpppp                    shift and go to state 201
    funcionf                       shift and go to state 202
    empty                          shift and go to state 203
    tipo                           shift and go to state 23

state 187

    (49) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp . RPAR resetmem SEMICOLON funcionpppp

    RPAR            shift and go to state 204


state 188

    (74) asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .

    RKEY            reduce using rule 74 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    ID              reduce using rule 74 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    IF              reduce using rule 74 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    WHILE           reduce using rule 74 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    DO              reduce using rule 74 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    PRINT           reduce using rule 74 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)


state 189

    (75) expresionandor -> expresion cuadexpresionandor auxandor .

    SEMICOLON       reduce using rule 75 (expresionandor -> expresion cuadexpresionandor auxandor .)


state 190

    (77) auxandor -> AND . meteopdores expresionandor
    (81) meteopdores -> .

    LPAR            reduce using rule 81 (meteopdores -> .)
    ID              reduce using rule 81 (meteopdores -> .)
    NUMFLOAT        reduce using rule 81 (meteopdores -> .)
    NUMINT          reduce using rule 81 (meteopdores -> .)

    meteopdores                    shift and go to state 205

state 191

    (78) auxandor -> OR . meteopdores expresionandor
    (81) meteopdores -> .

    LPAR            reduce using rule 81 (meteopdores -> .)
    ID              reduce using rule 81 (meteopdores -> .)
    NUMFLOAT        reduce using rule 81 (meteopdores -> .)
    NUMINT          reduce using rule 81 (meteopdores -> .)

    meteopdores                    shift and go to state 206

state 192

    (79) auxandor -> empty .

    SEMICOLON       reduce using rule 79 (auxandor -> empty .)


state 193

    (90) condif -> IF LPAR expresion cuadcondif RPAR bloque condifp . cuadrellenoif
    (92) cuadrellenoif -> .

    RKEY            reduce using rule 92 (cuadrellenoif -> .)
    ID              reduce using rule 92 (cuadrellenoif -> .)
    IF              reduce using rule 92 (cuadrellenoif -> .)
    WHILE           reduce using rule 92 (cuadrellenoif -> .)
    DO              reduce using rule 92 (cuadrellenoif -> .)
    PRINT           reduce using rule 92 (cuadrellenoif -> .)

    cuadrellenoif                  shift and go to state 207

state 194

    (93) condifp -> ELSE . cuadconifelse bloque SEMICOLON
    (95) cuadconifelse -> .

    LKEY            reduce using rule 95 (cuadconifelse -> .)

    cuadconifelse                  shift and go to state 208

state 195

    (94) condifp -> SEMICOLON .

    RKEY            reduce using rule 94 (condifp -> SEMICOLON .)
    ID              reduce using rule 94 (condifp -> SEMICOLON .)
    IF              reduce using rule 94 (condifp -> SEMICOLON .)
    WHILE           reduce using rule 94 (condifp -> SEMICOLON .)
    DO              reduce using rule 94 (condifp -> SEMICOLON .)
    PRINT           reduce using rule 94 (condifp -> SEMICOLON .)


state 196

    (96) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque . rellenocondwhile SEMICOLON
    (99) rellenocondwhile -> .

    SEMICOLON       reduce using rule 99 (rellenocondwhile -> .)

    rellenocondwhile               shift and go to state 209

state 197

    (100) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile . RPAR SEMICOLON

    RPAR            shift and go to state 210


state 198

    (88) escriturapp -> COMMA escriturap .

    RKEY            reduce using rule 88 (escriturapp -> COMMA escriturap .)
    ID              reduce using rule 88 (escriturapp -> COMMA escriturap .)
    IF              reduce using rule 88 (escriturapp -> COMMA escriturap .)
    WHILE           reduce using rule 88 (escriturapp -> COMMA escriturap .)
    DO              reduce using rule 88 (escriturapp -> COMMA escriturap .)
    PRINT           reduce using rule 88 (escriturapp -> COMMA escriturap .)


state 199

    (89) escriturapp -> RPAR SEMICOLON .

    RKEY            reduce using rule 89 (escriturapp -> RPAR SEMICOLON .)
    ID              reduce using rule 89 (escriturapp -> RPAR SEMICOLON .)
    IF              reduce using rule 89 (escriturapp -> RPAR SEMICOLON .)
    WHILE           reduce using rule 89 (escriturapp -> RPAR SEMICOLON .)
    DO              reduce using rule 89 (escriturapp -> RPAR SEMICOLON .)
    PRINT           reduce using rule 89 (escriturapp -> RPAR SEMICOLON .)


state 200

    (85) escriturap -> STRING meteconst cuadescriturastring escriturapp .

    RKEY            reduce using rule 85 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    ID              reduce using rule 85 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    IF              reduce using rule 85 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    WHILE           reduce using rule 85 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    DO              reduce using rule 85 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    PRINT           reduce using rule 85 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)


state 201

    (48) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp .

    MAIN            reduce using rule 48 (funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp .)


state 202

    (58) funcionpppp -> funcionf .

    MAIN            reduce using rule 58 (funcionpppp -> funcionf .)


state 203

    (59) funcionpppp -> empty .

    MAIN            reduce using rule 59 (funcionpppp -> empty .)


state 204

    (49) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR . resetmem SEMICOLON funcionpppp
    (50) resetmem -> .

    SEMICOLON       reduce using rule 50 (resetmem -> .)

    resetmem                       shift and go to state 211

state 205

    (77) auxandor -> AND meteopdores . expresionandor
    (75) expresionandor -> . expresion cuadexpresionandor auxandor
    (103) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 212
    expresion                      shift and go to state 168
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 206

    (78) auxandor -> OR meteopdores . expresionandor
    (75) expresionandor -> . expresion cuadexpresionandor auxandor
    (103) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR infondo expresion RPAR outfondo
    (33) factor -> . varcte
    (36) varcte -> . ID meteopandos
    (37) varcte -> . NUMFLOAT meteconst
    (38) varcte -> . NUMINT meteconst
    (39) varcte -> . llamafunc
    (41) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 213
    expresion                      shift and go to state 168
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 207

    (90) condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .

    RKEY            reduce using rule 90 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    ID              reduce using rule 90 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    IF              reduce using rule 90 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    WHILE           reduce using rule 90 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    DO              reduce using rule 90 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    PRINT           reduce using rule 90 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)


state 208

    (93) condifp -> ELSE cuadconifelse . bloque SEMICOLON
    (60) bloque -> . LKEY bloquep
    (61) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 76

    bloque                         shift and go to state 214

state 209

    (96) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile . SEMICOLON

    SEMICOLON       shift and go to state 215


state 210

    (100) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR . SEMICOLON

    SEMICOLON       shift and go to state 216


state 211

    (49) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem . SEMICOLON funcionpppp

    SEMICOLON       shift and go to state 217


state 212

    (77) auxandor -> AND meteopdores expresionandor .

    SEMICOLON       reduce using rule 77 (auxandor -> AND meteopdores expresionandor .)


state 213

    (78) auxandor -> OR meteopdores expresionandor .

    SEMICOLON       reduce using rule 78 (auxandor -> OR meteopdores expresionandor .)


state 214

    (93) condifp -> ELSE cuadconifelse bloque . SEMICOLON

    SEMICOLON       shift and go to state 218


state 215

    (96) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .

    RKEY            reduce using rule 96 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    ID              reduce using rule 96 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    IF              reduce using rule 96 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    WHILE           reduce using rule 96 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    DO              reduce using rule 96 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    PRINT           reduce using rule 96 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)


state 216

    (100) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .

    RKEY            reduce using rule 100 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    ID              reduce using rule 100 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    IF              reduce using rule 100 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    WHILE           reduce using rule 100 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    DO              reduce using rule 100 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    PRINT           reduce using rule 100 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)


state 217

    (49) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON . funcionpppp
    (58) funcionpppp -> . funcionf
    (59) funcionpppp -> . empty
    (48) funcionf -> . VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (49) funcionf -> . tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (111) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    VOID            shift and go to state 22
    MAIN            reduce using rule 111 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    tipo                           shift and go to state 23
    funcionpppp                    shift and go to state 219
    funcionf                       shift and go to state 202
    empty                          shift and go to state 203

state 218

    (93) condifp -> ELSE cuadconifelse bloque SEMICOLON .

    RKEY            reduce using rule 93 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    ID              reduce using rule 93 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    IF              reduce using rule 93 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    WHILE           reduce using rule 93 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    DO              reduce using rule 93 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    PRINT           reduce using rule 93 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)


state 219

    (49) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp .

    MAIN            reduce using rule 49 (funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp .)

