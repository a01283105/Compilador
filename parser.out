Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON resetwatcher maines debug salidadoc
Rule 2     salidadoc -> <empty>
Rule 3     debug -> <empty>
Rule 4     resetwatcher -> <empty>
Rule 5     variable -> varf
Rule 6     variable -> empty
Rule 7     funciones -> funcionf
Rule 8     funciones -> empty
Rule 9     maines -> mainf resetmem
Rule 10    maines -> empty
Rule 11    varf -> tipo varp
Rule 12    varp -> ID array varpp
Rule 13    varp -> ID varid varpp
Rule 14    varid -> <empty>
Rule 15    varpp -> varppp
Rule 16    varppp -> COMMA varp
Rule 17    varppp -> SEMICOLON varpppp empty
Rule 18    varpppp -> varf
Rule 19    varpppp -> empty
Rule 20    tipo -> INT funciontipo
Rule 21    tipo -> FLOAT funciontipo
Rule 22    array -> LBRK exp RBRK
Rule 23    exp -> termino cuadexp auxexp
Rule 24    cuadexp -> <empty>
Rule 25    auxexp -> PLUS meteopdores exp
Rule 26    auxexp -> MINUS meteopdores exp
Rule 27    auxexp -> empty
Rule 28    termino -> factor cuadtermino auxtermino
Rule 29    cuadtermino -> <empty>
Rule 30    auxtermino -> MULT meteopdores termino
Rule 31    auxtermino -> SLASH meteopdores termino
Rule 32    auxtermino -> empty
Rule 33    factor -> LPAR infondo expresion RPAR outfondo
Rule 34    factor -> varcte
Rule 35    infondo -> <empty>
Rule 36    outfondo -> <empty>
Rule 37    varcte -> ID meteopandos
Rule 38    varcte -> NUMFLOAT meteconst
Rule 39    varcte -> NUMINT meteconst
Rule 40    varcte -> llamafunc
Rule 41    meteconst -> <empty>
Rule 42    llamafunc -> ID LPAR llamafuncp
Rule 43    llamafuncp -> llamafuncpp
Rule 44    llamafuncp -> llamafuncpppp
Rule 45    llamafuncpp -> tipo ID llamafuncppp
Rule 46    llamafuncppp -> COMMA llamafuncpp
Rule 47    llamafuncppp -> llamafuncpppp
Rule 48    llamafuncpppp -> RPAR
Rule 49    funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
Rule 50    funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
Rule 51    resetmem -> <empty>
Rule 52    funciontipo -> <empty>
Rule 53    funcionid -> <empty>
Rule 54    funcionp -> funcionpp
Rule 55    funcionp -> empty
Rule 56    funcionpp -> tipo ID varid funcionppp
Rule 57    funcionppp -> COMMA funcionpp
Rule 58    funcionppp -> empty
Rule 59    funcionpppp -> funcionf
Rule 60    funcionpppp -> empty
Rule 61    bloque -> LKEY bloquep
Rule 62    bloque -> LKEY bloqueppp
Rule 63    bloquep -> estatuto bloquepp
Rule 64    bloquepp -> bloquep
Rule 65    bloquepp -> bloqueppp
Rule 66    bloqueppp -> RKEY
Rule 67    estatuto -> asignacion
Rule 68    estatuto -> condif
Rule 69    estatuto -> condwhile
Rule 70    estatuto -> conddowhile
Rule 71    estatuto -> escritura
Rule 72    estatuto -> llamafunc SEMICOLON
Rule 73    asignacion -> ID array asignacionp
Rule 74    asignacion -> ID meteopandos asignacionp
Rule 75    asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON
Rule 76    expresionandor -> expresion cuadexpresionandor auxandor
Rule 77    cuadexpresionandor -> <empty>
Rule 78    auxandor -> AND meteopdores expresionandor
Rule 79    auxandor -> OR meteopdores expresionandor
Rule 80    auxandor -> empty
Rule 81    cuadass -> <empty>
Rule 82    meteopdores -> <empty>
Rule 83    meteopandos -> <empty>
Rule 84    escritura -> PRINT meteopdores LPAR escriturap
Rule 85    escriturap -> expresion cuadescritura escriturapp
Rule 86    escriturap -> STRING meteconst cuadescriturastring escriturapp
Rule 87    cuadescritura -> <empty>
Rule 88    cuadescriturastring -> <empty>
Rule 89    escriturapp -> COMMA escriturap
Rule 90    escriturapp -> RPAR SEMICOLON
Rule 91    condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif
Rule 92    cuadcondif -> <empty>
Rule 93    cuadrellenoif -> <empty>
Rule 94    condifp -> ELSE cuadconifelse bloque SEMICOLON
Rule 95    condifp -> SEMICOLON
Rule 96    cuadconifelse -> <empty>
Rule 97    condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
Rule 98    guardarsal -> <empty>
Rule 99    quadcondwhile -> <empty>
Rule 100   rellenocondwhile -> <empty>
Rule 101   conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
Rule 102   guardardowhile -> <empty>
Rule 103   quadconddowhile -> <empty>
Rule 104   expresion -> exp cuadexpresion expresionp
Rule 105   cuadexpresion -> <empty>
Rule 106   expresionp -> MORETHAN meteopdores expresion
Rule 107   expresionp -> LESSTHAN meteopdores expresion
Rule 108   expresionp -> EQL meteopdores expresion
Rule 109   expresionp -> NOTEQL meteopdores expresion
Rule 110   expresionp -> empty
Rule 111   mainf -> bloque SEMICOLON
Rule 112   empty -> <empty>

Terminals, with rules where they appear

AEQL                 : 75
AND                  : 78
COMMA                : 16 46 57 89
DO                   : 101
ELSE                 : 94
EQL                  : 108
FLOAT                : 21
FUNC                 : 1
ID                   : 12 13 37 42 45 49 50 56 73 74
IF                   : 91
INT                  : 20
LBRK                 : 22
LESSTHAN             : 107
LKEY                 : 61 62
LPAR                 : 33 42 49 50 50 84 91 97 101
MAIN                 : 1
MINUS                : 26
MORETHAN             : 106
MULT                 : 30
NOTEQL               : 109
NUMFLOAT             : 38
NUMINT               : 39
OR                   : 79
PLUS                 : 25
PRINT                : 84
RBRK                 : 22
RETURN               : 50
RKEY                 : 66
RPAR                 : 33 48 49 50 50 90 91 97 101
SEMICOLON            : 1 1 1 17 49 50 72 75 90 94 95 97 101 111
SLASH                : 31
STRING               : 86
VAR                  : 1
VOID                 : 49
WHILE                : 97 101
error                : 

Nonterminals, with rules where they appear

array                : 12 73
asignacion           : 67
asignacionp          : 73 74
auxandor             : 76
auxexp               : 23
auxtermino           : 28
bloque               : 49 50 91 94 97 101 111
bloquep              : 61 64
bloquepp             : 63
bloqueppp            : 62 65
conddowhile          : 70
condif               : 68
condifp              : 91
condwhile            : 69
cuadass              : 75
cuadcondif           : 91
cuadconifelse        : 94
cuadescritura        : 85
cuadescriturastring  : 86
cuadexp              : 23
cuadexpresion        : 104
cuadexpresionandor   : 76
cuadrellenoif        : 91
cuadtermino          : 28
debug                : 1
empty                : 6 8 10 17 19 27 32 55 58 60 80 110
escritura            : 71
escriturap           : 84 89
escriturapp          : 85 86
estatuto             : 63
exp                  : 22 25 26 50 104
expresion            : 33 76 85 91 97 101 106 107 108 109
expresionandor       : 75 78 79
expresionp           : 104
factor               : 28
funciones            : 1
funcionf             : 7 59
funcionid            : 49 50
funcionp             : 49 50
funcionpp            : 54 57
funcionppp           : 56
funcionpppp          : 49 50
funciontipo          : 20 21 49
guardardowhile       : 101
guardarsal           : 97
infondo              : 33
llamafunc            : 40 72
llamafuncp           : 42
llamafuncpp          : 43 46
llamafuncppp         : 45
llamafuncpppp        : 44 47
maines               : 1
mainf                : 9
meteconst            : 38 39 86
meteopandos          : 37 74
meteopdores          : 25 26 30 31 75 78 79 84 106 107 108 109
outfondo             : 33
programa             : 0
quadconddowhile      : 101
quadcondwhile        : 97
rellenocondwhile     : 97
resetmem             : 9 49 50
resetwatcher         : 1
salidadoc            : 1
termino              : 23 30 31
tipo                 : 11 45 50 56
varcte               : 34
varf                 : 5 18
variable             : 1
varid                : 13 56
varp                 : 11 16
varpp                : 12 13
varppp               : 15
varpppp              : 17

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON resetwatcher maines debug salidadoc

    VAR             shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> VAR . SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON resetwatcher maines debug salidadoc

    SEMICOLON       shift and go to state 3


state 3

    (1) programa -> VAR SEMICOLON . variable FUNC SEMICOLON funciones MAIN SEMICOLON resetwatcher maines debug salidadoc
    (5) variable -> . varf
    (6) variable -> . empty
    (11) varf -> . tipo varp
    (112) empty -> .
    (20) tipo -> . INT funciontipo
    (21) tipo -> . FLOAT funciontipo

    FUNC            reduce using rule 112 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    variable                       shift and go to state 4
    varf                           shift and go to state 5
    empty                          shift and go to state 6
    tipo                           shift and go to state 7

state 4

    (1) programa -> VAR SEMICOLON variable . FUNC SEMICOLON funciones MAIN SEMICOLON resetwatcher maines debug salidadoc

    FUNC            shift and go to state 10


state 5

    (5) variable -> varf .

    FUNC            reduce using rule 5 (variable -> varf .)


state 6

    (6) variable -> empty .

    FUNC            reduce using rule 6 (variable -> empty .)


state 7

    (11) varf -> tipo . varp
    (12) varp -> . ID array varpp
    (13) varp -> . ID varid varpp

    ID              shift and go to state 12

    varp                           shift and go to state 11

state 8

    (20) tipo -> INT . funciontipo
    (52) funciontipo -> .

    ID              reduce using rule 52 (funciontipo -> .)

    funciontipo                    shift and go to state 13

state 9

    (21) tipo -> FLOAT . funciontipo
    (52) funciontipo -> .

    ID              reduce using rule 52 (funciontipo -> .)

    funciontipo                    shift and go to state 14

state 10

    (1) programa -> VAR SEMICOLON variable FUNC . SEMICOLON funciones MAIN SEMICOLON resetwatcher maines debug salidadoc

    SEMICOLON       shift and go to state 15


state 11

    (11) varf -> tipo varp .

    FUNC            reduce using rule 11 (varf -> tipo varp .)


state 12

    (12) varp -> ID . array varpp
    (13) varp -> ID . varid varpp
    (22) array -> . LBRK exp RBRK
    (14) varid -> .

    LBRK            shift and go to state 18
    COMMA           reduce using rule 14 (varid -> .)
    SEMICOLON       reduce using rule 14 (varid -> .)

    array                          shift and go to state 16
    varid                          shift and go to state 17

state 13

    (20) tipo -> INT funciontipo .

    ID              reduce using rule 20 (tipo -> INT funciontipo .)


state 14

    (21) tipo -> FLOAT funciontipo .

    ID              reduce using rule 21 (tipo -> FLOAT funciontipo .)


state 15

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON . funciones MAIN SEMICOLON resetwatcher maines debug salidadoc
    (7) funciones -> . funcionf
    (8) funciones -> . empty
    (49) funcionf -> . VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (50) funcionf -> . tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (112) empty -> .
    (20) tipo -> . INT funciontipo
    (21) tipo -> . FLOAT funciontipo

    VOID            shift and go to state 22
    MAIN            reduce using rule 112 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funciones                      shift and go to state 19
    funcionf                       shift and go to state 20
    empty                          shift and go to state 21
    tipo                           shift and go to state 23

state 16

    (12) varp -> ID array . varpp
    (15) varpp -> . varppp
    (16) varppp -> . COMMA varp
    (17) varppp -> . SEMICOLON varpppp empty

    COMMA           shift and go to state 26
    SEMICOLON       shift and go to state 27

    varpp                          shift and go to state 24
    varppp                         shift and go to state 25

state 17

    (13) varp -> ID varid . varpp
    (15) varpp -> . varppp
    (16) varppp -> . COMMA varp
    (17) varppp -> . SEMICOLON varpppp empty

    COMMA           shift and go to state 26
    SEMICOLON       shift and go to state 27

    varpp                          shift and go to state 28
    varppp                         shift and go to state 25

state 18

    (22) array -> LBRK . exp RBRK
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 29
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 19

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones . MAIN SEMICOLON resetwatcher maines debug salidadoc

    MAIN            shift and go to state 38


state 20

    (7) funciones -> funcionf .

    MAIN            reduce using rule 7 (funciones -> funcionf .)


state 21

    (8) funciones -> empty .

    MAIN            reduce using rule 8 (funciones -> empty .)


state 22

    (49) funcionf -> VOID . funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (52) funciontipo -> .

    ID              reduce using rule 52 (funciontipo -> .)

    funciontipo                    shift and go to state 39

state 23

    (50) funcionf -> tipo . ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp

    ID              shift and go to state 40


state 24

    (12) varp -> ID array varpp .

    FUNC            reduce using rule 12 (varp -> ID array varpp .)


state 25

    (15) varpp -> varppp .

    FUNC            reduce using rule 15 (varpp -> varppp .)


state 26

    (16) varppp -> COMMA . varp
    (12) varp -> . ID array varpp
    (13) varp -> . ID varid varpp

    ID              shift and go to state 12

    varp                           shift and go to state 41

state 27

    (17) varppp -> SEMICOLON . varpppp empty
    (18) varpppp -> . varf
    (19) varpppp -> . empty
    (11) varf -> . tipo varp
    (112) empty -> .
    (20) tipo -> . INT funciontipo
    (21) tipo -> . FLOAT funciontipo

    FUNC            reduce using rule 112 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    varpppp                        shift and go to state 42
    empty                          shift and go to state 43
    varf                           shift and go to state 44
    tipo                           shift and go to state 7

state 28

    (13) varp -> ID varid varpp .

    FUNC            reduce using rule 13 (varp -> ID varid varpp .)


state 29

    (22) array -> LBRK exp . RBRK

    RBRK            shift and go to state 45


state 30

    (23) exp -> termino . cuadexp auxexp
    (24) cuadexp -> .

    PLUS            reduce using rule 24 (cuadexp -> .)
    MINUS           reduce using rule 24 (cuadexp -> .)
    RBRK            reduce using rule 24 (cuadexp -> .)
    MORETHAN        reduce using rule 24 (cuadexp -> .)
    LESSTHAN        reduce using rule 24 (cuadexp -> .)
    EQL             reduce using rule 24 (cuadexp -> .)
    NOTEQL          reduce using rule 24 (cuadexp -> .)
    RPAR            reduce using rule 24 (cuadexp -> .)
    COMMA           reduce using rule 24 (cuadexp -> .)
    AND             reduce using rule 24 (cuadexp -> .)
    OR              reduce using rule 24 (cuadexp -> .)
    SEMICOLON       reduce using rule 24 (cuadexp -> .)

    cuadexp                        shift and go to state 46

state 31

    (28) termino -> factor . cuadtermino auxtermino
    (29) cuadtermino -> .

    MULT            reduce using rule 29 (cuadtermino -> .)
    SLASH           reduce using rule 29 (cuadtermino -> .)
    PLUS            reduce using rule 29 (cuadtermino -> .)
    MINUS           reduce using rule 29 (cuadtermino -> .)
    RBRK            reduce using rule 29 (cuadtermino -> .)
    MORETHAN        reduce using rule 29 (cuadtermino -> .)
    LESSTHAN        reduce using rule 29 (cuadtermino -> .)
    EQL             reduce using rule 29 (cuadtermino -> .)
    NOTEQL          reduce using rule 29 (cuadtermino -> .)
    RPAR            reduce using rule 29 (cuadtermino -> .)
    COMMA           reduce using rule 29 (cuadtermino -> .)
    AND             reduce using rule 29 (cuadtermino -> .)
    OR              reduce using rule 29 (cuadtermino -> .)
    SEMICOLON       reduce using rule 29 (cuadtermino -> .)

    cuadtermino                    shift and go to state 47

state 32

    (33) factor -> LPAR . infondo expresion RPAR outfondo
    (35) infondo -> .

    LPAR            reduce using rule 35 (infondo -> .)
    ID              reduce using rule 35 (infondo -> .)
    NUMFLOAT        reduce using rule 35 (infondo -> .)
    NUMINT          reduce using rule 35 (infondo -> .)

    infondo                        shift and go to state 48

state 33

    (34) factor -> varcte .

    MULT            reduce using rule 34 (factor -> varcte .)
    SLASH           reduce using rule 34 (factor -> varcte .)
    PLUS            reduce using rule 34 (factor -> varcte .)
    MINUS           reduce using rule 34 (factor -> varcte .)
    RBRK            reduce using rule 34 (factor -> varcte .)
    MORETHAN        reduce using rule 34 (factor -> varcte .)
    LESSTHAN        reduce using rule 34 (factor -> varcte .)
    EQL             reduce using rule 34 (factor -> varcte .)
    NOTEQL          reduce using rule 34 (factor -> varcte .)
    RPAR            reduce using rule 34 (factor -> varcte .)
    COMMA           reduce using rule 34 (factor -> varcte .)
    AND             reduce using rule 34 (factor -> varcte .)
    OR              reduce using rule 34 (factor -> varcte .)
    SEMICOLON       reduce using rule 34 (factor -> varcte .)


state 34

    (37) varcte -> ID . meteopandos
    (42) llamafunc -> ID . LPAR llamafuncp
    (83) meteopandos -> .

    LPAR            shift and go to state 50
    MULT            reduce using rule 83 (meteopandos -> .)
    SLASH           reduce using rule 83 (meteopandos -> .)
    PLUS            reduce using rule 83 (meteopandos -> .)
    MINUS           reduce using rule 83 (meteopandos -> .)
    RBRK            reduce using rule 83 (meteopandos -> .)
    MORETHAN        reduce using rule 83 (meteopandos -> .)
    LESSTHAN        reduce using rule 83 (meteopandos -> .)
    EQL             reduce using rule 83 (meteopandos -> .)
    NOTEQL          reduce using rule 83 (meteopandos -> .)
    RPAR            reduce using rule 83 (meteopandos -> .)
    COMMA           reduce using rule 83 (meteopandos -> .)
    AND             reduce using rule 83 (meteopandos -> .)
    OR              reduce using rule 83 (meteopandos -> .)
    SEMICOLON       reduce using rule 83 (meteopandos -> .)

    meteopandos                    shift and go to state 49

state 35

    (38) varcte -> NUMFLOAT . meteconst
    (41) meteconst -> .

    MULT            reduce using rule 41 (meteconst -> .)
    SLASH           reduce using rule 41 (meteconst -> .)
    PLUS            reduce using rule 41 (meteconst -> .)
    MINUS           reduce using rule 41 (meteconst -> .)
    RBRK            reduce using rule 41 (meteconst -> .)
    MORETHAN        reduce using rule 41 (meteconst -> .)
    LESSTHAN        reduce using rule 41 (meteconst -> .)
    EQL             reduce using rule 41 (meteconst -> .)
    NOTEQL          reduce using rule 41 (meteconst -> .)
    RPAR            reduce using rule 41 (meteconst -> .)
    COMMA           reduce using rule 41 (meteconst -> .)
    AND             reduce using rule 41 (meteconst -> .)
    OR              reduce using rule 41 (meteconst -> .)
    SEMICOLON       reduce using rule 41 (meteconst -> .)

    meteconst                      shift and go to state 51

state 36

    (39) varcte -> NUMINT . meteconst
    (41) meteconst -> .

    MULT            reduce using rule 41 (meteconst -> .)
    SLASH           reduce using rule 41 (meteconst -> .)
    PLUS            reduce using rule 41 (meteconst -> .)
    MINUS           reduce using rule 41 (meteconst -> .)
    RBRK            reduce using rule 41 (meteconst -> .)
    MORETHAN        reduce using rule 41 (meteconst -> .)
    LESSTHAN        reduce using rule 41 (meteconst -> .)
    EQL             reduce using rule 41 (meteconst -> .)
    NOTEQL          reduce using rule 41 (meteconst -> .)
    RPAR            reduce using rule 41 (meteconst -> .)
    COMMA           reduce using rule 41 (meteconst -> .)
    AND             reduce using rule 41 (meteconst -> .)
    OR              reduce using rule 41 (meteconst -> .)
    SEMICOLON       reduce using rule 41 (meteconst -> .)

    meteconst                      shift and go to state 52

state 37

    (40) varcte -> llamafunc .

    MULT            reduce using rule 40 (varcte -> llamafunc .)
    SLASH           reduce using rule 40 (varcte -> llamafunc .)
    PLUS            reduce using rule 40 (varcte -> llamafunc .)
    MINUS           reduce using rule 40 (varcte -> llamafunc .)
    RBRK            reduce using rule 40 (varcte -> llamafunc .)
    MORETHAN        reduce using rule 40 (varcte -> llamafunc .)
    LESSTHAN        reduce using rule 40 (varcte -> llamafunc .)
    EQL             reduce using rule 40 (varcte -> llamafunc .)
    NOTEQL          reduce using rule 40 (varcte -> llamafunc .)
    RPAR            reduce using rule 40 (varcte -> llamafunc .)
    COMMA           reduce using rule 40 (varcte -> llamafunc .)
    AND             reduce using rule 40 (varcte -> llamafunc .)
    OR              reduce using rule 40 (varcte -> llamafunc .)
    SEMICOLON       reduce using rule 40 (varcte -> llamafunc .)


state 38

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN . SEMICOLON resetwatcher maines debug salidadoc

    SEMICOLON       shift and go to state 53


state 39

    (49) funcionf -> VOID funciontipo . ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp

    ID              shift and go to state 54


state 40

    (50) funcionf -> tipo ID . funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (53) funcionid -> .

    LPAR            reduce using rule 53 (funcionid -> .)

    funcionid                      shift and go to state 55

state 41

    (16) varppp -> COMMA varp .

    FUNC            reduce using rule 16 (varppp -> COMMA varp .)


state 42

    (17) varppp -> SEMICOLON varpppp . empty
    (112) empty -> .

    FUNC            reduce using rule 112 (empty -> .)

    empty                          shift and go to state 56

state 43

    (19) varpppp -> empty .

    FUNC            reduce using rule 19 (varpppp -> empty .)


state 44

    (18) varpppp -> varf .

    FUNC            reduce using rule 18 (varpppp -> varf .)


state 45

    (22) array -> LBRK exp RBRK .

    COMMA           reduce using rule 22 (array -> LBRK exp RBRK .)
    SEMICOLON       reduce using rule 22 (array -> LBRK exp RBRK .)
    AEQL            reduce using rule 22 (array -> LBRK exp RBRK .)


state 46

    (23) exp -> termino cuadexp . auxexp
    (25) auxexp -> . PLUS meteopdores exp
    (26) auxexp -> . MINUS meteopdores exp
    (27) auxexp -> . empty
    (112) empty -> .

    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    RBRK            reduce using rule 112 (empty -> .)
    MORETHAN        reduce using rule 112 (empty -> .)
    LESSTHAN        reduce using rule 112 (empty -> .)
    EQL             reduce using rule 112 (empty -> .)
    NOTEQL          reduce using rule 112 (empty -> .)
    RPAR            reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)

    auxexp                         shift and go to state 57
    empty                          shift and go to state 60

state 47

    (28) termino -> factor cuadtermino . auxtermino
    (30) auxtermino -> . MULT meteopdores termino
    (31) auxtermino -> . SLASH meteopdores termino
    (32) auxtermino -> . empty
    (112) empty -> .

    MULT            shift and go to state 62
    SLASH           shift and go to state 63
    PLUS            reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    RBRK            reduce using rule 112 (empty -> .)
    MORETHAN        reduce using rule 112 (empty -> .)
    LESSTHAN        reduce using rule 112 (empty -> .)
    EQL             reduce using rule 112 (empty -> .)
    NOTEQL          reduce using rule 112 (empty -> .)
    RPAR            reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)

    auxtermino                     shift and go to state 61
    empty                          shift and go to state 64

state 48

    (33) factor -> LPAR infondo . expresion RPAR outfondo
    (104) expresion -> . exp cuadexpresion expresionp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 65
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 49

    (37) varcte -> ID meteopandos .

    MULT            reduce using rule 37 (varcte -> ID meteopandos .)
    SLASH           reduce using rule 37 (varcte -> ID meteopandos .)
    PLUS            reduce using rule 37 (varcte -> ID meteopandos .)
    MINUS           reduce using rule 37 (varcte -> ID meteopandos .)
    RBRK            reduce using rule 37 (varcte -> ID meteopandos .)
    MORETHAN        reduce using rule 37 (varcte -> ID meteopandos .)
    LESSTHAN        reduce using rule 37 (varcte -> ID meteopandos .)
    EQL             reduce using rule 37 (varcte -> ID meteopandos .)
    NOTEQL          reduce using rule 37 (varcte -> ID meteopandos .)
    RPAR            reduce using rule 37 (varcte -> ID meteopandos .)
    COMMA           reduce using rule 37 (varcte -> ID meteopandos .)
    AND             reduce using rule 37 (varcte -> ID meteopandos .)
    OR              reduce using rule 37 (varcte -> ID meteopandos .)
    SEMICOLON       reduce using rule 37 (varcte -> ID meteopandos .)


state 50

    (42) llamafunc -> ID LPAR . llamafuncp
    (43) llamafuncp -> . llamafuncpp
    (44) llamafuncp -> . llamafuncpppp
    (45) llamafuncpp -> . tipo ID llamafuncppp
    (48) llamafuncpppp -> . RPAR
    (20) tipo -> . INT funciontipo
    (21) tipo -> . FLOAT funciontipo

    RPAR            shift and go to state 71
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    llamafuncp                     shift and go to state 67
    llamafuncpp                    shift and go to state 68
    llamafuncpppp                  shift and go to state 69
    tipo                           shift and go to state 70

state 51

    (38) varcte -> NUMFLOAT meteconst .

    MULT            reduce using rule 38 (varcte -> NUMFLOAT meteconst .)
    SLASH           reduce using rule 38 (varcte -> NUMFLOAT meteconst .)
    PLUS            reduce using rule 38 (varcte -> NUMFLOAT meteconst .)
    MINUS           reduce using rule 38 (varcte -> NUMFLOAT meteconst .)
    RBRK            reduce using rule 38 (varcte -> NUMFLOAT meteconst .)
    MORETHAN        reduce using rule 38 (varcte -> NUMFLOAT meteconst .)
    LESSTHAN        reduce using rule 38 (varcte -> NUMFLOAT meteconst .)
    EQL             reduce using rule 38 (varcte -> NUMFLOAT meteconst .)
    NOTEQL          reduce using rule 38 (varcte -> NUMFLOAT meteconst .)
    RPAR            reduce using rule 38 (varcte -> NUMFLOAT meteconst .)
    COMMA           reduce using rule 38 (varcte -> NUMFLOAT meteconst .)
    AND             reduce using rule 38 (varcte -> NUMFLOAT meteconst .)
    OR              reduce using rule 38 (varcte -> NUMFLOAT meteconst .)
    SEMICOLON       reduce using rule 38 (varcte -> NUMFLOAT meteconst .)


state 52

    (39) varcte -> NUMINT meteconst .

    MULT            reduce using rule 39 (varcte -> NUMINT meteconst .)
    SLASH           reduce using rule 39 (varcte -> NUMINT meteconst .)
    PLUS            reduce using rule 39 (varcte -> NUMINT meteconst .)
    MINUS           reduce using rule 39 (varcte -> NUMINT meteconst .)
    RBRK            reduce using rule 39 (varcte -> NUMINT meteconst .)
    MORETHAN        reduce using rule 39 (varcte -> NUMINT meteconst .)
    LESSTHAN        reduce using rule 39 (varcte -> NUMINT meteconst .)
    EQL             reduce using rule 39 (varcte -> NUMINT meteconst .)
    NOTEQL          reduce using rule 39 (varcte -> NUMINT meteconst .)
    RPAR            reduce using rule 39 (varcte -> NUMINT meteconst .)
    COMMA           reduce using rule 39 (varcte -> NUMINT meteconst .)
    AND             reduce using rule 39 (varcte -> NUMINT meteconst .)
    OR              reduce using rule 39 (varcte -> NUMINT meteconst .)
    SEMICOLON       reduce using rule 39 (varcte -> NUMINT meteconst .)


state 53

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON . resetwatcher maines debug salidadoc
    (4) resetwatcher -> .

    LKEY            reduce using rule 4 (resetwatcher -> .)
    $end            reduce using rule 4 (resetwatcher -> .)

    resetwatcher                   shift and go to state 72

state 54

    (49) funcionf -> VOID funciontipo ID . funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (53) funcionid -> .

    LPAR            reduce using rule 53 (funcionid -> .)

    funcionid                      shift and go to state 73

state 55

    (50) funcionf -> tipo ID funcionid . LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp

    LPAR            shift and go to state 74


state 56

    (17) varppp -> SEMICOLON varpppp empty .

    FUNC            reduce using rule 17 (varppp -> SEMICOLON varpppp empty .)


state 57

    (23) exp -> termino cuadexp auxexp .

    RBRK            reduce using rule 23 (exp -> termino cuadexp auxexp .)
    MORETHAN        reduce using rule 23 (exp -> termino cuadexp auxexp .)
    LESSTHAN        reduce using rule 23 (exp -> termino cuadexp auxexp .)
    EQL             reduce using rule 23 (exp -> termino cuadexp auxexp .)
    NOTEQL          reduce using rule 23 (exp -> termino cuadexp auxexp .)
    RPAR            reduce using rule 23 (exp -> termino cuadexp auxexp .)
    COMMA           reduce using rule 23 (exp -> termino cuadexp auxexp .)
    AND             reduce using rule 23 (exp -> termino cuadexp auxexp .)
    OR              reduce using rule 23 (exp -> termino cuadexp auxexp .)
    SEMICOLON       reduce using rule 23 (exp -> termino cuadexp auxexp .)


state 58

    (25) auxexp -> PLUS . meteopdores exp
    (82) meteopdores -> .

    LPAR            reduce using rule 82 (meteopdores -> .)
    ID              reduce using rule 82 (meteopdores -> .)
    NUMFLOAT        reduce using rule 82 (meteopdores -> .)
    NUMINT          reduce using rule 82 (meteopdores -> .)

    meteopdores                    shift and go to state 75

state 59

    (26) auxexp -> MINUS . meteopdores exp
    (82) meteopdores -> .

    LPAR            reduce using rule 82 (meteopdores -> .)
    ID              reduce using rule 82 (meteopdores -> .)
    NUMFLOAT        reduce using rule 82 (meteopdores -> .)
    NUMINT          reduce using rule 82 (meteopdores -> .)

    meteopdores                    shift and go to state 76

state 60

    (27) auxexp -> empty .

    RBRK            reduce using rule 27 (auxexp -> empty .)
    MORETHAN        reduce using rule 27 (auxexp -> empty .)
    LESSTHAN        reduce using rule 27 (auxexp -> empty .)
    EQL             reduce using rule 27 (auxexp -> empty .)
    NOTEQL          reduce using rule 27 (auxexp -> empty .)
    RPAR            reduce using rule 27 (auxexp -> empty .)
    COMMA           reduce using rule 27 (auxexp -> empty .)
    AND             reduce using rule 27 (auxexp -> empty .)
    OR              reduce using rule 27 (auxexp -> empty .)
    SEMICOLON       reduce using rule 27 (auxexp -> empty .)


state 61

    (28) termino -> factor cuadtermino auxtermino .

    PLUS            reduce using rule 28 (termino -> factor cuadtermino auxtermino .)
    MINUS           reduce using rule 28 (termino -> factor cuadtermino auxtermino .)
    RBRK            reduce using rule 28 (termino -> factor cuadtermino auxtermino .)
    MORETHAN        reduce using rule 28 (termino -> factor cuadtermino auxtermino .)
    LESSTHAN        reduce using rule 28 (termino -> factor cuadtermino auxtermino .)
    EQL             reduce using rule 28 (termino -> factor cuadtermino auxtermino .)
    NOTEQL          reduce using rule 28 (termino -> factor cuadtermino auxtermino .)
    RPAR            reduce using rule 28 (termino -> factor cuadtermino auxtermino .)
    COMMA           reduce using rule 28 (termino -> factor cuadtermino auxtermino .)
    AND             reduce using rule 28 (termino -> factor cuadtermino auxtermino .)
    OR              reduce using rule 28 (termino -> factor cuadtermino auxtermino .)
    SEMICOLON       reduce using rule 28 (termino -> factor cuadtermino auxtermino .)


state 62

    (30) auxtermino -> MULT . meteopdores termino
    (82) meteopdores -> .

    LPAR            reduce using rule 82 (meteopdores -> .)
    ID              reduce using rule 82 (meteopdores -> .)
    NUMFLOAT        reduce using rule 82 (meteopdores -> .)
    NUMINT          reduce using rule 82 (meteopdores -> .)

    meteopdores                    shift and go to state 77

state 63

    (31) auxtermino -> SLASH . meteopdores termino
    (82) meteopdores -> .

    LPAR            reduce using rule 82 (meteopdores -> .)
    ID              reduce using rule 82 (meteopdores -> .)
    NUMFLOAT        reduce using rule 82 (meteopdores -> .)
    NUMINT          reduce using rule 82 (meteopdores -> .)

    meteopdores                    shift and go to state 78

state 64

    (32) auxtermino -> empty .

    PLUS            reduce using rule 32 (auxtermino -> empty .)
    MINUS           reduce using rule 32 (auxtermino -> empty .)
    RBRK            reduce using rule 32 (auxtermino -> empty .)
    MORETHAN        reduce using rule 32 (auxtermino -> empty .)
    LESSTHAN        reduce using rule 32 (auxtermino -> empty .)
    EQL             reduce using rule 32 (auxtermino -> empty .)
    NOTEQL          reduce using rule 32 (auxtermino -> empty .)
    RPAR            reduce using rule 32 (auxtermino -> empty .)
    COMMA           reduce using rule 32 (auxtermino -> empty .)
    AND             reduce using rule 32 (auxtermino -> empty .)
    OR              reduce using rule 32 (auxtermino -> empty .)
    SEMICOLON       reduce using rule 32 (auxtermino -> empty .)


state 65

    (33) factor -> LPAR infondo expresion . RPAR outfondo

    RPAR            shift and go to state 79


state 66

    (104) expresion -> exp . cuadexpresion expresionp
    (105) cuadexpresion -> .

    MORETHAN        reduce using rule 105 (cuadexpresion -> .)
    LESSTHAN        reduce using rule 105 (cuadexpresion -> .)
    EQL             reduce using rule 105 (cuadexpresion -> .)
    NOTEQL          reduce using rule 105 (cuadexpresion -> .)
    RPAR            reduce using rule 105 (cuadexpresion -> .)
    COMMA           reduce using rule 105 (cuadexpresion -> .)
    AND             reduce using rule 105 (cuadexpresion -> .)
    OR              reduce using rule 105 (cuadexpresion -> .)
    SEMICOLON       reduce using rule 105 (cuadexpresion -> .)

    cuadexpresion                  shift and go to state 80

state 67

    (42) llamafunc -> ID LPAR llamafuncp .

    MULT            reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)
    SLASH           reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)
    PLUS            reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)
    MINUS           reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)
    RBRK            reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)
    MORETHAN        reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)
    LESSTHAN        reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)
    EQL             reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)
    NOTEQL          reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)
    RPAR            reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)
    COMMA           reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)
    AND             reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)
    OR              reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)
    SEMICOLON       reduce using rule 42 (llamafunc -> ID LPAR llamafuncp .)


state 68

    (43) llamafuncp -> llamafuncpp .

    MULT            reduce using rule 43 (llamafuncp -> llamafuncpp .)
    SLASH           reduce using rule 43 (llamafuncp -> llamafuncpp .)
    PLUS            reduce using rule 43 (llamafuncp -> llamafuncpp .)
    MINUS           reduce using rule 43 (llamafuncp -> llamafuncpp .)
    RBRK            reduce using rule 43 (llamafuncp -> llamafuncpp .)
    MORETHAN        reduce using rule 43 (llamafuncp -> llamafuncpp .)
    LESSTHAN        reduce using rule 43 (llamafuncp -> llamafuncpp .)
    EQL             reduce using rule 43 (llamafuncp -> llamafuncpp .)
    NOTEQL          reduce using rule 43 (llamafuncp -> llamafuncpp .)
    RPAR            reduce using rule 43 (llamafuncp -> llamafuncpp .)
    COMMA           reduce using rule 43 (llamafuncp -> llamafuncpp .)
    AND             reduce using rule 43 (llamafuncp -> llamafuncpp .)
    OR              reduce using rule 43 (llamafuncp -> llamafuncpp .)
    SEMICOLON       reduce using rule 43 (llamafuncp -> llamafuncpp .)


state 69

    (44) llamafuncp -> llamafuncpppp .

    MULT            reduce using rule 44 (llamafuncp -> llamafuncpppp .)
    SLASH           reduce using rule 44 (llamafuncp -> llamafuncpppp .)
    PLUS            reduce using rule 44 (llamafuncp -> llamafuncpppp .)
    MINUS           reduce using rule 44 (llamafuncp -> llamafuncpppp .)
    RBRK            reduce using rule 44 (llamafuncp -> llamafuncpppp .)
    MORETHAN        reduce using rule 44 (llamafuncp -> llamafuncpppp .)
    LESSTHAN        reduce using rule 44 (llamafuncp -> llamafuncpppp .)
    EQL             reduce using rule 44 (llamafuncp -> llamafuncpppp .)
    NOTEQL          reduce using rule 44 (llamafuncp -> llamafuncpppp .)
    RPAR            reduce using rule 44 (llamafuncp -> llamafuncpppp .)
    COMMA           reduce using rule 44 (llamafuncp -> llamafuncpppp .)
    AND             reduce using rule 44 (llamafuncp -> llamafuncpppp .)
    OR              reduce using rule 44 (llamafuncp -> llamafuncpppp .)
    SEMICOLON       reduce using rule 44 (llamafuncp -> llamafuncpppp .)


state 70

    (45) llamafuncpp -> tipo . ID llamafuncppp

    ID              shift and go to state 81


state 71

    (48) llamafuncpppp -> RPAR .

    MULT            reduce using rule 48 (llamafuncpppp -> RPAR .)
    SLASH           reduce using rule 48 (llamafuncpppp -> RPAR .)
    PLUS            reduce using rule 48 (llamafuncpppp -> RPAR .)
    MINUS           reduce using rule 48 (llamafuncpppp -> RPAR .)
    RBRK            reduce using rule 48 (llamafuncpppp -> RPAR .)
    MORETHAN        reduce using rule 48 (llamafuncpppp -> RPAR .)
    LESSTHAN        reduce using rule 48 (llamafuncpppp -> RPAR .)
    EQL             reduce using rule 48 (llamafuncpppp -> RPAR .)
    NOTEQL          reduce using rule 48 (llamafuncpppp -> RPAR .)
    RPAR            reduce using rule 48 (llamafuncpppp -> RPAR .)
    COMMA           reduce using rule 48 (llamafuncpppp -> RPAR .)
    AND             reduce using rule 48 (llamafuncpppp -> RPAR .)
    OR              reduce using rule 48 (llamafuncpppp -> RPAR .)
    SEMICOLON       reduce using rule 48 (llamafuncpppp -> RPAR .)


state 72

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON resetwatcher . maines debug salidadoc
    (9) maines -> . mainf resetmem
    (10) maines -> . empty
    (111) mainf -> . bloque SEMICOLON
    (112) empty -> .
    (61) bloque -> . LKEY bloquep
    (62) bloque -> . LKEY bloqueppp

    $end            reduce using rule 112 (empty -> .)
    LKEY            shift and go to state 86

    maines                         shift and go to state 82
    mainf                          shift and go to state 83
    empty                          shift and go to state 84
    bloque                         shift and go to state 85

state 73

    (49) funcionf -> VOID funciontipo ID funcionid . LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp

    LPAR            shift and go to state 87


state 74

    (50) funcionf -> tipo ID funcionid LPAR . funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (54) funcionp -> . funcionpp
    (55) funcionp -> . empty
    (56) funcionpp -> . tipo ID varid funcionppp
    (112) empty -> .
    (20) tipo -> . INT funciontipo
    (21) tipo -> . FLOAT funciontipo

    RPAR            reduce using rule 112 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    tipo                           shift and go to state 88
    funcionp                       shift and go to state 89
    funcionpp                      shift and go to state 90
    empty                          shift and go to state 91

state 75

    (25) auxexp -> PLUS meteopdores . exp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 92
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 76

    (26) auxexp -> MINUS meteopdores . exp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 93
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 77

    (30) auxtermino -> MULT meteopdores . termino
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    termino                        shift and go to state 94
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 78

    (31) auxtermino -> SLASH meteopdores . termino
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    termino                        shift and go to state 95
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 79

    (33) factor -> LPAR infondo expresion RPAR . outfondo
    (36) outfondo -> .

    MULT            reduce using rule 36 (outfondo -> .)
    SLASH           reduce using rule 36 (outfondo -> .)
    PLUS            reduce using rule 36 (outfondo -> .)
    MINUS           reduce using rule 36 (outfondo -> .)
    RBRK            reduce using rule 36 (outfondo -> .)
    MORETHAN        reduce using rule 36 (outfondo -> .)
    LESSTHAN        reduce using rule 36 (outfondo -> .)
    EQL             reduce using rule 36 (outfondo -> .)
    NOTEQL          reduce using rule 36 (outfondo -> .)
    RPAR            reduce using rule 36 (outfondo -> .)
    COMMA           reduce using rule 36 (outfondo -> .)
    AND             reduce using rule 36 (outfondo -> .)
    OR              reduce using rule 36 (outfondo -> .)
    SEMICOLON       reduce using rule 36 (outfondo -> .)

    outfondo                       shift and go to state 96

state 80

    (104) expresion -> exp cuadexpresion . expresionp
    (106) expresionp -> . MORETHAN meteopdores expresion
    (107) expresionp -> . LESSTHAN meteopdores expresion
    (108) expresionp -> . EQL meteopdores expresion
    (109) expresionp -> . NOTEQL meteopdores expresion
    (110) expresionp -> . empty
    (112) empty -> .

    MORETHAN        shift and go to state 98
    LESSTHAN        shift and go to state 99
    EQL             shift and go to state 100
    NOTEQL          shift and go to state 101
    RPAR            reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)

    expresionp                     shift and go to state 97
    empty                          shift and go to state 102

state 81

    (45) llamafuncpp -> tipo ID . llamafuncppp
    (46) llamafuncppp -> . COMMA llamafuncpp
    (47) llamafuncppp -> . llamafuncpppp
    (48) llamafuncpppp -> . RPAR

    COMMA           shift and go to state 104
    RPAR            shift and go to state 71

    llamafuncppp                   shift and go to state 103
    llamafuncpppp                  shift and go to state 105

state 82

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON resetwatcher maines . debug salidadoc
    (3) debug -> .

    $end            reduce using rule 3 (debug -> .)

    debug                          shift and go to state 106

state 83

    (9) maines -> mainf . resetmem
    (51) resetmem -> .

    $end            reduce using rule 51 (resetmem -> .)

    resetmem                       shift and go to state 107

state 84

    (10) maines -> empty .

    $end            reduce using rule 10 (maines -> empty .)


state 85

    (111) mainf -> bloque . SEMICOLON

    SEMICOLON       shift and go to state 108


state 86

    (61) bloque -> LKEY . bloquep
    (62) bloque -> LKEY . bloqueppp
    (63) bloquep -> . estatuto bloquepp
    (66) bloqueppp -> . RKEY
    (67) estatuto -> . asignacion
    (68) estatuto -> . condif
    (69) estatuto -> . condwhile
    (70) estatuto -> . conddowhile
    (71) estatuto -> . escritura
    (72) estatuto -> . llamafunc SEMICOLON
    (73) asignacion -> . ID array asignacionp
    (74) asignacion -> . ID meteopandos asignacionp
    (91) condif -> . IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif
    (97) condwhile -> . WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (101) conddowhile -> . DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (84) escritura -> . PRINT meteopdores LPAR escriturap
    (42) llamafunc -> . ID LPAR llamafuncp

    RKEY            shift and go to state 112
    ID              shift and go to state 119
    IF              shift and go to state 120
    WHILE           shift and go to state 121
    DO              shift and go to state 122
    PRINT           shift and go to state 123

    bloquep                        shift and go to state 109
    bloqueppp                      shift and go to state 110
    estatuto                       shift and go to state 111
    asignacion                     shift and go to state 113
    condif                         shift and go to state 114
    condwhile                      shift and go to state 115
    conddowhile                    shift and go to state 116
    escritura                      shift and go to state 117
    llamafunc                      shift and go to state 118

state 87

    (49) funcionf -> VOID funciontipo ID funcionid LPAR . funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (54) funcionp -> . funcionpp
    (55) funcionp -> . empty
    (56) funcionpp -> . tipo ID varid funcionppp
    (112) empty -> .
    (20) tipo -> . INT funciontipo
    (21) tipo -> . FLOAT funciontipo

    RPAR            reduce using rule 112 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funcionp                       shift and go to state 124
    funcionpp                      shift and go to state 90
    empty                          shift and go to state 91
    tipo                           shift and go to state 88

state 88

    (56) funcionpp -> tipo . ID varid funcionppp

    ID              shift and go to state 125


state 89

    (50) funcionf -> tipo ID funcionid LPAR funcionp . RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp

    RPAR            shift and go to state 126


state 90

    (54) funcionp -> funcionpp .

    RPAR            reduce using rule 54 (funcionp -> funcionpp .)


state 91

    (55) funcionp -> empty .

    RPAR            reduce using rule 55 (funcionp -> empty .)


state 92

    (25) auxexp -> PLUS meteopdores exp .

    RBRK            reduce using rule 25 (auxexp -> PLUS meteopdores exp .)
    MORETHAN        reduce using rule 25 (auxexp -> PLUS meteopdores exp .)
    LESSTHAN        reduce using rule 25 (auxexp -> PLUS meteopdores exp .)
    EQL             reduce using rule 25 (auxexp -> PLUS meteopdores exp .)
    NOTEQL          reduce using rule 25 (auxexp -> PLUS meteopdores exp .)
    RPAR            reduce using rule 25 (auxexp -> PLUS meteopdores exp .)
    COMMA           reduce using rule 25 (auxexp -> PLUS meteopdores exp .)
    AND             reduce using rule 25 (auxexp -> PLUS meteopdores exp .)
    OR              reduce using rule 25 (auxexp -> PLUS meteopdores exp .)
    SEMICOLON       reduce using rule 25 (auxexp -> PLUS meteopdores exp .)


state 93

    (26) auxexp -> MINUS meteopdores exp .

    RBRK            reduce using rule 26 (auxexp -> MINUS meteopdores exp .)
    MORETHAN        reduce using rule 26 (auxexp -> MINUS meteopdores exp .)
    LESSTHAN        reduce using rule 26 (auxexp -> MINUS meteopdores exp .)
    EQL             reduce using rule 26 (auxexp -> MINUS meteopdores exp .)
    NOTEQL          reduce using rule 26 (auxexp -> MINUS meteopdores exp .)
    RPAR            reduce using rule 26 (auxexp -> MINUS meteopdores exp .)
    COMMA           reduce using rule 26 (auxexp -> MINUS meteopdores exp .)
    AND             reduce using rule 26 (auxexp -> MINUS meteopdores exp .)
    OR              reduce using rule 26 (auxexp -> MINUS meteopdores exp .)
    SEMICOLON       reduce using rule 26 (auxexp -> MINUS meteopdores exp .)


state 94

    (30) auxtermino -> MULT meteopdores termino .

    PLUS            reduce using rule 30 (auxtermino -> MULT meteopdores termino .)
    MINUS           reduce using rule 30 (auxtermino -> MULT meteopdores termino .)
    RBRK            reduce using rule 30 (auxtermino -> MULT meteopdores termino .)
    MORETHAN        reduce using rule 30 (auxtermino -> MULT meteopdores termino .)
    LESSTHAN        reduce using rule 30 (auxtermino -> MULT meteopdores termino .)
    EQL             reduce using rule 30 (auxtermino -> MULT meteopdores termino .)
    NOTEQL          reduce using rule 30 (auxtermino -> MULT meteopdores termino .)
    RPAR            reduce using rule 30 (auxtermino -> MULT meteopdores termino .)
    COMMA           reduce using rule 30 (auxtermino -> MULT meteopdores termino .)
    AND             reduce using rule 30 (auxtermino -> MULT meteopdores termino .)
    OR              reduce using rule 30 (auxtermino -> MULT meteopdores termino .)
    SEMICOLON       reduce using rule 30 (auxtermino -> MULT meteopdores termino .)


state 95

    (31) auxtermino -> SLASH meteopdores termino .

    PLUS            reduce using rule 31 (auxtermino -> SLASH meteopdores termino .)
    MINUS           reduce using rule 31 (auxtermino -> SLASH meteopdores termino .)
    RBRK            reduce using rule 31 (auxtermino -> SLASH meteopdores termino .)
    MORETHAN        reduce using rule 31 (auxtermino -> SLASH meteopdores termino .)
    LESSTHAN        reduce using rule 31 (auxtermino -> SLASH meteopdores termino .)
    EQL             reduce using rule 31 (auxtermino -> SLASH meteopdores termino .)
    NOTEQL          reduce using rule 31 (auxtermino -> SLASH meteopdores termino .)
    RPAR            reduce using rule 31 (auxtermino -> SLASH meteopdores termino .)
    COMMA           reduce using rule 31 (auxtermino -> SLASH meteopdores termino .)
    AND             reduce using rule 31 (auxtermino -> SLASH meteopdores termino .)
    OR              reduce using rule 31 (auxtermino -> SLASH meteopdores termino .)
    SEMICOLON       reduce using rule 31 (auxtermino -> SLASH meteopdores termino .)


state 96

    (33) factor -> LPAR infondo expresion RPAR outfondo .

    MULT            reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)
    SLASH           reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)
    PLUS            reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)
    MINUS           reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)
    RBRK            reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)
    MORETHAN        reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)
    LESSTHAN        reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)
    EQL             reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)
    NOTEQL          reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)
    RPAR            reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)
    COMMA           reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)
    AND             reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)
    OR              reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)
    SEMICOLON       reduce using rule 33 (factor -> LPAR infondo expresion RPAR outfondo .)


state 97

    (104) expresion -> exp cuadexpresion expresionp .

    RPAR            reduce using rule 104 (expresion -> exp cuadexpresion expresionp .)
    COMMA           reduce using rule 104 (expresion -> exp cuadexpresion expresionp .)
    AND             reduce using rule 104 (expresion -> exp cuadexpresion expresionp .)
    OR              reduce using rule 104 (expresion -> exp cuadexpresion expresionp .)
    SEMICOLON       reduce using rule 104 (expresion -> exp cuadexpresion expresionp .)


state 98

    (106) expresionp -> MORETHAN . meteopdores expresion
    (82) meteopdores -> .

    LPAR            reduce using rule 82 (meteopdores -> .)
    ID              reduce using rule 82 (meteopdores -> .)
    NUMFLOAT        reduce using rule 82 (meteopdores -> .)
    NUMINT          reduce using rule 82 (meteopdores -> .)

    meteopdores                    shift and go to state 127

state 99

    (107) expresionp -> LESSTHAN . meteopdores expresion
    (82) meteopdores -> .

    LPAR            reduce using rule 82 (meteopdores -> .)
    ID              reduce using rule 82 (meteopdores -> .)
    NUMFLOAT        reduce using rule 82 (meteopdores -> .)
    NUMINT          reduce using rule 82 (meteopdores -> .)

    meteopdores                    shift and go to state 128

state 100

    (108) expresionp -> EQL . meteopdores expresion
    (82) meteopdores -> .

    LPAR            reduce using rule 82 (meteopdores -> .)
    ID              reduce using rule 82 (meteopdores -> .)
    NUMFLOAT        reduce using rule 82 (meteopdores -> .)
    NUMINT          reduce using rule 82 (meteopdores -> .)

    meteopdores                    shift and go to state 129

state 101

    (109) expresionp -> NOTEQL . meteopdores expresion
    (82) meteopdores -> .

    LPAR            reduce using rule 82 (meteopdores -> .)
    ID              reduce using rule 82 (meteopdores -> .)
    NUMFLOAT        reduce using rule 82 (meteopdores -> .)
    NUMINT          reduce using rule 82 (meteopdores -> .)

    meteopdores                    shift and go to state 130

state 102

    (110) expresionp -> empty .

    RPAR            reduce using rule 110 (expresionp -> empty .)
    COMMA           reduce using rule 110 (expresionp -> empty .)
    AND             reduce using rule 110 (expresionp -> empty .)
    OR              reduce using rule 110 (expresionp -> empty .)
    SEMICOLON       reduce using rule 110 (expresionp -> empty .)


state 103

    (45) llamafuncpp -> tipo ID llamafuncppp .

    MULT            reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)
    SLASH           reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)
    PLUS            reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)
    MINUS           reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)
    RBRK            reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)
    MORETHAN        reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)
    LESSTHAN        reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)
    EQL             reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)
    NOTEQL          reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)
    RPAR            reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)
    COMMA           reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)
    AND             reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)
    OR              reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)
    SEMICOLON       reduce using rule 45 (llamafuncpp -> tipo ID llamafuncppp .)


state 104

    (46) llamafuncppp -> COMMA . llamafuncpp
    (45) llamafuncpp -> . tipo ID llamafuncppp
    (20) tipo -> . INT funciontipo
    (21) tipo -> . FLOAT funciontipo

    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    llamafuncpp                    shift and go to state 131
    tipo                           shift and go to state 70

state 105

    (47) llamafuncppp -> llamafuncpppp .

    MULT            reduce using rule 47 (llamafuncppp -> llamafuncpppp .)
    SLASH           reduce using rule 47 (llamafuncppp -> llamafuncpppp .)
    PLUS            reduce using rule 47 (llamafuncppp -> llamafuncpppp .)
    MINUS           reduce using rule 47 (llamafuncppp -> llamafuncpppp .)
    RBRK            reduce using rule 47 (llamafuncppp -> llamafuncpppp .)
    MORETHAN        reduce using rule 47 (llamafuncppp -> llamafuncpppp .)
    LESSTHAN        reduce using rule 47 (llamafuncppp -> llamafuncpppp .)
    EQL             reduce using rule 47 (llamafuncppp -> llamafuncpppp .)
    NOTEQL          reduce using rule 47 (llamafuncppp -> llamafuncpppp .)
    RPAR            reduce using rule 47 (llamafuncppp -> llamafuncpppp .)
    COMMA           reduce using rule 47 (llamafuncppp -> llamafuncpppp .)
    AND             reduce using rule 47 (llamafuncppp -> llamafuncpppp .)
    OR              reduce using rule 47 (llamafuncppp -> llamafuncpppp .)
    SEMICOLON       reduce using rule 47 (llamafuncppp -> llamafuncpppp .)


state 106

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON resetwatcher maines debug . salidadoc
    (2) salidadoc -> .

    $end            reduce using rule 2 (salidadoc -> .)

    salidadoc                      shift and go to state 132

state 107

    (9) maines -> mainf resetmem .

    $end            reduce using rule 9 (maines -> mainf resetmem .)


state 108

    (111) mainf -> bloque SEMICOLON .

    $end            reduce using rule 111 (mainf -> bloque SEMICOLON .)


state 109

    (61) bloque -> LKEY bloquep .

    SEMICOLON       reduce using rule 61 (bloque -> LKEY bloquep .)
    RETURN          reduce using rule 61 (bloque -> LKEY bloquep .)
    WHILE           reduce using rule 61 (bloque -> LKEY bloquep .)
    ELSE            reduce using rule 61 (bloque -> LKEY bloquep .)


state 110

    (62) bloque -> LKEY bloqueppp .

    SEMICOLON       reduce using rule 62 (bloque -> LKEY bloqueppp .)
    RETURN          reduce using rule 62 (bloque -> LKEY bloqueppp .)
    WHILE           reduce using rule 62 (bloque -> LKEY bloqueppp .)
    ELSE            reduce using rule 62 (bloque -> LKEY bloqueppp .)


state 111

    (63) bloquep -> estatuto . bloquepp
    (64) bloquepp -> . bloquep
    (65) bloquepp -> . bloqueppp
    (63) bloquep -> . estatuto bloquepp
    (66) bloqueppp -> . RKEY
    (67) estatuto -> . asignacion
    (68) estatuto -> . condif
    (69) estatuto -> . condwhile
    (70) estatuto -> . conddowhile
    (71) estatuto -> . escritura
    (72) estatuto -> . llamafunc SEMICOLON
    (73) asignacion -> . ID array asignacionp
    (74) asignacion -> . ID meteopandos asignacionp
    (91) condif -> . IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif
    (97) condwhile -> . WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (101) conddowhile -> . DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (84) escritura -> . PRINT meteopdores LPAR escriturap
    (42) llamafunc -> . ID LPAR llamafuncp

    RKEY            shift and go to state 112
    ID              shift and go to state 119
    IF              shift and go to state 120
    WHILE           shift and go to state 121
    DO              shift and go to state 122
    PRINT           shift and go to state 123

    estatuto                       shift and go to state 111
    bloquepp                       shift and go to state 133
    bloquep                        shift and go to state 134
    bloqueppp                      shift and go to state 135
    asignacion                     shift and go to state 113
    condif                         shift and go to state 114
    condwhile                      shift and go to state 115
    conddowhile                    shift and go to state 116
    escritura                      shift and go to state 117
    llamafunc                      shift and go to state 118

state 112

    (66) bloqueppp -> RKEY .

    SEMICOLON       reduce using rule 66 (bloqueppp -> RKEY .)
    RETURN          reduce using rule 66 (bloqueppp -> RKEY .)
    WHILE           reduce using rule 66 (bloqueppp -> RKEY .)
    ELSE            reduce using rule 66 (bloqueppp -> RKEY .)


state 113

    (67) estatuto -> asignacion .

    RKEY            reduce using rule 67 (estatuto -> asignacion .)
    ID              reduce using rule 67 (estatuto -> asignacion .)
    IF              reduce using rule 67 (estatuto -> asignacion .)
    WHILE           reduce using rule 67 (estatuto -> asignacion .)
    DO              reduce using rule 67 (estatuto -> asignacion .)
    PRINT           reduce using rule 67 (estatuto -> asignacion .)


state 114

    (68) estatuto -> condif .

    RKEY            reduce using rule 68 (estatuto -> condif .)
    ID              reduce using rule 68 (estatuto -> condif .)
    IF              reduce using rule 68 (estatuto -> condif .)
    WHILE           reduce using rule 68 (estatuto -> condif .)
    DO              reduce using rule 68 (estatuto -> condif .)
    PRINT           reduce using rule 68 (estatuto -> condif .)


state 115

    (69) estatuto -> condwhile .

    RKEY            reduce using rule 69 (estatuto -> condwhile .)
    ID              reduce using rule 69 (estatuto -> condwhile .)
    IF              reduce using rule 69 (estatuto -> condwhile .)
    WHILE           reduce using rule 69 (estatuto -> condwhile .)
    DO              reduce using rule 69 (estatuto -> condwhile .)
    PRINT           reduce using rule 69 (estatuto -> condwhile .)


state 116

    (70) estatuto -> conddowhile .

    RKEY            reduce using rule 70 (estatuto -> conddowhile .)
    ID              reduce using rule 70 (estatuto -> conddowhile .)
    IF              reduce using rule 70 (estatuto -> conddowhile .)
    WHILE           reduce using rule 70 (estatuto -> conddowhile .)
    DO              reduce using rule 70 (estatuto -> conddowhile .)
    PRINT           reduce using rule 70 (estatuto -> conddowhile .)


state 117

    (71) estatuto -> escritura .

    RKEY            reduce using rule 71 (estatuto -> escritura .)
    ID              reduce using rule 71 (estatuto -> escritura .)
    IF              reduce using rule 71 (estatuto -> escritura .)
    WHILE           reduce using rule 71 (estatuto -> escritura .)
    DO              reduce using rule 71 (estatuto -> escritura .)
    PRINT           reduce using rule 71 (estatuto -> escritura .)


state 118

    (72) estatuto -> llamafunc . SEMICOLON

    SEMICOLON       shift and go to state 136


state 119

    (73) asignacion -> ID . array asignacionp
    (74) asignacion -> ID . meteopandos asignacionp
    (42) llamafunc -> ID . LPAR llamafuncp
    (22) array -> . LBRK exp RBRK
    (83) meteopandos -> .

    LPAR            shift and go to state 50
    LBRK            shift and go to state 18
    AEQL            reduce using rule 83 (meteopandos -> .)

    array                          shift and go to state 137
    meteopandos                    shift and go to state 138

state 120

    (91) condif -> IF . LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif

    LPAR            shift and go to state 139


state 121

    (97) condwhile -> WHILE . LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON

    LPAR            shift and go to state 140


state 122

    (101) conddowhile -> DO . guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (102) guardardowhile -> .

    LKEY            reduce using rule 102 (guardardowhile -> .)

    guardardowhile                 shift and go to state 141

state 123

    (84) escritura -> PRINT . meteopdores LPAR escriturap
    (82) meteopdores -> .

    LPAR            reduce using rule 82 (meteopdores -> .)

    meteopdores                    shift and go to state 142

state 124

    (49) funcionf -> VOID funciontipo ID funcionid LPAR funcionp . RPAR bloque resetmem SEMICOLON funcionpppp

    RPAR            shift and go to state 143


state 125

    (56) funcionpp -> tipo ID . varid funcionppp
    (14) varid -> .

    COMMA           reduce using rule 14 (varid -> .)
    RPAR            reduce using rule 14 (varid -> .)

    varid                          shift and go to state 144

state 126

    (50) funcionf -> tipo ID funcionid LPAR funcionp RPAR . bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (61) bloque -> . LKEY bloquep
    (62) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 86

    bloque                         shift and go to state 145

state 127

    (106) expresionp -> MORETHAN meteopdores . expresion
    (104) expresion -> . exp cuadexpresion expresionp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 146
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 128

    (107) expresionp -> LESSTHAN meteopdores . expresion
    (104) expresion -> . exp cuadexpresion expresionp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 147
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 129

    (108) expresionp -> EQL meteopdores . expresion
    (104) expresion -> . exp cuadexpresion expresionp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 148
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 130

    (109) expresionp -> NOTEQL meteopdores . expresion
    (104) expresion -> . exp cuadexpresion expresionp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 149
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 131

    (46) llamafuncppp -> COMMA llamafuncpp .

    MULT            reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)
    SLASH           reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)
    PLUS            reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)
    MINUS           reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)
    RBRK            reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)
    MORETHAN        reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)
    LESSTHAN        reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)
    EQL             reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)
    NOTEQL          reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)
    RPAR            reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)
    COMMA           reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)
    AND             reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)
    OR              reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)
    SEMICOLON       reduce using rule 46 (llamafuncppp -> COMMA llamafuncpp .)


state 132

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON resetwatcher maines debug salidadoc .

    $end            reduce using rule 1 (programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON resetwatcher maines debug salidadoc .)


state 133

    (63) bloquep -> estatuto bloquepp .

    SEMICOLON       reduce using rule 63 (bloquep -> estatuto bloquepp .)
    RETURN          reduce using rule 63 (bloquep -> estatuto bloquepp .)
    WHILE           reduce using rule 63 (bloquep -> estatuto bloquepp .)
    ELSE            reduce using rule 63 (bloquep -> estatuto bloquepp .)


state 134

    (64) bloquepp -> bloquep .

    SEMICOLON       reduce using rule 64 (bloquepp -> bloquep .)
    RETURN          reduce using rule 64 (bloquepp -> bloquep .)
    WHILE           reduce using rule 64 (bloquepp -> bloquep .)
    ELSE            reduce using rule 64 (bloquepp -> bloquep .)


state 135

    (65) bloquepp -> bloqueppp .

    SEMICOLON       reduce using rule 65 (bloquepp -> bloqueppp .)
    RETURN          reduce using rule 65 (bloquepp -> bloqueppp .)
    WHILE           reduce using rule 65 (bloquepp -> bloqueppp .)
    ELSE            reduce using rule 65 (bloquepp -> bloqueppp .)


state 136

    (72) estatuto -> llamafunc SEMICOLON .

    RKEY            reduce using rule 72 (estatuto -> llamafunc SEMICOLON .)
    ID              reduce using rule 72 (estatuto -> llamafunc SEMICOLON .)
    IF              reduce using rule 72 (estatuto -> llamafunc SEMICOLON .)
    WHILE           reduce using rule 72 (estatuto -> llamafunc SEMICOLON .)
    DO              reduce using rule 72 (estatuto -> llamafunc SEMICOLON .)
    PRINT           reduce using rule 72 (estatuto -> llamafunc SEMICOLON .)


state 137

    (73) asignacion -> ID array . asignacionp
    (75) asignacionp -> . AEQL meteopdores expresionandor cuadass SEMICOLON

    AEQL            shift and go to state 151

    asignacionp                    shift and go to state 150

state 138

    (74) asignacion -> ID meteopandos . asignacionp
    (75) asignacionp -> . AEQL meteopdores expresionandor cuadass SEMICOLON

    AEQL            shift and go to state 151

    asignacionp                    shift and go to state 152

state 139

    (91) condif -> IF LPAR . expresion cuadcondif RPAR bloque condifp cuadrellenoif
    (104) expresion -> . exp cuadexpresion expresionp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 153
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 140

    (97) condwhile -> WHILE LPAR . guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (98) guardarsal -> .

    LPAR            reduce using rule 98 (guardarsal -> .)
    ID              reduce using rule 98 (guardarsal -> .)
    NUMFLOAT        reduce using rule 98 (guardarsal -> .)
    NUMINT          reduce using rule 98 (guardarsal -> .)

    guardarsal                     shift and go to state 154

state 141

    (101) conddowhile -> DO guardardowhile . bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (61) bloque -> . LKEY bloquep
    (62) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 86

    bloque                         shift and go to state 155

state 142

    (84) escritura -> PRINT meteopdores . LPAR escriturap

    LPAR            shift and go to state 156


state 143

    (49) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR . bloque resetmem SEMICOLON funcionpppp
    (61) bloque -> . LKEY bloquep
    (62) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 86

    bloque                         shift and go to state 157

state 144

    (56) funcionpp -> tipo ID varid . funcionppp
    (57) funcionppp -> . COMMA funcionpp
    (58) funcionppp -> . empty
    (112) empty -> .

    COMMA           shift and go to state 159
    RPAR            reduce using rule 112 (empty -> .)

    funcionppp                     shift and go to state 158
    empty                          shift and go to state 160

state 145

    (50) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque . RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp

    RETURN          shift and go to state 161


state 146

    (106) expresionp -> MORETHAN meteopdores expresion .

    RPAR            reduce using rule 106 (expresionp -> MORETHAN meteopdores expresion .)
    COMMA           reduce using rule 106 (expresionp -> MORETHAN meteopdores expresion .)
    AND             reduce using rule 106 (expresionp -> MORETHAN meteopdores expresion .)
    OR              reduce using rule 106 (expresionp -> MORETHAN meteopdores expresion .)
    SEMICOLON       reduce using rule 106 (expresionp -> MORETHAN meteopdores expresion .)


state 147

    (107) expresionp -> LESSTHAN meteopdores expresion .

    RPAR            reduce using rule 107 (expresionp -> LESSTHAN meteopdores expresion .)
    COMMA           reduce using rule 107 (expresionp -> LESSTHAN meteopdores expresion .)
    AND             reduce using rule 107 (expresionp -> LESSTHAN meteopdores expresion .)
    OR              reduce using rule 107 (expresionp -> LESSTHAN meteopdores expresion .)
    SEMICOLON       reduce using rule 107 (expresionp -> LESSTHAN meteopdores expresion .)


state 148

    (108) expresionp -> EQL meteopdores expresion .

    RPAR            reduce using rule 108 (expresionp -> EQL meteopdores expresion .)
    COMMA           reduce using rule 108 (expresionp -> EQL meteopdores expresion .)
    AND             reduce using rule 108 (expresionp -> EQL meteopdores expresion .)
    OR              reduce using rule 108 (expresionp -> EQL meteopdores expresion .)
    SEMICOLON       reduce using rule 108 (expresionp -> EQL meteopdores expresion .)


state 149

    (109) expresionp -> NOTEQL meteopdores expresion .

    RPAR            reduce using rule 109 (expresionp -> NOTEQL meteopdores expresion .)
    COMMA           reduce using rule 109 (expresionp -> NOTEQL meteopdores expresion .)
    AND             reduce using rule 109 (expresionp -> NOTEQL meteopdores expresion .)
    OR              reduce using rule 109 (expresionp -> NOTEQL meteopdores expresion .)
    SEMICOLON       reduce using rule 109 (expresionp -> NOTEQL meteopdores expresion .)


state 150

    (73) asignacion -> ID array asignacionp .

    RKEY            reduce using rule 73 (asignacion -> ID array asignacionp .)
    ID              reduce using rule 73 (asignacion -> ID array asignacionp .)
    IF              reduce using rule 73 (asignacion -> ID array asignacionp .)
    WHILE           reduce using rule 73 (asignacion -> ID array asignacionp .)
    DO              reduce using rule 73 (asignacion -> ID array asignacionp .)
    PRINT           reduce using rule 73 (asignacion -> ID array asignacionp .)


state 151

    (75) asignacionp -> AEQL . meteopdores expresionandor cuadass SEMICOLON
    (82) meteopdores -> .

    LPAR            reduce using rule 82 (meteopdores -> .)
    ID              reduce using rule 82 (meteopdores -> .)
    NUMFLOAT        reduce using rule 82 (meteopdores -> .)
    NUMINT          reduce using rule 82 (meteopdores -> .)

    meteopdores                    shift and go to state 162

state 152

    (74) asignacion -> ID meteopandos asignacionp .

    RKEY            reduce using rule 74 (asignacion -> ID meteopandos asignacionp .)
    ID              reduce using rule 74 (asignacion -> ID meteopandos asignacionp .)
    IF              reduce using rule 74 (asignacion -> ID meteopandos asignacionp .)
    WHILE           reduce using rule 74 (asignacion -> ID meteopandos asignacionp .)
    DO              reduce using rule 74 (asignacion -> ID meteopandos asignacionp .)
    PRINT           reduce using rule 74 (asignacion -> ID meteopandos asignacionp .)


state 153

    (91) condif -> IF LPAR expresion . cuadcondif RPAR bloque condifp cuadrellenoif
    (92) cuadcondif -> .

    RPAR            reduce using rule 92 (cuadcondif -> .)

    cuadcondif                     shift and go to state 163

state 154

    (97) condwhile -> WHILE LPAR guardarsal . expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (104) expresion -> . exp cuadexpresion expresionp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 164
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 155

    (101) conddowhile -> DO guardardowhile bloque . WHILE LPAR expresion quadconddowhile RPAR SEMICOLON

    WHILE           shift and go to state 165


state 156

    (84) escritura -> PRINT meteopdores LPAR . escriturap
    (85) escriturap -> . expresion cuadescritura escriturapp
    (86) escriturap -> . STRING meteconst cuadescriturastring escriturapp
    (104) expresion -> . exp cuadexpresion expresionp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    STRING          shift and go to state 168
    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    escriturap                     shift and go to state 166
    expresion                      shift and go to state 167
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 157

    (49) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque . resetmem SEMICOLON funcionpppp
    (51) resetmem -> .

    SEMICOLON       reduce using rule 51 (resetmem -> .)

    resetmem                       shift and go to state 169

state 158

    (56) funcionpp -> tipo ID varid funcionppp .

    RPAR            reduce using rule 56 (funcionpp -> tipo ID varid funcionppp .)


state 159

    (57) funcionppp -> COMMA . funcionpp
    (56) funcionpp -> . tipo ID varid funcionppp
    (20) tipo -> . INT funciontipo
    (21) tipo -> . FLOAT funciontipo

    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funcionpp                      shift and go to state 170
    tipo                           shift and go to state 88

state 160

    (58) funcionppp -> empty .

    RPAR            reduce using rule 58 (funcionppp -> empty .)


state 161

    (50) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN . LPAR exp RPAR resetmem SEMICOLON funcionpppp

    LPAR            shift and go to state 171


state 162

    (75) asignacionp -> AEQL meteopdores . expresionandor cuadass SEMICOLON
    (76) expresionandor -> . expresion cuadexpresionandor auxandor
    (104) expresion -> . exp cuadexpresion expresionp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 172
    expresion                      shift and go to state 173
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 163

    (91) condif -> IF LPAR expresion cuadcondif . RPAR bloque condifp cuadrellenoif

    RPAR            shift and go to state 174


state 164

    (97) condwhile -> WHILE LPAR guardarsal expresion . quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (99) quadcondwhile -> .

    RPAR            reduce using rule 99 (quadcondwhile -> .)

    quadcondwhile                  shift and go to state 175

state 165

    (101) conddowhile -> DO guardardowhile bloque WHILE . LPAR expresion quadconddowhile RPAR SEMICOLON

    LPAR            shift and go to state 176


state 166

    (84) escritura -> PRINT meteopdores LPAR escriturap .

    RKEY            reduce using rule 84 (escritura -> PRINT meteopdores LPAR escriturap .)
    ID              reduce using rule 84 (escritura -> PRINT meteopdores LPAR escriturap .)
    IF              reduce using rule 84 (escritura -> PRINT meteopdores LPAR escriturap .)
    WHILE           reduce using rule 84 (escritura -> PRINT meteopdores LPAR escriturap .)
    DO              reduce using rule 84 (escritura -> PRINT meteopdores LPAR escriturap .)
    PRINT           reduce using rule 84 (escritura -> PRINT meteopdores LPAR escriturap .)


state 167

    (85) escriturap -> expresion . cuadescritura escriturapp
    (87) cuadescritura -> .

    COMMA           reduce using rule 87 (cuadescritura -> .)
    RPAR            reduce using rule 87 (cuadescritura -> .)

    cuadescritura                  shift and go to state 177

state 168

    (86) escriturap -> STRING . meteconst cuadescriturastring escriturapp
    (41) meteconst -> .

    COMMA           reduce using rule 41 (meteconst -> .)
    RPAR            reduce using rule 41 (meteconst -> .)

    meteconst                      shift and go to state 178

state 169

    (49) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem . SEMICOLON funcionpppp

    SEMICOLON       shift and go to state 179


state 170

    (57) funcionppp -> COMMA funcionpp .

    RPAR            reduce using rule 57 (funcionppp -> COMMA funcionpp .)


state 171

    (50) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR . exp RPAR resetmem SEMICOLON funcionpppp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 180
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 172

    (75) asignacionp -> AEQL meteopdores expresionandor . cuadass SEMICOLON
    (81) cuadass -> .

    SEMICOLON       reduce using rule 81 (cuadass -> .)

    cuadass                        shift and go to state 181

state 173

    (76) expresionandor -> expresion . cuadexpresionandor auxandor
    (77) cuadexpresionandor -> .

    AND             reduce using rule 77 (cuadexpresionandor -> .)
    OR              reduce using rule 77 (cuadexpresionandor -> .)
    SEMICOLON       reduce using rule 77 (cuadexpresionandor -> .)

    cuadexpresionandor             shift and go to state 182

state 174

    (91) condif -> IF LPAR expresion cuadcondif RPAR . bloque condifp cuadrellenoif
    (61) bloque -> . LKEY bloquep
    (62) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 86

    bloque                         shift and go to state 183

state 175

    (97) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile . RPAR bloque rellenocondwhile SEMICOLON

    RPAR            shift and go to state 184


state 176

    (101) conddowhile -> DO guardardowhile bloque WHILE LPAR . expresion quadconddowhile RPAR SEMICOLON
    (104) expresion -> . exp cuadexpresion expresionp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 185
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 177

    (85) escriturap -> expresion cuadescritura . escriturapp
    (89) escriturapp -> . COMMA escriturap
    (90) escriturapp -> . RPAR SEMICOLON

    COMMA           shift and go to state 187
    RPAR            shift and go to state 188

    escriturapp                    shift and go to state 186

state 178

    (86) escriturap -> STRING meteconst . cuadescriturastring escriturapp
    (88) cuadescriturastring -> .

    COMMA           reduce using rule 88 (cuadescriturastring -> .)
    RPAR            reduce using rule 88 (cuadescriturastring -> .)

    cuadescriturastring            shift and go to state 189

state 179

    (49) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON . funcionpppp
    (59) funcionpppp -> . funcionf
    (60) funcionpppp -> . empty
    (49) funcionf -> . VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (50) funcionf -> . tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (112) empty -> .
    (20) tipo -> . INT funciontipo
    (21) tipo -> . FLOAT funciontipo

    VOID            shift and go to state 22
    MAIN            reduce using rule 112 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funcionpppp                    shift and go to state 190
    funcionf                       shift and go to state 191
    empty                          shift and go to state 192
    tipo                           shift and go to state 23

state 180

    (50) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp . RPAR resetmem SEMICOLON funcionpppp

    RPAR            shift and go to state 193


state 181

    (75) asignacionp -> AEQL meteopdores expresionandor cuadass . SEMICOLON

    SEMICOLON       shift and go to state 194


state 182

    (76) expresionandor -> expresion cuadexpresionandor . auxandor
    (78) auxandor -> . AND meteopdores expresionandor
    (79) auxandor -> . OR meteopdores expresionandor
    (80) auxandor -> . empty
    (112) empty -> .

    AND             shift and go to state 196
    OR              shift and go to state 197
    SEMICOLON       reduce using rule 112 (empty -> .)

    auxandor                       shift and go to state 195
    empty                          shift and go to state 198

state 183

    (91) condif -> IF LPAR expresion cuadcondif RPAR bloque . condifp cuadrellenoif
    (94) condifp -> . ELSE cuadconifelse bloque SEMICOLON
    (95) condifp -> . SEMICOLON

    ELSE            shift and go to state 200
    SEMICOLON       shift and go to state 201

    condifp                        shift and go to state 199

state 184

    (97) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR . bloque rellenocondwhile SEMICOLON
    (61) bloque -> . LKEY bloquep
    (62) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 86

    bloque                         shift and go to state 202

state 185

    (101) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion . quadconddowhile RPAR SEMICOLON
    (103) quadconddowhile -> .

    RPAR            reduce using rule 103 (quadconddowhile -> .)

    quadconddowhile                shift and go to state 203

state 186

    (85) escriturap -> expresion cuadescritura escriturapp .

    RKEY            reduce using rule 85 (escriturap -> expresion cuadescritura escriturapp .)
    ID              reduce using rule 85 (escriturap -> expresion cuadescritura escriturapp .)
    IF              reduce using rule 85 (escriturap -> expresion cuadescritura escriturapp .)
    WHILE           reduce using rule 85 (escriturap -> expresion cuadescritura escriturapp .)
    DO              reduce using rule 85 (escriturap -> expresion cuadescritura escriturapp .)
    PRINT           reduce using rule 85 (escriturap -> expresion cuadescritura escriturapp .)


state 187

    (89) escriturapp -> COMMA . escriturap
    (85) escriturap -> . expresion cuadescritura escriturapp
    (86) escriturap -> . STRING meteconst cuadescriturastring escriturapp
    (104) expresion -> . exp cuadexpresion expresionp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    STRING          shift and go to state 168
    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    escriturap                     shift and go to state 204
    expresion                      shift and go to state 167
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 188

    (90) escriturapp -> RPAR . SEMICOLON

    SEMICOLON       shift and go to state 205


state 189

    (86) escriturap -> STRING meteconst cuadescriturastring . escriturapp
    (89) escriturapp -> . COMMA escriturap
    (90) escriturapp -> . RPAR SEMICOLON

    COMMA           shift and go to state 187
    RPAR            shift and go to state 188

    escriturapp                    shift and go to state 206

state 190

    (49) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp .

    MAIN            reduce using rule 49 (funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp .)


state 191

    (59) funcionpppp -> funcionf .

    MAIN            reduce using rule 59 (funcionpppp -> funcionf .)


state 192

    (60) funcionpppp -> empty .

    MAIN            reduce using rule 60 (funcionpppp -> empty .)


state 193

    (50) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR . resetmem SEMICOLON funcionpppp
    (51) resetmem -> .

    SEMICOLON       reduce using rule 51 (resetmem -> .)

    resetmem                       shift and go to state 207

state 194

    (75) asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .

    RKEY            reduce using rule 75 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    ID              reduce using rule 75 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    IF              reduce using rule 75 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    WHILE           reduce using rule 75 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    DO              reduce using rule 75 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    PRINT           reduce using rule 75 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)


state 195

    (76) expresionandor -> expresion cuadexpresionandor auxandor .

    SEMICOLON       reduce using rule 76 (expresionandor -> expresion cuadexpresionandor auxandor .)


state 196

    (78) auxandor -> AND . meteopdores expresionandor
    (82) meteopdores -> .

    LPAR            reduce using rule 82 (meteopdores -> .)
    ID              reduce using rule 82 (meteopdores -> .)
    NUMFLOAT        reduce using rule 82 (meteopdores -> .)
    NUMINT          reduce using rule 82 (meteopdores -> .)

    meteopdores                    shift and go to state 208

state 197

    (79) auxandor -> OR . meteopdores expresionandor
    (82) meteopdores -> .

    LPAR            reduce using rule 82 (meteopdores -> .)
    ID              reduce using rule 82 (meteopdores -> .)
    NUMFLOAT        reduce using rule 82 (meteopdores -> .)
    NUMINT          reduce using rule 82 (meteopdores -> .)

    meteopdores                    shift and go to state 209

state 198

    (80) auxandor -> empty .

    SEMICOLON       reduce using rule 80 (auxandor -> empty .)


state 199

    (91) condif -> IF LPAR expresion cuadcondif RPAR bloque condifp . cuadrellenoif
    (93) cuadrellenoif -> .

    RKEY            reduce using rule 93 (cuadrellenoif -> .)
    ID              reduce using rule 93 (cuadrellenoif -> .)
    IF              reduce using rule 93 (cuadrellenoif -> .)
    WHILE           reduce using rule 93 (cuadrellenoif -> .)
    DO              reduce using rule 93 (cuadrellenoif -> .)
    PRINT           reduce using rule 93 (cuadrellenoif -> .)

    cuadrellenoif                  shift and go to state 210

state 200

    (94) condifp -> ELSE . cuadconifelse bloque SEMICOLON
    (96) cuadconifelse -> .

    LKEY            reduce using rule 96 (cuadconifelse -> .)

    cuadconifelse                  shift and go to state 211

state 201

    (95) condifp -> SEMICOLON .

    RKEY            reduce using rule 95 (condifp -> SEMICOLON .)
    ID              reduce using rule 95 (condifp -> SEMICOLON .)
    IF              reduce using rule 95 (condifp -> SEMICOLON .)
    WHILE           reduce using rule 95 (condifp -> SEMICOLON .)
    DO              reduce using rule 95 (condifp -> SEMICOLON .)
    PRINT           reduce using rule 95 (condifp -> SEMICOLON .)


state 202

    (97) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque . rellenocondwhile SEMICOLON
    (100) rellenocondwhile -> .

    SEMICOLON       reduce using rule 100 (rellenocondwhile -> .)

    rellenocondwhile               shift and go to state 212

state 203

    (101) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile . RPAR SEMICOLON

    RPAR            shift and go to state 213


state 204

    (89) escriturapp -> COMMA escriturap .

    RKEY            reduce using rule 89 (escriturapp -> COMMA escriturap .)
    ID              reduce using rule 89 (escriturapp -> COMMA escriturap .)
    IF              reduce using rule 89 (escriturapp -> COMMA escriturap .)
    WHILE           reduce using rule 89 (escriturapp -> COMMA escriturap .)
    DO              reduce using rule 89 (escriturapp -> COMMA escriturap .)
    PRINT           reduce using rule 89 (escriturapp -> COMMA escriturap .)


state 205

    (90) escriturapp -> RPAR SEMICOLON .

    RKEY            reduce using rule 90 (escriturapp -> RPAR SEMICOLON .)
    ID              reduce using rule 90 (escriturapp -> RPAR SEMICOLON .)
    IF              reduce using rule 90 (escriturapp -> RPAR SEMICOLON .)
    WHILE           reduce using rule 90 (escriturapp -> RPAR SEMICOLON .)
    DO              reduce using rule 90 (escriturapp -> RPAR SEMICOLON .)
    PRINT           reduce using rule 90 (escriturapp -> RPAR SEMICOLON .)


state 206

    (86) escriturap -> STRING meteconst cuadescriturastring escriturapp .

    RKEY            reduce using rule 86 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    ID              reduce using rule 86 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    IF              reduce using rule 86 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    WHILE           reduce using rule 86 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    DO              reduce using rule 86 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    PRINT           reduce using rule 86 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)


state 207

    (50) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem . SEMICOLON funcionpppp

    SEMICOLON       shift and go to state 214


state 208

    (78) auxandor -> AND meteopdores . expresionandor
    (76) expresionandor -> . expresion cuadexpresionandor auxandor
    (104) expresion -> . exp cuadexpresion expresionp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 215
    expresion                      shift and go to state 173
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 209

    (79) auxandor -> OR meteopdores . expresionandor
    (76) expresionandor -> . expresion cuadexpresionandor auxandor
    (104) expresion -> . exp cuadexpresion expresionp
    (23) exp -> . termino cuadexp auxexp
    (28) termino -> . factor cuadtermino auxtermino
    (33) factor -> . LPAR infondo expresion RPAR outfondo
    (34) factor -> . varcte
    (37) varcte -> . ID meteopandos
    (38) varcte -> . NUMFLOAT meteconst
    (39) varcte -> . NUMINT meteconst
    (40) varcte -> . llamafunc
    (42) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 216
    expresion                      shift and go to state 173
    exp                            shift and go to state 66
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 210

    (91) condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .

    RKEY            reduce using rule 91 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    ID              reduce using rule 91 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    IF              reduce using rule 91 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    WHILE           reduce using rule 91 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    DO              reduce using rule 91 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    PRINT           reduce using rule 91 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)


state 211

    (94) condifp -> ELSE cuadconifelse . bloque SEMICOLON
    (61) bloque -> . LKEY bloquep
    (62) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 86

    bloque                         shift and go to state 217

state 212

    (97) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile . SEMICOLON

    SEMICOLON       shift and go to state 218


state 213

    (101) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR . SEMICOLON

    SEMICOLON       shift and go to state 219


state 214

    (50) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON . funcionpppp
    (59) funcionpppp -> . funcionf
    (60) funcionpppp -> . empty
    (49) funcionf -> . VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (50) funcionf -> . tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (112) empty -> .
    (20) tipo -> . INT funciontipo
    (21) tipo -> . FLOAT funciontipo

    VOID            shift and go to state 22
    MAIN            reduce using rule 112 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    tipo                           shift and go to state 23
    funcionpppp                    shift and go to state 220
    funcionf                       shift and go to state 191
    empty                          shift and go to state 192

state 215

    (78) auxandor -> AND meteopdores expresionandor .

    SEMICOLON       reduce using rule 78 (auxandor -> AND meteopdores expresionandor .)


state 216

    (79) auxandor -> OR meteopdores expresionandor .

    SEMICOLON       reduce using rule 79 (auxandor -> OR meteopdores expresionandor .)


state 217

    (94) condifp -> ELSE cuadconifelse bloque . SEMICOLON

    SEMICOLON       shift and go to state 221


state 218

    (97) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .

    RKEY            reduce using rule 97 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    ID              reduce using rule 97 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    IF              reduce using rule 97 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    WHILE           reduce using rule 97 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    DO              reduce using rule 97 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    PRINT           reduce using rule 97 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)


state 219

    (101) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .

    RKEY            reduce using rule 101 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    ID              reduce using rule 101 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    IF              reduce using rule 101 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    WHILE           reduce using rule 101 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    DO              reduce using rule 101 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    PRINT           reduce using rule 101 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)


state 220

    (50) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp .

    MAIN            reduce using rule 50 (funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp .)


state 221

    (94) condifp -> ELSE cuadconifelse bloque SEMICOLON .

    RKEY            reduce using rule 94 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    ID              reduce using rule 94 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    IF              reduce using rule 94 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    WHILE           reduce using rule 94 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    DO              reduce using rule 94 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    PRINT           reduce using rule 94 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)

