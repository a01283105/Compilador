Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc
Rule 2     salidadoc -> <empty>
Rule 3     debug -> <empty>
Rule 4     variable -> varf
Rule 5     variable -> empty
Rule 6     funciones -> funcionf
Rule 7     funciones -> empty
Rule 8     maines -> mainf
Rule 9     maines -> empty
Rule 10    varf -> tipo varp
Rule 11    varp -> ID array varpp
Rule 12    varp -> ID varid varpp
Rule 13    varid -> <empty>
Rule 14    varpp -> varppp
Rule 15    varppp -> COMMA varp
Rule 16    varppp -> SEMICOLON varpppp empty
Rule 17    varpppp -> varf
Rule 18    varpppp -> empty
Rule 19    tipo -> INT funciontipo
Rule 20    tipo -> FLOAT funciontipo
Rule 21    array -> LBRK exp RBRK
Rule 22    exp -> termino cuadexp auxexp
Rule 23    cuadexp -> <empty>
Rule 24    auxexp -> PLUS meteopdores exp
Rule 25    auxexp -> MINUS meteopdores exp
Rule 26    auxexp -> empty
Rule 27    termino -> factor cuadtermino auxtermino
Rule 28    cuadtermino -> <empty>
Rule 29    auxtermino -> MULT meteopdores termino
Rule 30    auxtermino -> SLASH meteopdores termino
Rule 31    auxtermino -> empty
Rule 32    factor -> LPAR expresionandor RPAR
Rule 33    factor -> varcte
Rule 34    varcte -> ID meteopandos
Rule 35    varcte -> NUMFLOAT meteconst
Rule 36    varcte -> NUMINT meteconst
Rule 37    varcte -> llamafunc
Rule 38    meteconst -> <empty>
Rule 39    llamafunc -> ID LPAR llamafuncp
Rule 40    llamafuncp -> llamafuncpp
Rule 41    llamafuncp -> llamafuncpppp
Rule 42    llamafuncpp -> tipo ID llamafuncppp
Rule 43    llamafuncppp -> COMMA llamafuncpp
Rule 44    llamafuncppp -> llamafuncpppp
Rule 45    llamafuncpppp -> RPAR
Rule 46    funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
Rule 47    funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
Rule 48    resetmem -> <empty>
Rule 49    funciontipo -> <empty>
Rule 50    funcionid -> <empty>
Rule 51    funcionp -> funcionpp
Rule 52    funcionp -> empty
Rule 53    funcionpp -> tipo ID varid funcionppp
Rule 54    funcionppp -> COMMA funcionpp
Rule 55    funcionppp -> empty
Rule 56    funcionpppp -> funcionf
Rule 57    funcionpppp -> empty
Rule 58    bloque -> LKEY bloquep
Rule 59    bloque -> LKEY bloqueppp
Rule 60    bloquep -> estatuto bloquepp
Rule 61    bloquepp -> bloquep
Rule 62    bloquepp -> bloqueppp
Rule 63    bloqueppp -> RKEY
Rule 64    estatuto -> asignacion
Rule 65    estatuto -> condif
Rule 66    estatuto -> condwhile
Rule 67    estatuto -> conddowhile
Rule 68    estatuto -> escritura
Rule 69    estatuto -> llamafunc SEMICOLON
Rule 70    asignacion -> ID array asignacionp
Rule 71    asignacion -> ID meteopandos asignacionp
Rule 72    asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON
Rule 73    expresionandor -> expresion cuadexpresionandor auxandor
Rule 74    cuadexpresionandor -> <empty>
Rule 75    auxandor -> AND meteopdores expresionandor
Rule 76    auxandor -> OR meteopdores expresionandor
Rule 77    auxandor -> empty
Rule 78    cuadass -> <empty>
Rule 79    meteopdores -> <empty>
Rule 80    meteopandos -> <empty>
Rule 81    escritura -> PRINT meteopdores LPAR escriturap
Rule 82    escriturap -> expresion cuadescritura escriturapp
Rule 83    escriturap -> STRING meteconst cuadescriturastring escriturapp
Rule 84    cuadescritura -> <empty>
Rule 85    cuadescriturastring -> <empty>
Rule 86    escriturapp -> COMMA escriturap
Rule 87    escriturapp -> RPAR SEMICOLON
Rule 88    condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif
Rule 89    cuadcondif -> <empty>
Rule 90    cuadrellenoif -> <empty>
Rule 91    condifp -> ELSE cuadconifelse bloque SEMICOLON
Rule 92    condifp -> SEMICOLON
Rule 93    cuadconifelse -> <empty>
Rule 94    condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
Rule 95    guardarsal -> <empty>
Rule 96    quadcondwhile -> <empty>
Rule 97    rellenocondwhile -> <empty>
Rule 98    conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
Rule 99    guardardowhile -> <empty>
Rule 100   quadconddowhile -> <empty>
Rule 101   expresion -> exp cuadexpresion expresionp
Rule 102   cuadexpresion -> <empty>
Rule 103   expresionp -> MORETHAN meteopdores expresion
Rule 104   expresionp -> LESSTHAN meteopdores expresion
Rule 105   expresionp -> EQL meteopdores expresion
Rule 106   expresionp -> NOTEQL meteopdores expresion
Rule 107   expresionp -> empty
Rule 108   mainf -> bloque SEMICOLON
Rule 109   empty -> <empty>

Terminals, with rules where they appear

AEQL                 : 72
AND                  : 75
COMMA                : 15 43 54 86
DO                   : 98
ELSE                 : 91
EQL                  : 105
FLOAT                : 20
FUNC                 : 1
ID                   : 11 12 34 39 42 46 47 53 70 71
IF                   : 88
INT                  : 19
LBRK                 : 21
LESSTHAN             : 104
LKEY                 : 58 59
LPAR                 : 32 39 46 47 47 81 88 94 98
MAIN                 : 1
MINUS                : 25
MORETHAN             : 103
MULT                 : 29
NOTEQL               : 106
NUMFLOAT             : 35
NUMINT               : 36
OR                   : 76
PLUS                 : 24
PRINT                : 81
RBRK                 : 21
RETURN               : 47
RKEY                 : 63
RPAR                 : 32 45 46 47 47 87 88 94 98
SEMICOLON            : 1 1 1 16 46 47 69 72 87 91 92 94 98 108
SLASH                : 30
STRING               : 83
VAR                  : 1
VOID                 : 46
WHILE                : 94 98
error                : 

Nonterminals, with rules where they appear

array                : 11 70
asignacion           : 64
asignacionp          : 70 71
auxandor             : 73
auxexp               : 22
auxtermino           : 27
bloque               : 46 47 88 91 94 98 108
bloquep              : 58 61
bloquepp             : 60
bloqueppp            : 59 62
conddowhile          : 67
condif               : 65
condifp              : 88
condwhile            : 66
cuadass              : 72
cuadcondif           : 88
cuadconifelse        : 91
cuadescritura        : 82
cuadescriturastring  : 83
cuadexp              : 22
cuadexpresion        : 101
cuadexpresionandor   : 73
cuadrellenoif        : 88
cuadtermino          : 27
debug                : 1
empty                : 5 7 9 16 18 26 31 52 55 57 77 107
escritura            : 68
escriturap           : 81 86
escriturapp          : 82 83
estatuto             : 60
exp                  : 21 24 25 47 101
expresion            : 73 82 88 94 98 103 104 105 106
expresionandor       : 32 72 75 76
expresionp           : 101
factor               : 27
funciones            : 1
funcionf             : 6 56
funcionid            : 46 47
funcionp             : 46 47
funcionpp            : 51 54
funcionppp           : 53
funcionpppp          : 46 47
funciontipo          : 19 20 46
guardardowhile       : 98
guardarsal           : 94
llamafunc            : 37 69
llamafuncp           : 39
llamafuncpp          : 40 43
llamafuncppp         : 42
llamafuncpppp        : 41 44
maines               : 1
mainf                : 8
meteconst            : 35 36 83
meteopandos          : 34 71
meteopdores          : 24 25 29 30 72 75 76 81 103 104 105 106
programa             : 0
quadconddowhile      : 98
quadcondwhile        : 94
rellenocondwhile     : 94
resetmem             : 46 47
salidadoc            : 1
termino              : 22 29 30
tipo                 : 10 42 47 53
varcte               : 33
varf                 : 4 17
variable             : 1
varid                : 12 53
varp                 : 10 15
varpp                : 11 12
varppp               : 14
varpppp              : 16

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc

    VAR             shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> VAR . SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc

    SEMICOLON       shift and go to state 3


state 3

    (1) programa -> VAR SEMICOLON . variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc
    (4) variable -> . varf
    (5) variable -> . empty
    (10) varf -> . tipo varp
    (109) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    FUNC            reduce using rule 109 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    variable                       shift and go to state 4
    varf                           shift and go to state 5
    empty                          shift and go to state 6
    tipo                           shift and go to state 7

state 4

    (1) programa -> VAR SEMICOLON variable . FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc

    FUNC            shift and go to state 10


state 5

    (4) variable -> varf .

    FUNC            reduce using rule 4 (variable -> varf .)


state 6

    (5) variable -> empty .

    FUNC            reduce using rule 5 (variable -> empty .)


state 7

    (10) varf -> tipo . varp
    (11) varp -> . ID array varpp
    (12) varp -> . ID varid varpp

    ID              shift and go to state 12

    varp                           shift and go to state 11

state 8

    (19) tipo -> INT . funciontipo
    (49) funciontipo -> .

    ID              reduce using rule 49 (funciontipo -> .)

    funciontipo                    shift and go to state 13

state 9

    (20) tipo -> FLOAT . funciontipo
    (49) funciontipo -> .

    ID              reduce using rule 49 (funciontipo -> .)

    funciontipo                    shift and go to state 14

state 10

    (1) programa -> VAR SEMICOLON variable FUNC . SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc

    SEMICOLON       shift and go to state 15


state 11

    (10) varf -> tipo varp .

    FUNC            reduce using rule 10 (varf -> tipo varp .)


state 12

    (11) varp -> ID . array varpp
    (12) varp -> ID . varid varpp
    (21) array -> . LBRK exp RBRK
    (13) varid -> .

    LBRK            shift and go to state 18
    COMMA           reduce using rule 13 (varid -> .)
    SEMICOLON       reduce using rule 13 (varid -> .)

    array                          shift and go to state 16
    varid                          shift and go to state 17

state 13

    (19) tipo -> INT funciontipo .

    ID              reduce using rule 19 (tipo -> INT funciontipo .)


state 14

    (20) tipo -> FLOAT funciontipo .

    ID              reduce using rule 20 (tipo -> FLOAT funciontipo .)


state 15

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON . funciones MAIN SEMICOLON maines debug salidadoc
    (6) funciones -> . funcionf
    (7) funciones -> . empty
    (46) funcionf -> . VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (47) funcionf -> . tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (109) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    VOID            shift and go to state 22
    MAIN            reduce using rule 109 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funciones                      shift and go to state 19
    funcionf                       shift and go to state 20
    empty                          shift and go to state 21
    tipo                           shift and go to state 23

state 16

    (11) varp -> ID array . varpp
    (14) varpp -> . varppp
    (15) varppp -> . COMMA varp
    (16) varppp -> . SEMICOLON varpppp empty

    COMMA           shift and go to state 26
    SEMICOLON       shift and go to state 27

    varpp                          shift and go to state 24
    varppp                         shift and go to state 25

state 17

    (12) varp -> ID varid . varpp
    (14) varpp -> . varppp
    (15) varppp -> . COMMA varp
    (16) varppp -> . SEMICOLON varpppp empty

    COMMA           shift and go to state 26
    SEMICOLON       shift and go to state 27

    varpp                          shift and go to state 28
    varppp                         shift and go to state 25

state 18

    (21) array -> LBRK . exp RBRK
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 29
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 19

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones . MAIN SEMICOLON maines debug salidadoc

    MAIN            shift and go to state 38


state 20

    (6) funciones -> funcionf .

    MAIN            reduce using rule 6 (funciones -> funcionf .)


state 21

    (7) funciones -> empty .

    MAIN            reduce using rule 7 (funciones -> empty .)


state 22

    (46) funcionf -> VOID . funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (49) funciontipo -> .

    ID              reduce using rule 49 (funciontipo -> .)

    funciontipo                    shift and go to state 39

state 23

    (47) funcionf -> tipo . ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp

    ID              shift and go to state 40


state 24

    (11) varp -> ID array varpp .

    FUNC            reduce using rule 11 (varp -> ID array varpp .)


state 25

    (14) varpp -> varppp .

    FUNC            reduce using rule 14 (varpp -> varppp .)


state 26

    (15) varppp -> COMMA . varp
    (11) varp -> . ID array varpp
    (12) varp -> . ID varid varpp

    ID              shift and go to state 12

    varp                           shift and go to state 41

state 27

    (16) varppp -> SEMICOLON . varpppp empty
    (17) varpppp -> . varf
    (18) varpppp -> . empty
    (10) varf -> . tipo varp
    (109) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    FUNC            reduce using rule 109 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    varpppp                        shift and go to state 42
    empty                          shift and go to state 43
    varf                           shift and go to state 44
    tipo                           shift and go to state 7

state 28

    (12) varp -> ID varid varpp .

    FUNC            reduce using rule 12 (varp -> ID varid varpp .)


state 29

    (21) array -> LBRK exp . RBRK

    RBRK            shift and go to state 45


state 30

    (22) exp -> termino . cuadexp auxexp
    (23) cuadexp -> .

    PLUS            reduce using rule 23 (cuadexp -> .)
    MINUS           reduce using rule 23 (cuadexp -> .)
    RBRK            reduce using rule 23 (cuadexp -> .)
    MORETHAN        reduce using rule 23 (cuadexp -> .)
    LESSTHAN        reduce using rule 23 (cuadexp -> .)
    EQL             reduce using rule 23 (cuadexp -> .)
    NOTEQL          reduce using rule 23 (cuadexp -> .)
    AND             reduce using rule 23 (cuadexp -> .)
    OR              reduce using rule 23 (cuadexp -> .)
    RPAR            reduce using rule 23 (cuadexp -> .)
    SEMICOLON       reduce using rule 23 (cuadexp -> .)
    COMMA           reduce using rule 23 (cuadexp -> .)

    cuadexp                        shift and go to state 46

state 31

    (27) termino -> factor . cuadtermino auxtermino
    (28) cuadtermino -> .

    MULT            reduce using rule 28 (cuadtermino -> .)
    SLASH           reduce using rule 28 (cuadtermino -> .)
    PLUS            reduce using rule 28 (cuadtermino -> .)
    MINUS           reduce using rule 28 (cuadtermino -> .)
    RBRK            reduce using rule 28 (cuadtermino -> .)
    MORETHAN        reduce using rule 28 (cuadtermino -> .)
    LESSTHAN        reduce using rule 28 (cuadtermino -> .)
    EQL             reduce using rule 28 (cuadtermino -> .)
    NOTEQL          reduce using rule 28 (cuadtermino -> .)
    AND             reduce using rule 28 (cuadtermino -> .)
    OR              reduce using rule 28 (cuadtermino -> .)
    RPAR            reduce using rule 28 (cuadtermino -> .)
    SEMICOLON       reduce using rule 28 (cuadtermino -> .)
    COMMA           reduce using rule 28 (cuadtermino -> .)

    cuadtermino                    shift and go to state 47

state 32

    (32) factor -> LPAR . expresionandor RPAR
    (73) expresionandor -> . expresion cuadexpresionandor auxandor
    (101) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 48
    expresion                      shift and go to state 49
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 33

    (33) factor -> varcte .

    MULT            reduce using rule 33 (factor -> varcte .)
    SLASH           reduce using rule 33 (factor -> varcte .)
    PLUS            reduce using rule 33 (factor -> varcte .)
    MINUS           reduce using rule 33 (factor -> varcte .)
    RBRK            reduce using rule 33 (factor -> varcte .)
    MORETHAN        reduce using rule 33 (factor -> varcte .)
    LESSTHAN        reduce using rule 33 (factor -> varcte .)
    EQL             reduce using rule 33 (factor -> varcte .)
    NOTEQL          reduce using rule 33 (factor -> varcte .)
    AND             reduce using rule 33 (factor -> varcte .)
    OR              reduce using rule 33 (factor -> varcte .)
    RPAR            reduce using rule 33 (factor -> varcte .)
    SEMICOLON       reduce using rule 33 (factor -> varcte .)
    COMMA           reduce using rule 33 (factor -> varcte .)


state 34

    (34) varcte -> ID . meteopandos
    (39) llamafunc -> ID . LPAR llamafuncp
    (80) meteopandos -> .

    LPAR            shift and go to state 52
    MULT            reduce using rule 80 (meteopandos -> .)
    SLASH           reduce using rule 80 (meteopandos -> .)
    PLUS            reduce using rule 80 (meteopandos -> .)
    MINUS           reduce using rule 80 (meteopandos -> .)
    RBRK            reduce using rule 80 (meteopandos -> .)
    MORETHAN        reduce using rule 80 (meteopandos -> .)
    LESSTHAN        reduce using rule 80 (meteopandos -> .)
    EQL             reduce using rule 80 (meteopandos -> .)
    NOTEQL          reduce using rule 80 (meteopandos -> .)
    AND             reduce using rule 80 (meteopandos -> .)
    OR              reduce using rule 80 (meteopandos -> .)
    RPAR            reduce using rule 80 (meteopandos -> .)
    SEMICOLON       reduce using rule 80 (meteopandos -> .)
    COMMA           reduce using rule 80 (meteopandos -> .)

    meteopandos                    shift and go to state 51

state 35

    (35) varcte -> NUMFLOAT . meteconst
    (38) meteconst -> .

    MULT            reduce using rule 38 (meteconst -> .)
    SLASH           reduce using rule 38 (meteconst -> .)
    PLUS            reduce using rule 38 (meteconst -> .)
    MINUS           reduce using rule 38 (meteconst -> .)
    RBRK            reduce using rule 38 (meteconst -> .)
    MORETHAN        reduce using rule 38 (meteconst -> .)
    LESSTHAN        reduce using rule 38 (meteconst -> .)
    EQL             reduce using rule 38 (meteconst -> .)
    NOTEQL          reduce using rule 38 (meteconst -> .)
    AND             reduce using rule 38 (meteconst -> .)
    OR              reduce using rule 38 (meteconst -> .)
    RPAR            reduce using rule 38 (meteconst -> .)
    SEMICOLON       reduce using rule 38 (meteconst -> .)
    COMMA           reduce using rule 38 (meteconst -> .)

    meteconst                      shift and go to state 53

state 36

    (36) varcte -> NUMINT . meteconst
    (38) meteconst -> .

    MULT            reduce using rule 38 (meteconst -> .)
    SLASH           reduce using rule 38 (meteconst -> .)
    PLUS            reduce using rule 38 (meteconst -> .)
    MINUS           reduce using rule 38 (meteconst -> .)
    RBRK            reduce using rule 38 (meteconst -> .)
    MORETHAN        reduce using rule 38 (meteconst -> .)
    LESSTHAN        reduce using rule 38 (meteconst -> .)
    EQL             reduce using rule 38 (meteconst -> .)
    NOTEQL          reduce using rule 38 (meteconst -> .)
    AND             reduce using rule 38 (meteconst -> .)
    OR              reduce using rule 38 (meteconst -> .)
    RPAR            reduce using rule 38 (meteconst -> .)
    SEMICOLON       reduce using rule 38 (meteconst -> .)
    COMMA           reduce using rule 38 (meteconst -> .)

    meteconst                      shift and go to state 54

state 37

    (37) varcte -> llamafunc .

    MULT            reduce using rule 37 (varcte -> llamafunc .)
    SLASH           reduce using rule 37 (varcte -> llamafunc .)
    PLUS            reduce using rule 37 (varcte -> llamafunc .)
    MINUS           reduce using rule 37 (varcte -> llamafunc .)
    RBRK            reduce using rule 37 (varcte -> llamafunc .)
    MORETHAN        reduce using rule 37 (varcte -> llamafunc .)
    LESSTHAN        reduce using rule 37 (varcte -> llamafunc .)
    EQL             reduce using rule 37 (varcte -> llamafunc .)
    NOTEQL          reduce using rule 37 (varcte -> llamafunc .)
    AND             reduce using rule 37 (varcte -> llamafunc .)
    OR              reduce using rule 37 (varcte -> llamafunc .)
    RPAR            reduce using rule 37 (varcte -> llamafunc .)
    SEMICOLON       reduce using rule 37 (varcte -> llamafunc .)
    COMMA           reduce using rule 37 (varcte -> llamafunc .)


state 38

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN . SEMICOLON maines debug salidadoc

    SEMICOLON       shift and go to state 55


state 39

    (46) funcionf -> VOID funciontipo . ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp

    ID              shift and go to state 56


state 40

    (47) funcionf -> tipo ID . funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (50) funcionid -> .

    LPAR            reduce using rule 50 (funcionid -> .)

    funcionid                      shift and go to state 57

state 41

    (15) varppp -> COMMA varp .

    FUNC            reduce using rule 15 (varppp -> COMMA varp .)


state 42

    (16) varppp -> SEMICOLON varpppp . empty
    (109) empty -> .

    FUNC            reduce using rule 109 (empty -> .)

    empty                          shift and go to state 58

state 43

    (18) varpppp -> empty .

    FUNC            reduce using rule 18 (varpppp -> empty .)


state 44

    (17) varpppp -> varf .

    FUNC            reduce using rule 17 (varpppp -> varf .)


state 45

    (21) array -> LBRK exp RBRK .

    COMMA           reduce using rule 21 (array -> LBRK exp RBRK .)
    SEMICOLON       reduce using rule 21 (array -> LBRK exp RBRK .)
    AEQL            reduce using rule 21 (array -> LBRK exp RBRK .)


state 46

    (22) exp -> termino cuadexp . auxexp
    (24) auxexp -> . PLUS meteopdores exp
    (25) auxexp -> . MINUS meteopdores exp
    (26) auxexp -> . empty
    (109) empty -> .

    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    RBRK            reduce using rule 109 (empty -> .)
    MORETHAN        reduce using rule 109 (empty -> .)
    LESSTHAN        reduce using rule 109 (empty -> .)
    EQL             reduce using rule 109 (empty -> .)
    NOTEQL          reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    RPAR            reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)

    auxexp                         shift and go to state 59
    empty                          shift and go to state 62

state 47

    (27) termino -> factor cuadtermino . auxtermino
    (29) auxtermino -> . MULT meteopdores termino
    (30) auxtermino -> . SLASH meteopdores termino
    (31) auxtermino -> . empty
    (109) empty -> .

    MULT            shift and go to state 64
    SLASH           shift and go to state 65
    PLUS            reduce using rule 109 (empty -> .)
    MINUS           reduce using rule 109 (empty -> .)
    RBRK            reduce using rule 109 (empty -> .)
    MORETHAN        reduce using rule 109 (empty -> .)
    LESSTHAN        reduce using rule 109 (empty -> .)
    EQL             reduce using rule 109 (empty -> .)
    NOTEQL          reduce using rule 109 (empty -> .)
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    RPAR            reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)

    auxtermino                     shift and go to state 63
    empty                          shift and go to state 66

state 48

    (32) factor -> LPAR expresionandor . RPAR

    RPAR            shift and go to state 67


state 49

    (73) expresionandor -> expresion . cuadexpresionandor auxandor
    (74) cuadexpresionandor -> .

    AND             reduce using rule 74 (cuadexpresionandor -> .)
    OR              reduce using rule 74 (cuadexpresionandor -> .)
    RPAR            reduce using rule 74 (cuadexpresionandor -> .)
    SEMICOLON       reduce using rule 74 (cuadexpresionandor -> .)

    cuadexpresionandor             shift and go to state 68

state 50

    (101) expresion -> exp . cuadexpresion expresionp
    (102) cuadexpresion -> .

    MORETHAN        reduce using rule 102 (cuadexpresion -> .)
    LESSTHAN        reduce using rule 102 (cuadexpresion -> .)
    EQL             reduce using rule 102 (cuadexpresion -> .)
    NOTEQL          reduce using rule 102 (cuadexpresion -> .)
    AND             reduce using rule 102 (cuadexpresion -> .)
    OR              reduce using rule 102 (cuadexpresion -> .)
    RPAR            reduce using rule 102 (cuadexpresion -> .)
    SEMICOLON       reduce using rule 102 (cuadexpresion -> .)
    COMMA           reduce using rule 102 (cuadexpresion -> .)

    cuadexpresion                  shift and go to state 69

state 51

    (34) varcte -> ID meteopandos .

    MULT            reduce using rule 34 (varcte -> ID meteopandos .)
    SLASH           reduce using rule 34 (varcte -> ID meteopandos .)
    PLUS            reduce using rule 34 (varcte -> ID meteopandos .)
    MINUS           reduce using rule 34 (varcte -> ID meteopandos .)
    RBRK            reduce using rule 34 (varcte -> ID meteopandos .)
    MORETHAN        reduce using rule 34 (varcte -> ID meteopandos .)
    LESSTHAN        reduce using rule 34 (varcte -> ID meteopandos .)
    EQL             reduce using rule 34 (varcte -> ID meteopandos .)
    NOTEQL          reduce using rule 34 (varcte -> ID meteopandos .)
    AND             reduce using rule 34 (varcte -> ID meteopandos .)
    OR              reduce using rule 34 (varcte -> ID meteopandos .)
    RPAR            reduce using rule 34 (varcte -> ID meteopandos .)
    SEMICOLON       reduce using rule 34 (varcte -> ID meteopandos .)
    COMMA           reduce using rule 34 (varcte -> ID meteopandos .)


state 52

    (39) llamafunc -> ID LPAR . llamafuncp
    (40) llamafuncp -> . llamafuncpp
    (41) llamafuncp -> . llamafuncpppp
    (42) llamafuncpp -> . tipo ID llamafuncppp
    (45) llamafuncpppp -> . RPAR
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    RPAR            shift and go to state 74
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    llamafuncp                     shift and go to state 70
    llamafuncpp                    shift and go to state 71
    llamafuncpppp                  shift and go to state 72
    tipo                           shift and go to state 73

state 53

    (35) varcte -> NUMFLOAT meteconst .

    MULT            reduce using rule 35 (varcte -> NUMFLOAT meteconst .)
    SLASH           reduce using rule 35 (varcte -> NUMFLOAT meteconst .)
    PLUS            reduce using rule 35 (varcte -> NUMFLOAT meteconst .)
    MINUS           reduce using rule 35 (varcte -> NUMFLOAT meteconst .)
    RBRK            reduce using rule 35 (varcte -> NUMFLOAT meteconst .)
    MORETHAN        reduce using rule 35 (varcte -> NUMFLOAT meteconst .)
    LESSTHAN        reduce using rule 35 (varcte -> NUMFLOAT meteconst .)
    EQL             reduce using rule 35 (varcte -> NUMFLOAT meteconst .)
    NOTEQL          reduce using rule 35 (varcte -> NUMFLOAT meteconst .)
    AND             reduce using rule 35 (varcte -> NUMFLOAT meteconst .)
    OR              reduce using rule 35 (varcte -> NUMFLOAT meteconst .)
    RPAR            reduce using rule 35 (varcte -> NUMFLOAT meteconst .)
    SEMICOLON       reduce using rule 35 (varcte -> NUMFLOAT meteconst .)
    COMMA           reduce using rule 35 (varcte -> NUMFLOAT meteconst .)


state 54

    (36) varcte -> NUMINT meteconst .

    MULT            reduce using rule 36 (varcte -> NUMINT meteconst .)
    SLASH           reduce using rule 36 (varcte -> NUMINT meteconst .)
    PLUS            reduce using rule 36 (varcte -> NUMINT meteconst .)
    MINUS           reduce using rule 36 (varcte -> NUMINT meteconst .)
    RBRK            reduce using rule 36 (varcte -> NUMINT meteconst .)
    MORETHAN        reduce using rule 36 (varcte -> NUMINT meteconst .)
    LESSTHAN        reduce using rule 36 (varcte -> NUMINT meteconst .)
    EQL             reduce using rule 36 (varcte -> NUMINT meteconst .)
    NOTEQL          reduce using rule 36 (varcte -> NUMINT meteconst .)
    AND             reduce using rule 36 (varcte -> NUMINT meteconst .)
    OR              reduce using rule 36 (varcte -> NUMINT meteconst .)
    RPAR            reduce using rule 36 (varcte -> NUMINT meteconst .)
    SEMICOLON       reduce using rule 36 (varcte -> NUMINT meteconst .)
    COMMA           reduce using rule 36 (varcte -> NUMINT meteconst .)


state 55

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON . maines debug salidadoc
    (8) maines -> . mainf
    (9) maines -> . empty
    (108) mainf -> . bloque SEMICOLON
    (109) empty -> .
    (58) bloque -> . LKEY bloquep
    (59) bloque -> . LKEY bloqueppp

    $end            reduce using rule 109 (empty -> .)
    LKEY            shift and go to state 79

    maines                         shift and go to state 75
    mainf                          shift and go to state 76
    empty                          shift and go to state 77
    bloque                         shift and go to state 78

state 56

    (46) funcionf -> VOID funciontipo ID . funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (50) funcionid -> .

    LPAR            reduce using rule 50 (funcionid -> .)

    funcionid                      shift and go to state 80

state 57

    (47) funcionf -> tipo ID funcionid . LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp

    LPAR            shift and go to state 81


state 58

    (16) varppp -> SEMICOLON varpppp empty .

    FUNC            reduce using rule 16 (varppp -> SEMICOLON varpppp empty .)


state 59

    (22) exp -> termino cuadexp auxexp .

    RBRK            reduce using rule 22 (exp -> termino cuadexp auxexp .)
    MORETHAN        reduce using rule 22 (exp -> termino cuadexp auxexp .)
    LESSTHAN        reduce using rule 22 (exp -> termino cuadexp auxexp .)
    EQL             reduce using rule 22 (exp -> termino cuadexp auxexp .)
    NOTEQL          reduce using rule 22 (exp -> termino cuadexp auxexp .)
    AND             reduce using rule 22 (exp -> termino cuadexp auxexp .)
    OR              reduce using rule 22 (exp -> termino cuadexp auxexp .)
    RPAR            reduce using rule 22 (exp -> termino cuadexp auxexp .)
    SEMICOLON       reduce using rule 22 (exp -> termino cuadexp auxexp .)
    COMMA           reduce using rule 22 (exp -> termino cuadexp auxexp .)


state 60

    (24) auxexp -> PLUS . meteopdores exp
    (79) meteopdores -> .

    LPAR            reduce using rule 79 (meteopdores -> .)
    ID              reduce using rule 79 (meteopdores -> .)
    NUMFLOAT        reduce using rule 79 (meteopdores -> .)
    NUMINT          reduce using rule 79 (meteopdores -> .)

    meteopdores                    shift and go to state 82

state 61

    (25) auxexp -> MINUS . meteopdores exp
    (79) meteopdores -> .

    LPAR            reduce using rule 79 (meteopdores -> .)
    ID              reduce using rule 79 (meteopdores -> .)
    NUMFLOAT        reduce using rule 79 (meteopdores -> .)
    NUMINT          reduce using rule 79 (meteopdores -> .)

    meteopdores                    shift and go to state 83

state 62

    (26) auxexp -> empty .

    RBRK            reduce using rule 26 (auxexp -> empty .)
    MORETHAN        reduce using rule 26 (auxexp -> empty .)
    LESSTHAN        reduce using rule 26 (auxexp -> empty .)
    EQL             reduce using rule 26 (auxexp -> empty .)
    NOTEQL          reduce using rule 26 (auxexp -> empty .)
    AND             reduce using rule 26 (auxexp -> empty .)
    OR              reduce using rule 26 (auxexp -> empty .)
    RPAR            reduce using rule 26 (auxexp -> empty .)
    SEMICOLON       reduce using rule 26 (auxexp -> empty .)
    COMMA           reduce using rule 26 (auxexp -> empty .)


state 63

    (27) termino -> factor cuadtermino auxtermino .

    PLUS            reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    MINUS           reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    RBRK            reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    MORETHAN        reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    LESSTHAN        reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    EQL             reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    NOTEQL          reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    AND             reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    OR              reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    RPAR            reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    SEMICOLON       reduce using rule 27 (termino -> factor cuadtermino auxtermino .)
    COMMA           reduce using rule 27 (termino -> factor cuadtermino auxtermino .)


state 64

    (29) auxtermino -> MULT . meteopdores termino
    (79) meteopdores -> .

    LPAR            reduce using rule 79 (meteopdores -> .)
    ID              reduce using rule 79 (meteopdores -> .)
    NUMFLOAT        reduce using rule 79 (meteopdores -> .)
    NUMINT          reduce using rule 79 (meteopdores -> .)

    meteopdores                    shift and go to state 84

state 65

    (30) auxtermino -> SLASH . meteopdores termino
    (79) meteopdores -> .

    LPAR            reduce using rule 79 (meteopdores -> .)
    ID              reduce using rule 79 (meteopdores -> .)
    NUMFLOAT        reduce using rule 79 (meteopdores -> .)
    NUMINT          reduce using rule 79 (meteopdores -> .)

    meteopdores                    shift and go to state 85

state 66

    (31) auxtermino -> empty .

    PLUS            reduce using rule 31 (auxtermino -> empty .)
    MINUS           reduce using rule 31 (auxtermino -> empty .)
    RBRK            reduce using rule 31 (auxtermino -> empty .)
    MORETHAN        reduce using rule 31 (auxtermino -> empty .)
    LESSTHAN        reduce using rule 31 (auxtermino -> empty .)
    EQL             reduce using rule 31 (auxtermino -> empty .)
    NOTEQL          reduce using rule 31 (auxtermino -> empty .)
    AND             reduce using rule 31 (auxtermino -> empty .)
    OR              reduce using rule 31 (auxtermino -> empty .)
    RPAR            reduce using rule 31 (auxtermino -> empty .)
    SEMICOLON       reduce using rule 31 (auxtermino -> empty .)
    COMMA           reduce using rule 31 (auxtermino -> empty .)


state 67

    (32) factor -> LPAR expresionandor RPAR .

    MULT            reduce using rule 32 (factor -> LPAR expresionandor RPAR .)
    SLASH           reduce using rule 32 (factor -> LPAR expresionandor RPAR .)
    PLUS            reduce using rule 32 (factor -> LPAR expresionandor RPAR .)
    MINUS           reduce using rule 32 (factor -> LPAR expresionandor RPAR .)
    RBRK            reduce using rule 32 (factor -> LPAR expresionandor RPAR .)
    MORETHAN        reduce using rule 32 (factor -> LPAR expresionandor RPAR .)
    LESSTHAN        reduce using rule 32 (factor -> LPAR expresionandor RPAR .)
    EQL             reduce using rule 32 (factor -> LPAR expresionandor RPAR .)
    NOTEQL          reduce using rule 32 (factor -> LPAR expresionandor RPAR .)
    AND             reduce using rule 32 (factor -> LPAR expresionandor RPAR .)
    OR              reduce using rule 32 (factor -> LPAR expresionandor RPAR .)
    RPAR            reduce using rule 32 (factor -> LPAR expresionandor RPAR .)
    SEMICOLON       reduce using rule 32 (factor -> LPAR expresionandor RPAR .)
    COMMA           reduce using rule 32 (factor -> LPAR expresionandor RPAR .)


state 68

    (73) expresionandor -> expresion cuadexpresionandor . auxandor
    (75) auxandor -> . AND meteopdores expresionandor
    (76) auxandor -> . OR meteopdores expresionandor
    (77) auxandor -> . empty
    (109) empty -> .

    AND             shift and go to state 87
    OR              shift and go to state 88
    RPAR            reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)

    auxandor                       shift and go to state 86
    empty                          shift and go to state 89

state 69

    (101) expresion -> exp cuadexpresion . expresionp
    (103) expresionp -> . MORETHAN meteopdores expresion
    (104) expresionp -> . LESSTHAN meteopdores expresion
    (105) expresionp -> . EQL meteopdores expresion
    (106) expresionp -> . NOTEQL meteopdores expresion
    (107) expresionp -> . empty
    (109) empty -> .

    MORETHAN        shift and go to state 91
    LESSTHAN        shift and go to state 92
    EQL             shift and go to state 93
    NOTEQL          shift and go to state 94
    AND             reduce using rule 109 (empty -> .)
    OR              reduce using rule 109 (empty -> .)
    RPAR            reduce using rule 109 (empty -> .)
    SEMICOLON       reduce using rule 109 (empty -> .)
    COMMA           reduce using rule 109 (empty -> .)

    expresionp                     shift and go to state 90
    empty                          shift and go to state 95

state 70

    (39) llamafunc -> ID LPAR llamafuncp .

    MULT            reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)
    SLASH           reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)
    PLUS            reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)
    MINUS           reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)
    RBRK            reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)
    MORETHAN        reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)
    LESSTHAN        reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)
    EQL             reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)
    NOTEQL          reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)
    AND             reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)
    OR              reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)
    RPAR            reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)
    SEMICOLON       reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)
    COMMA           reduce using rule 39 (llamafunc -> ID LPAR llamafuncp .)


state 71

    (40) llamafuncp -> llamafuncpp .

    MULT            reduce using rule 40 (llamafuncp -> llamafuncpp .)
    SLASH           reduce using rule 40 (llamafuncp -> llamafuncpp .)
    PLUS            reduce using rule 40 (llamafuncp -> llamafuncpp .)
    MINUS           reduce using rule 40 (llamafuncp -> llamafuncpp .)
    RBRK            reduce using rule 40 (llamafuncp -> llamafuncpp .)
    MORETHAN        reduce using rule 40 (llamafuncp -> llamafuncpp .)
    LESSTHAN        reduce using rule 40 (llamafuncp -> llamafuncpp .)
    EQL             reduce using rule 40 (llamafuncp -> llamafuncpp .)
    NOTEQL          reduce using rule 40 (llamafuncp -> llamafuncpp .)
    AND             reduce using rule 40 (llamafuncp -> llamafuncpp .)
    OR              reduce using rule 40 (llamafuncp -> llamafuncpp .)
    RPAR            reduce using rule 40 (llamafuncp -> llamafuncpp .)
    SEMICOLON       reduce using rule 40 (llamafuncp -> llamafuncpp .)
    COMMA           reduce using rule 40 (llamafuncp -> llamafuncpp .)


state 72

    (41) llamafuncp -> llamafuncpppp .

    MULT            reduce using rule 41 (llamafuncp -> llamafuncpppp .)
    SLASH           reduce using rule 41 (llamafuncp -> llamafuncpppp .)
    PLUS            reduce using rule 41 (llamafuncp -> llamafuncpppp .)
    MINUS           reduce using rule 41 (llamafuncp -> llamafuncpppp .)
    RBRK            reduce using rule 41 (llamafuncp -> llamafuncpppp .)
    MORETHAN        reduce using rule 41 (llamafuncp -> llamafuncpppp .)
    LESSTHAN        reduce using rule 41 (llamafuncp -> llamafuncpppp .)
    EQL             reduce using rule 41 (llamafuncp -> llamafuncpppp .)
    NOTEQL          reduce using rule 41 (llamafuncp -> llamafuncpppp .)
    AND             reduce using rule 41 (llamafuncp -> llamafuncpppp .)
    OR              reduce using rule 41 (llamafuncp -> llamafuncpppp .)
    RPAR            reduce using rule 41 (llamafuncp -> llamafuncpppp .)
    SEMICOLON       reduce using rule 41 (llamafuncp -> llamafuncpppp .)
    COMMA           reduce using rule 41 (llamafuncp -> llamafuncpppp .)


state 73

    (42) llamafuncpp -> tipo . ID llamafuncppp

    ID              shift and go to state 96


state 74

    (45) llamafuncpppp -> RPAR .

    MULT            reduce using rule 45 (llamafuncpppp -> RPAR .)
    SLASH           reduce using rule 45 (llamafuncpppp -> RPAR .)
    PLUS            reduce using rule 45 (llamafuncpppp -> RPAR .)
    MINUS           reduce using rule 45 (llamafuncpppp -> RPAR .)
    RBRK            reduce using rule 45 (llamafuncpppp -> RPAR .)
    MORETHAN        reduce using rule 45 (llamafuncpppp -> RPAR .)
    LESSTHAN        reduce using rule 45 (llamafuncpppp -> RPAR .)
    EQL             reduce using rule 45 (llamafuncpppp -> RPAR .)
    NOTEQL          reduce using rule 45 (llamafuncpppp -> RPAR .)
    AND             reduce using rule 45 (llamafuncpppp -> RPAR .)
    OR              reduce using rule 45 (llamafuncpppp -> RPAR .)
    RPAR            reduce using rule 45 (llamafuncpppp -> RPAR .)
    SEMICOLON       reduce using rule 45 (llamafuncpppp -> RPAR .)
    COMMA           reduce using rule 45 (llamafuncpppp -> RPAR .)


state 75

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines . debug salidadoc
    (3) debug -> .

    $end            reduce using rule 3 (debug -> .)

    debug                          shift and go to state 97

state 76

    (8) maines -> mainf .

    $end            reduce using rule 8 (maines -> mainf .)


state 77

    (9) maines -> empty .

    $end            reduce using rule 9 (maines -> empty .)


state 78

    (108) mainf -> bloque . SEMICOLON

    SEMICOLON       shift and go to state 98


state 79

    (58) bloque -> LKEY . bloquep
    (59) bloque -> LKEY . bloqueppp
    (60) bloquep -> . estatuto bloquepp
    (63) bloqueppp -> . RKEY
    (64) estatuto -> . asignacion
    (65) estatuto -> . condif
    (66) estatuto -> . condwhile
    (67) estatuto -> . conddowhile
    (68) estatuto -> . escritura
    (69) estatuto -> . llamafunc SEMICOLON
    (70) asignacion -> . ID array asignacionp
    (71) asignacion -> . ID meteopandos asignacionp
    (88) condif -> . IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif
    (94) condwhile -> . WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (98) conddowhile -> . DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (81) escritura -> . PRINT meteopdores LPAR escriturap
    (39) llamafunc -> . ID LPAR llamafuncp

    RKEY            shift and go to state 102
    ID              shift and go to state 109
    IF              shift and go to state 110
    WHILE           shift and go to state 111
    DO              shift and go to state 112
    PRINT           shift and go to state 113

    bloquep                        shift and go to state 99
    bloqueppp                      shift and go to state 100
    estatuto                       shift and go to state 101
    asignacion                     shift and go to state 103
    condif                         shift and go to state 104
    condwhile                      shift and go to state 105
    conddowhile                    shift and go to state 106
    escritura                      shift and go to state 107
    llamafunc                      shift and go to state 108

state 80

    (46) funcionf -> VOID funciontipo ID funcionid . LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp

    LPAR            shift and go to state 114


state 81

    (47) funcionf -> tipo ID funcionid LPAR . funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (51) funcionp -> . funcionpp
    (52) funcionp -> . empty
    (53) funcionpp -> . tipo ID varid funcionppp
    (109) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    RPAR            reduce using rule 109 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    tipo                           shift and go to state 115
    funcionp                       shift and go to state 116
    funcionpp                      shift and go to state 117
    empty                          shift and go to state 118

state 82

    (24) auxexp -> PLUS meteopdores . exp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 119
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 83

    (25) auxexp -> MINUS meteopdores . exp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 120
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 84

    (29) auxtermino -> MULT meteopdores . termino
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    termino                        shift and go to state 121
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 85

    (30) auxtermino -> SLASH meteopdores . termino
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    termino                        shift and go to state 122
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 86

    (73) expresionandor -> expresion cuadexpresionandor auxandor .

    RPAR            reduce using rule 73 (expresionandor -> expresion cuadexpresionandor auxandor .)
    SEMICOLON       reduce using rule 73 (expresionandor -> expresion cuadexpresionandor auxandor .)


state 87

    (75) auxandor -> AND . meteopdores expresionandor
    (79) meteopdores -> .

    LPAR            reduce using rule 79 (meteopdores -> .)
    ID              reduce using rule 79 (meteopdores -> .)
    NUMFLOAT        reduce using rule 79 (meteopdores -> .)
    NUMINT          reduce using rule 79 (meteopdores -> .)

    meteopdores                    shift and go to state 123

state 88

    (76) auxandor -> OR . meteopdores expresionandor
    (79) meteopdores -> .

    LPAR            reduce using rule 79 (meteopdores -> .)
    ID              reduce using rule 79 (meteopdores -> .)
    NUMFLOAT        reduce using rule 79 (meteopdores -> .)
    NUMINT          reduce using rule 79 (meteopdores -> .)

    meteopdores                    shift and go to state 124

state 89

    (77) auxandor -> empty .

    RPAR            reduce using rule 77 (auxandor -> empty .)
    SEMICOLON       reduce using rule 77 (auxandor -> empty .)


state 90

    (101) expresion -> exp cuadexpresion expresionp .

    AND             reduce using rule 101 (expresion -> exp cuadexpresion expresionp .)
    OR              reduce using rule 101 (expresion -> exp cuadexpresion expresionp .)
    RPAR            reduce using rule 101 (expresion -> exp cuadexpresion expresionp .)
    SEMICOLON       reduce using rule 101 (expresion -> exp cuadexpresion expresionp .)
    COMMA           reduce using rule 101 (expresion -> exp cuadexpresion expresionp .)


state 91

    (103) expresionp -> MORETHAN . meteopdores expresion
    (79) meteopdores -> .

    LPAR            reduce using rule 79 (meteopdores -> .)
    ID              reduce using rule 79 (meteopdores -> .)
    NUMFLOAT        reduce using rule 79 (meteopdores -> .)
    NUMINT          reduce using rule 79 (meteopdores -> .)

    meteopdores                    shift and go to state 125

state 92

    (104) expresionp -> LESSTHAN . meteopdores expresion
    (79) meteopdores -> .

    LPAR            reduce using rule 79 (meteopdores -> .)
    ID              reduce using rule 79 (meteopdores -> .)
    NUMFLOAT        reduce using rule 79 (meteopdores -> .)
    NUMINT          reduce using rule 79 (meteopdores -> .)

    meteopdores                    shift and go to state 126

state 93

    (105) expresionp -> EQL . meteopdores expresion
    (79) meteopdores -> .

    LPAR            reduce using rule 79 (meteopdores -> .)
    ID              reduce using rule 79 (meteopdores -> .)
    NUMFLOAT        reduce using rule 79 (meteopdores -> .)
    NUMINT          reduce using rule 79 (meteopdores -> .)

    meteopdores                    shift and go to state 127

state 94

    (106) expresionp -> NOTEQL . meteopdores expresion
    (79) meteopdores -> .

    LPAR            reduce using rule 79 (meteopdores -> .)
    ID              reduce using rule 79 (meteopdores -> .)
    NUMFLOAT        reduce using rule 79 (meteopdores -> .)
    NUMINT          reduce using rule 79 (meteopdores -> .)

    meteopdores                    shift and go to state 128

state 95

    (107) expresionp -> empty .

    AND             reduce using rule 107 (expresionp -> empty .)
    OR              reduce using rule 107 (expresionp -> empty .)
    RPAR            reduce using rule 107 (expresionp -> empty .)
    SEMICOLON       reduce using rule 107 (expresionp -> empty .)
    COMMA           reduce using rule 107 (expresionp -> empty .)


state 96

    (42) llamafuncpp -> tipo ID . llamafuncppp
    (43) llamafuncppp -> . COMMA llamafuncpp
    (44) llamafuncppp -> . llamafuncpppp
    (45) llamafuncpppp -> . RPAR

    COMMA           shift and go to state 130
    RPAR            shift and go to state 74

    llamafuncppp                   shift and go to state 129
    llamafuncpppp                  shift and go to state 131

state 97

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug . salidadoc
    (2) salidadoc -> .

    $end            reduce using rule 2 (salidadoc -> .)

    salidadoc                      shift and go to state 132

state 98

    (108) mainf -> bloque SEMICOLON .

    $end            reduce using rule 108 (mainf -> bloque SEMICOLON .)


state 99

    (58) bloque -> LKEY bloquep .

    SEMICOLON       reduce using rule 58 (bloque -> LKEY bloquep .)
    WHILE           reduce using rule 58 (bloque -> LKEY bloquep .)
    RETURN          reduce using rule 58 (bloque -> LKEY bloquep .)
    ELSE            reduce using rule 58 (bloque -> LKEY bloquep .)


state 100

    (59) bloque -> LKEY bloqueppp .

    SEMICOLON       reduce using rule 59 (bloque -> LKEY bloqueppp .)
    WHILE           reduce using rule 59 (bloque -> LKEY bloqueppp .)
    RETURN          reduce using rule 59 (bloque -> LKEY bloqueppp .)
    ELSE            reduce using rule 59 (bloque -> LKEY bloqueppp .)


state 101

    (60) bloquep -> estatuto . bloquepp
    (61) bloquepp -> . bloquep
    (62) bloquepp -> . bloqueppp
    (60) bloquep -> . estatuto bloquepp
    (63) bloqueppp -> . RKEY
    (64) estatuto -> . asignacion
    (65) estatuto -> . condif
    (66) estatuto -> . condwhile
    (67) estatuto -> . conddowhile
    (68) estatuto -> . escritura
    (69) estatuto -> . llamafunc SEMICOLON
    (70) asignacion -> . ID array asignacionp
    (71) asignacion -> . ID meteopandos asignacionp
    (88) condif -> . IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif
    (94) condwhile -> . WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (98) conddowhile -> . DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (81) escritura -> . PRINT meteopdores LPAR escriturap
    (39) llamafunc -> . ID LPAR llamafuncp

    RKEY            shift and go to state 102
    ID              shift and go to state 109
    IF              shift and go to state 110
    WHILE           shift and go to state 111
    DO              shift and go to state 112
    PRINT           shift and go to state 113

    estatuto                       shift and go to state 101
    bloquepp                       shift and go to state 133
    bloquep                        shift and go to state 134
    bloqueppp                      shift and go to state 135
    asignacion                     shift and go to state 103
    condif                         shift and go to state 104
    condwhile                      shift and go to state 105
    conddowhile                    shift and go to state 106
    escritura                      shift and go to state 107
    llamafunc                      shift and go to state 108

state 102

    (63) bloqueppp -> RKEY .

    SEMICOLON       reduce using rule 63 (bloqueppp -> RKEY .)
    WHILE           reduce using rule 63 (bloqueppp -> RKEY .)
    RETURN          reduce using rule 63 (bloqueppp -> RKEY .)
    ELSE            reduce using rule 63 (bloqueppp -> RKEY .)


state 103

    (64) estatuto -> asignacion .

    RKEY            reduce using rule 64 (estatuto -> asignacion .)
    ID              reduce using rule 64 (estatuto -> asignacion .)
    IF              reduce using rule 64 (estatuto -> asignacion .)
    WHILE           reduce using rule 64 (estatuto -> asignacion .)
    DO              reduce using rule 64 (estatuto -> asignacion .)
    PRINT           reduce using rule 64 (estatuto -> asignacion .)


state 104

    (65) estatuto -> condif .

    RKEY            reduce using rule 65 (estatuto -> condif .)
    ID              reduce using rule 65 (estatuto -> condif .)
    IF              reduce using rule 65 (estatuto -> condif .)
    WHILE           reduce using rule 65 (estatuto -> condif .)
    DO              reduce using rule 65 (estatuto -> condif .)
    PRINT           reduce using rule 65 (estatuto -> condif .)


state 105

    (66) estatuto -> condwhile .

    RKEY            reduce using rule 66 (estatuto -> condwhile .)
    ID              reduce using rule 66 (estatuto -> condwhile .)
    IF              reduce using rule 66 (estatuto -> condwhile .)
    WHILE           reduce using rule 66 (estatuto -> condwhile .)
    DO              reduce using rule 66 (estatuto -> condwhile .)
    PRINT           reduce using rule 66 (estatuto -> condwhile .)


state 106

    (67) estatuto -> conddowhile .

    RKEY            reduce using rule 67 (estatuto -> conddowhile .)
    ID              reduce using rule 67 (estatuto -> conddowhile .)
    IF              reduce using rule 67 (estatuto -> conddowhile .)
    WHILE           reduce using rule 67 (estatuto -> conddowhile .)
    DO              reduce using rule 67 (estatuto -> conddowhile .)
    PRINT           reduce using rule 67 (estatuto -> conddowhile .)


state 107

    (68) estatuto -> escritura .

    RKEY            reduce using rule 68 (estatuto -> escritura .)
    ID              reduce using rule 68 (estatuto -> escritura .)
    IF              reduce using rule 68 (estatuto -> escritura .)
    WHILE           reduce using rule 68 (estatuto -> escritura .)
    DO              reduce using rule 68 (estatuto -> escritura .)
    PRINT           reduce using rule 68 (estatuto -> escritura .)


state 108

    (69) estatuto -> llamafunc . SEMICOLON

    SEMICOLON       shift and go to state 136


state 109

    (70) asignacion -> ID . array asignacionp
    (71) asignacion -> ID . meteopandos asignacionp
    (39) llamafunc -> ID . LPAR llamafuncp
    (21) array -> . LBRK exp RBRK
    (80) meteopandos -> .

    LPAR            shift and go to state 52
    LBRK            shift and go to state 18
    AEQL            reduce using rule 80 (meteopandos -> .)

    array                          shift and go to state 137
    meteopandos                    shift and go to state 138

state 110

    (88) condif -> IF . LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif

    LPAR            shift and go to state 139


state 111

    (94) condwhile -> WHILE . LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON

    LPAR            shift and go to state 140


state 112

    (98) conddowhile -> DO . guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (99) guardardowhile -> .

    LKEY            reduce using rule 99 (guardardowhile -> .)

    guardardowhile                 shift and go to state 141

state 113

    (81) escritura -> PRINT . meteopdores LPAR escriturap
    (79) meteopdores -> .

    LPAR            reduce using rule 79 (meteopdores -> .)

    meteopdores                    shift and go to state 142

state 114

    (46) funcionf -> VOID funciontipo ID funcionid LPAR . funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (51) funcionp -> . funcionpp
    (52) funcionp -> . empty
    (53) funcionpp -> . tipo ID varid funcionppp
    (109) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    RPAR            reduce using rule 109 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funcionp                       shift and go to state 143
    funcionpp                      shift and go to state 117
    empty                          shift and go to state 118
    tipo                           shift and go to state 115

state 115

    (53) funcionpp -> tipo . ID varid funcionppp

    ID              shift and go to state 144


state 116

    (47) funcionf -> tipo ID funcionid LPAR funcionp . RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp

    RPAR            shift and go to state 145


state 117

    (51) funcionp -> funcionpp .

    RPAR            reduce using rule 51 (funcionp -> funcionpp .)


state 118

    (52) funcionp -> empty .

    RPAR            reduce using rule 52 (funcionp -> empty .)


state 119

    (24) auxexp -> PLUS meteopdores exp .

    RBRK            reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    MORETHAN        reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    LESSTHAN        reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    EQL             reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    NOTEQL          reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    AND             reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    OR              reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    RPAR            reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    SEMICOLON       reduce using rule 24 (auxexp -> PLUS meteopdores exp .)
    COMMA           reduce using rule 24 (auxexp -> PLUS meteopdores exp .)


state 120

    (25) auxexp -> MINUS meteopdores exp .

    RBRK            reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    MORETHAN        reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    LESSTHAN        reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    EQL             reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    NOTEQL          reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    AND             reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    OR              reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    RPAR            reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    SEMICOLON       reduce using rule 25 (auxexp -> MINUS meteopdores exp .)
    COMMA           reduce using rule 25 (auxexp -> MINUS meteopdores exp .)


state 121

    (29) auxtermino -> MULT meteopdores termino .

    PLUS            reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    MINUS           reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    RBRK            reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    MORETHAN        reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    LESSTHAN        reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    EQL             reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    NOTEQL          reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    AND             reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    OR              reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    RPAR            reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    SEMICOLON       reduce using rule 29 (auxtermino -> MULT meteopdores termino .)
    COMMA           reduce using rule 29 (auxtermino -> MULT meteopdores termino .)


state 122

    (30) auxtermino -> SLASH meteopdores termino .

    PLUS            reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    MINUS           reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    RBRK            reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    MORETHAN        reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    LESSTHAN        reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    EQL             reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    NOTEQL          reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    AND             reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    OR              reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    RPAR            reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    SEMICOLON       reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)
    COMMA           reduce using rule 30 (auxtermino -> SLASH meteopdores termino .)


state 123

    (75) auxandor -> AND meteopdores . expresionandor
    (73) expresionandor -> . expresion cuadexpresionandor auxandor
    (101) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 146
    expresion                      shift and go to state 49
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 124

    (76) auxandor -> OR meteopdores . expresionandor
    (73) expresionandor -> . expresion cuadexpresionandor auxandor
    (101) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 147
    expresion                      shift and go to state 49
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 125

    (103) expresionp -> MORETHAN meteopdores . expresion
    (101) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 148
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 126

    (104) expresionp -> LESSTHAN meteopdores . expresion
    (101) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 149
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 127

    (105) expresionp -> EQL meteopdores . expresion
    (101) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 150
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 128

    (106) expresionp -> NOTEQL meteopdores . expresion
    (101) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 151
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 129

    (42) llamafuncpp -> tipo ID llamafuncppp .

    MULT            reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)
    SLASH           reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)
    PLUS            reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)
    MINUS           reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)
    RBRK            reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)
    MORETHAN        reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)
    LESSTHAN        reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)
    EQL             reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)
    NOTEQL          reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)
    AND             reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)
    OR              reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)
    RPAR            reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)
    SEMICOLON       reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)
    COMMA           reduce using rule 42 (llamafuncpp -> tipo ID llamafuncppp .)


state 130

    (43) llamafuncppp -> COMMA . llamafuncpp
    (42) llamafuncpp -> . tipo ID llamafuncppp
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    llamafuncpp                    shift and go to state 152
    tipo                           shift and go to state 73

state 131

    (44) llamafuncppp -> llamafuncpppp .

    MULT            reduce using rule 44 (llamafuncppp -> llamafuncpppp .)
    SLASH           reduce using rule 44 (llamafuncppp -> llamafuncpppp .)
    PLUS            reduce using rule 44 (llamafuncppp -> llamafuncpppp .)
    MINUS           reduce using rule 44 (llamafuncppp -> llamafuncpppp .)
    RBRK            reduce using rule 44 (llamafuncppp -> llamafuncpppp .)
    MORETHAN        reduce using rule 44 (llamafuncppp -> llamafuncpppp .)
    LESSTHAN        reduce using rule 44 (llamafuncppp -> llamafuncpppp .)
    EQL             reduce using rule 44 (llamafuncppp -> llamafuncpppp .)
    NOTEQL          reduce using rule 44 (llamafuncppp -> llamafuncpppp .)
    AND             reduce using rule 44 (llamafuncppp -> llamafuncpppp .)
    OR              reduce using rule 44 (llamafuncppp -> llamafuncpppp .)
    RPAR            reduce using rule 44 (llamafuncppp -> llamafuncpppp .)
    SEMICOLON       reduce using rule 44 (llamafuncppp -> llamafuncpppp .)
    COMMA           reduce using rule 44 (llamafuncppp -> llamafuncpppp .)


state 132

    (1) programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc .

    $end            reduce using rule 1 (programa -> VAR SEMICOLON variable FUNC SEMICOLON funciones MAIN SEMICOLON maines debug salidadoc .)


state 133

    (60) bloquep -> estatuto bloquepp .

    SEMICOLON       reduce using rule 60 (bloquep -> estatuto bloquepp .)
    WHILE           reduce using rule 60 (bloquep -> estatuto bloquepp .)
    RETURN          reduce using rule 60 (bloquep -> estatuto bloquepp .)
    ELSE            reduce using rule 60 (bloquep -> estatuto bloquepp .)


state 134

    (61) bloquepp -> bloquep .

    SEMICOLON       reduce using rule 61 (bloquepp -> bloquep .)
    WHILE           reduce using rule 61 (bloquepp -> bloquep .)
    RETURN          reduce using rule 61 (bloquepp -> bloquep .)
    ELSE            reduce using rule 61 (bloquepp -> bloquep .)


state 135

    (62) bloquepp -> bloqueppp .

    SEMICOLON       reduce using rule 62 (bloquepp -> bloqueppp .)
    WHILE           reduce using rule 62 (bloquepp -> bloqueppp .)
    RETURN          reduce using rule 62 (bloquepp -> bloqueppp .)
    ELSE            reduce using rule 62 (bloquepp -> bloqueppp .)


state 136

    (69) estatuto -> llamafunc SEMICOLON .

    RKEY            reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    ID              reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    IF              reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    WHILE           reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    DO              reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)
    PRINT           reduce using rule 69 (estatuto -> llamafunc SEMICOLON .)


state 137

    (70) asignacion -> ID array . asignacionp
    (72) asignacionp -> . AEQL meteopdores expresionandor cuadass SEMICOLON

    AEQL            shift and go to state 154

    asignacionp                    shift and go to state 153

state 138

    (71) asignacion -> ID meteopandos . asignacionp
    (72) asignacionp -> . AEQL meteopdores expresionandor cuadass SEMICOLON

    AEQL            shift and go to state 154

    asignacionp                    shift and go to state 155

state 139

    (88) condif -> IF LPAR . expresion cuadcondif RPAR bloque condifp cuadrellenoif
    (101) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 156
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 140

    (94) condwhile -> WHILE LPAR . guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (95) guardarsal -> .

    LPAR            reduce using rule 95 (guardarsal -> .)
    ID              reduce using rule 95 (guardarsal -> .)
    NUMFLOAT        reduce using rule 95 (guardarsal -> .)
    NUMINT          reduce using rule 95 (guardarsal -> .)

    guardarsal                     shift and go to state 157

state 141

    (98) conddowhile -> DO guardardowhile . bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON
    (58) bloque -> . LKEY bloquep
    (59) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 79

    bloque                         shift and go to state 158

state 142

    (81) escritura -> PRINT meteopdores . LPAR escriturap

    LPAR            shift and go to state 159


state 143

    (46) funcionf -> VOID funciontipo ID funcionid LPAR funcionp . RPAR bloque resetmem SEMICOLON funcionpppp

    RPAR            shift and go to state 160


state 144

    (53) funcionpp -> tipo ID . varid funcionppp
    (13) varid -> .

    COMMA           reduce using rule 13 (varid -> .)
    RPAR            reduce using rule 13 (varid -> .)

    varid                          shift and go to state 161

state 145

    (47) funcionf -> tipo ID funcionid LPAR funcionp RPAR . bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (58) bloque -> . LKEY bloquep
    (59) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 79

    bloque                         shift and go to state 162

state 146

    (75) auxandor -> AND meteopdores expresionandor .

    RPAR            reduce using rule 75 (auxandor -> AND meteopdores expresionandor .)
    SEMICOLON       reduce using rule 75 (auxandor -> AND meteopdores expresionandor .)


state 147

    (76) auxandor -> OR meteopdores expresionandor .

    RPAR            reduce using rule 76 (auxandor -> OR meteopdores expresionandor .)
    SEMICOLON       reduce using rule 76 (auxandor -> OR meteopdores expresionandor .)


state 148

    (103) expresionp -> MORETHAN meteopdores expresion .

    AND             reduce using rule 103 (expresionp -> MORETHAN meteopdores expresion .)
    OR              reduce using rule 103 (expresionp -> MORETHAN meteopdores expresion .)
    RPAR            reduce using rule 103 (expresionp -> MORETHAN meteopdores expresion .)
    SEMICOLON       reduce using rule 103 (expresionp -> MORETHAN meteopdores expresion .)
    COMMA           reduce using rule 103 (expresionp -> MORETHAN meteopdores expresion .)


state 149

    (104) expresionp -> LESSTHAN meteopdores expresion .

    AND             reduce using rule 104 (expresionp -> LESSTHAN meteopdores expresion .)
    OR              reduce using rule 104 (expresionp -> LESSTHAN meteopdores expresion .)
    RPAR            reduce using rule 104 (expresionp -> LESSTHAN meteopdores expresion .)
    SEMICOLON       reduce using rule 104 (expresionp -> LESSTHAN meteopdores expresion .)
    COMMA           reduce using rule 104 (expresionp -> LESSTHAN meteopdores expresion .)


state 150

    (105) expresionp -> EQL meteopdores expresion .

    AND             reduce using rule 105 (expresionp -> EQL meteopdores expresion .)
    OR              reduce using rule 105 (expresionp -> EQL meteopdores expresion .)
    RPAR            reduce using rule 105 (expresionp -> EQL meteopdores expresion .)
    SEMICOLON       reduce using rule 105 (expresionp -> EQL meteopdores expresion .)
    COMMA           reduce using rule 105 (expresionp -> EQL meteopdores expresion .)


state 151

    (106) expresionp -> NOTEQL meteopdores expresion .

    AND             reduce using rule 106 (expresionp -> NOTEQL meteopdores expresion .)
    OR              reduce using rule 106 (expresionp -> NOTEQL meteopdores expresion .)
    RPAR            reduce using rule 106 (expresionp -> NOTEQL meteopdores expresion .)
    SEMICOLON       reduce using rule 106 (expresionp -> NOTEQL meteopdores expresion .)
    COMMA           reduce using rule 106 (expresionp -> NOTEQL meteopdores expresion .)


state 152

    (43) llamafuncppp -> COMMA llamafuncpp .

    MULT            reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)
    SLASH           reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)
    PLUS            reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)
    MINUS           reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)
    RBRK            reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)
    MORETHAN        reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)
    LESSTHAN        reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)
    EQL             reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)
    NOTEQL          reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)
    AND             reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)
    OR              reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)
    RPAR            reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)
    SEMICOLON       reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)
    COMMA           reduce using rule 43 (llamafuncppp -> COMMA llamafuncpp .)


state 153

    (70) asignacion -> ID array asignacionp .

    RKEY            reduce using rule 70 (asignacion -> ID array asignacionp .)
    ID              reduce using rule 70 (asignacion -> ID array asignacionp .)
    IF              reduce using rule 70 (asignacion -> ID array asignacionp .)
    WHILE           reduce using rule 70 (asignacion -> ID array asignacionp .)
    DO              reduce using rule 70 (asignacion -> ID array asignacionp .)
    PRINT           reduce using rule 70 (asignacion -> ID array asignacionp .)


state 154

    (72) asignacionp -> AEQL . meteopdores expresionandor cuadass SEMICOLON
    (79) meteopdores -> .

    LPAR            reduce using rule 79 (meteopdores -> .)
    ID              reduce using rule 79 (meteopdores -> .)
    NUMFLOAT        reduce using rule 79 (meteopdores -> .)
    NUMINT          reduce using rule 79 (meteopdores -> .)

    meteopdores                    shift and go to state 163

state 155

    (71) asignacion -> ID meteopandos asignacionp .

    RKEY            reduce using rule 71 (asignacion -> ID meteopandos asignacionp .)
    ID              reduce using rule 71 (asignacion -> ID meteopandos asignacionp .)
    IF              reduce using rule 71 (asignacion -> ID meteopandos asignacionp .)
    WHILE           reduce using rule 71 (asignacion -> ID meteopandos asignacionp .)
    DO              reduce using rule 71 (asignacion -> ID meteopandos asignacionp .)
    PRINT           reduce using rule 71 (asignacion -> ID meteopandos asignacionp .)


state 156

    (88) condif -> IF LPAR expresion . cuadcondif RPAR bloque condifp cuadrellenoif
    (89) cuadcondif -> .

    RPAR            reduce using rule 89 (cuadcondif -> .)

    cuadcondif                     shift and go to state 164

state 157

    (94) condwhile -> WHILE LPAR guardarsal . expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (101) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 165
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 158

    (98) conddowhile -> DO guardardowhile bloque . WHILE LPAR expresion quadconddowhile RPAR SEMICOLON

    WHILE           shift and go to state 166


state 159

    (81) escritura -> PRINT meteopdores LPAR . escriturap
    (82) escriturap -> . expresion cuadescritura escriturapp
    (83) escriturap -> . STRING meteconst cuadescriturastring escriturapp
    (101) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    STRING          shift and go to state 169
    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    escriturap                     shift and go to state 167
    expresion                      shift and go to state 168
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 160

    (46) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR . bloque resetmem SEMICOLON funcionpppp
    (58) bloque -> . LKEY bloquep
    (59) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 79

    bloque                         shift and go to state 170

state 161

    (53) funcionpp -> tipo ID varid . funcionppp
    (54) funcionppp -> . COMMA funcionpp
    (55) funcionppp -> . empty
    (109) empty -> .

    COMMA           shift and go to state 172
    RPAR            reduce using rule 109 (empty -> .)

    funcionppp                     shift and go to state 171
    empty                          shift and go to state 173

state 162

    (47) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque . RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp

    RETURN          shift and go to state 174


state 163

    (72) asignacionp -> AEQL meteopdores . expresionandor cuadass SEMICOLON
    (73) expresionandor -> . expresion cuadexpresionandor auxandor
    (101) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresionandor                 shift and go to state 175
    expresion                      shift and go to state 49
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 164

    (88) condif -> IF LPAR expresion cuadcondif . RPAR bloque condifp cuadrellenoif

    RPAR            shift and go to state 176


state 165

    (94) condwhile -> WHILE LPAR guardarsal expresion . quadcondwhile RPAR bloque rellenocondwhile SEMICOLON
    (96) quadcondwhile -> .

    RPAR            reduce using rule 96 (quadcondwhile -> .)

    quadcondwhile                  shift and go to state 177

state 166

    (98) conddowhile -> DO guardardowhile bloque WHILE . LPAR expresion quadconddowhile RPAR SEMICOLON

    LPAR            shift and go to state 178


state 167

    (81) escritura -> PRINT meteopdores LPAR escriturap .

    RKEY            reduce using rule 81 (escritura -> PRINT meteopdores LPAR escriturap .)
    ID              reduce using rule 81 (escritura -> PRINT meteopdores LPAR escriturap .)
    IF              reduce using rule 81 (escritura -> PRINT meteopdores LPAR escriturap .)
    WHILE           reduce using rule 81 (escritura -> PRINT meteopdores LPAR escriturap .)
    DO              reduce using rule 81 (escritura -> PRINT meteopdores LPAR escriturap .)
    PRINT           reduce using rule 81 (escritura -> PRINT meteopdores LPAR escriturap .)


state 168

    (82) escriturap -> expresion . cuadescritura escriturapp
    (84) cuadescritura -> .

    COMMA           reduce using rule 84 (cuadescritura -> .)
    RPAR            reduce using rule 84 (cuadescritura -> .)

    cuadescritura                  shift and go to state 179

state 169

    (83) escriturap -> STRING . meteconst cuadescriturastring escriturapp
    (38) meteconst -> .

    COMMA           reduce using rule 38 (meteconst -> .)
    RPAR            reduce using rule 38 (meteconst -> .)

    meteconst                      shift and go to state 180

state 170

    (46) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque . resetmem SEMICOLON funcionpppp
    (48) resetmem -> .

    SEMICOLON       reduce using rule 48 (resetmem -> .)

    resetmem                       shift and go to state 181

state 171

    (53) funcionpp -> tipo ID varid funcionppp .

    RPAR            reduce using rule 53 (funcionpp -> tipo ID varid funcionppp .)


state 172

    (54) funcionppp -> COMMA . funcionpp
    (53) funcionpp -> . tipo ID varid funcionppp
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funcionpp                      shift and go to state 182
    tipo                           shift and go to state 115

state 173

    (55) funcionppp -> empty .

    RPAR            reduce using rule 55 (funcionppp -> empty .)


state 174

    (47) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN . LPAR exp RPAR resetmem SEMICOLON funcionpppp

    LPAR            shift and go to state 183


state 175

    (72) asignacionp -> AEQL meteopdores expresionandor . cuadass SEMICOLON
    (78) cuadass -> .

    SEMICOLON       reduce using rule 78 (cuadass -> .)

    cuadass                        shift and go to state 184

state 176

    (88) condif -> IF LPAR expresion cuadcondif RPAR . bloque condifp cuadrellenoif
    (58) bloque -> . LKEY bloquep
    (59) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 79

    bloque                         shift and go to state 185

state 177

    (94) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile . RPAR bloque rellenocondwhile SEMICOLON

    RPAR            shift and go to state 186


state 178

    (98) conddowhile -> DO guardardowhile bloque WHILE LPAR . expresion quadconddowhile RPAR SEMICOLON
    (101) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    expresion                      shift and go to state 187
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 179

    (82) escriturap -> expresion cuadescritura . escriturapp
    (86) escriturapp -> . COMMA escriturap
    (87) escriturapp -> . RPAR SEMICOLON

    COMMA           shift and go to state 189
    RPAR            shift and go to state 190

    escriturapp                    shift and go to state 188

state 180

    (83) escriturap -> STRING meteconst . cuadescriturastring escriturapp
    (85) cuadescriturastring -> .

    COMMA           reduce using rule 85 (cuadescriturastring -> .)
    RPAR            reduce using rule 85 (cuadescriturastring -> .)

    cuadescriturastring            shift and go to state 191

state 181

    (46) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem . SEMICOLON funcionpppp

    SEMICOLON       shift and go to state 192


state 182

    (54) funcionppp -> COMMA funcionpp .

    RPAR            reduce using rule 54 (funcionppp -> COMMA funcionpp .)


state 183

    (47) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR . exp RPAR resetmem SEMICOLON funcionpppp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    exp                            shift and go to state 193
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 184

    (72) asignacionp -> AEQL meteopdores expresionandor cuadass . SEMICOLON

    SEMICOLON       shift and go to state 194


state 185

    (88) condif -> IF LPAR expresion cuadcondif RPAR bloque . condifp cuadrellenoif
    (91) condifp -> . ELSE cuadconifelse bloque SEMICOLON
    (92) condifp -> . SEMICOLON

    ELSE            shift and go to state 196
    SEMICOLON       shift and go to state 197

    condifp                        shift and go to state 195

state 186

    (94) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR . bloque rellenocondwhile SEMICOLON
    (58) bloque -> . LKEY bloquep
    (59) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 79

    bloque                         shift and go to state 198

state 187

    (98) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion . quadconddowhile RPAR SEMICOLON
    (100) quadconddowhile -> .

    RPAR            reduce using rule 100 (quadconddowhile -> .)

    quadconddowhile                shift and go to state 199

state 188

    (82) escriturap -> expresion cuadescritura escriturapp .

    RKEY            reduce using rule 82 (escriturap -> expresion cuadescritura escriturapp .)
    ID              reduce using rule 82 (escriturap -> expresion cuadescritura escriturapp .)
    IF              reduce using rule 82 (escriturap -> expresion cuadescritura escriturapp .)
    WHILE           reduce using rule 82 (escriturap -> expresion cuadescritura escriturapp .)
    DO              reduce using rule 82 (escriturap -> expresion cuadescritura escriturapp .)
    PRINT           reduce using rule 82 (escriturap -> expresion cuadescritura escriturapp .)


state 189

    (86) escriturapp -> COMMA . escriturap
    (82) escriturap -> . expresion cuadescritura escriturapp
    (83) escriturap -> . STRING meteconst cuadescriturastring escriturapp
    (101) expresion -> . exp cuadexpresion expresionp
    (22) exp -> . termino cuadexp auxexp
    (27) termino -> . factor cuadtermino auxtermino
    (32) factor -> . LPAR expresionandor RPAR
    (33) factor -> . varcte
    (34) varcte -> . ID meteopandos
    (35) varcte -> . NUMFLOAT meteconst
    (36) varcte -> . NUMINT meteconst
    (37) varcte -> . llamafunc
    (39) llamafunc -> . ID LPAR llamafuncp

    STRING          shift and go to state 169
    LPAR            shift and go to state 32
    ID              shift and go to state 34
    NUMFLOAT        shift and go to state 35
    NUMINT          shift and go to state 36

    escriturap                     shift and go to state 200
    expresion                      shift and go to state 168
    exp                            shift and go to state 50
    termino                        shift and go to state 30
    factor                         shift and go to state 31
    varcte                         shift and go to state 33
    llamafunc                      shift and go to state 37

state 190

    (87) escriturapp -> RPAR . SEMICOLON

    SEMICOLON       shift and go to state 201


state 191

    (83) escriturap -> STRING meteconst cuadescriturastring . escriturapp
    (86) escriturapp -> . COMMA escriturap
    (87) escriturapp -> . RPAR SEMICOLON

    COMMA           shift and go to state 189
    RPAR            shift and go to state 190

    escriturapp                    shift and go to state 202

state 192

    (46) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON . funcionpppp
    (56) funcionpppp -> . funcionf
    (57) funcionpppp -> . empty
    (46) funcionf -> . VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (47) funcionf -> . tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (109) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    VOID            shift and go to state 22
    MAIN            reduce using rule 109 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    funcionpppp                    shift and go to state 203
    funcionf                       shift and go to state 204
    empty                          shift and go to state 205
    tipo                           shift and go to state 23

state 193

    (47) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp . RPAR resetmem SEMICOLON funcionpppp

    RPAR            shift and go to state 206


state 194

    (72) asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .

    RKEY            reduce using rule 72 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    ID              reduce using rule 72 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    IF              reduce using rule 72 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    WHILE           reduce using rule 72 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    DO              reduce using rule 72 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)
    PRINT           reduce using rule 72 (asignacionp -> AEQL meteopdores expresionandor cuadass SEMICOLON .)


state 195

    (88) condif -> IF LPAR expresion cuadcondif RPAR bloque condifp . cuadrellenoif
    (90) cuadrellenoif -> .

    RKEY            reduce using rule 90 (cuadrellenoif -> .)
    ID              reduce using rule 90 (cuadrellenoif -> .)
    IF              reduce using rule 90 (cuadrellenoif -> .)
    WHILE           reduce using rule 90 (cuadrellenoif -> .)
    DO              reduce using rule 90 (cuadrellenoif -> .)
    PRINT           reduce using rule 90 (cuadrellenoif -> .)

    cuadrellenoif                  shift and go to state 207

state 196

    (91) condifp -> ELSE . cuadconifelse bloque SEMICOLON
    (93) cuadconifelse -> .

    LKEY            reduce using rule 93 (cuadconifelse -> .)

    cuadconifelse                  shift and go to state 208

state 197

    (92) condifp -> SEMICOLON .

    RKEY            reduce using rule 92 (condifp -> SEMICOLON .)
    ID              reduce using rule 92 (condifp -> SEMICOLON .)
    IF              reduce using rule 92 (condifp -> SEMICOLON .)
    WHILE           reduce using rule 92 (condifp -> SEMICOLON .)
    DO              reduce using rule 92 (condifp -> SEMICOLON .)
    PRINT           reduce using rule 92 (condifp -> SEMICOLON .)


state 198

    (94) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque . rellenocondwhile SEMICOLON
    (97) rellenocondwhile -> .

    SEMICOLON       reduce using rule 97 (rellenocondwhile -> .)

    rellenocondwhile               shift and go to state 209

state 199

    (98) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile . RPAR SEMICOLON

    RPAR            shift and go to state 210


state 200

    (86) escriturapp -> COMMA escriturap .

    RKEY            reduce using rule 86 (escriturapp -> COMMA escriturap .)
    ID              reduce using rule 86 (escriturapp -> COMMA escriturap .)
    IF              reduce using rule 86 (escriturapp -> COMMA escriturap .)
    WHILE           reduce using rule 86 (escriturapp -> COMMA escriturap .)
    DO              reduce using rule 86 (escriturapp -> COMMA escriturap .)
    PRINT           reduce using rule 86 (escriturapp -> COMMA escriturap .)


state 201

    (87) escriturapp -> RPAR SEMICOLON .

    RKEY            reduce using rule 87 (escriturapp -> RPAR SEMICOLON .)
    ID              reduce using rule 87 (escriturapp -> RPAR SEMICOLON .)
    IF              reduce using rule 87 (escriturapp -> RPAR SEMICOLON .)
    WHILE           reduce using rule 87 (escriturapp -> RPAR SEMICOLON .)
    DO              reduce using rule 87 (escriturapp -> RPAR SEMICOLON .)
    PRINT           reduce using rule 87 (escriturapp -> RPAR SEMICOLON .)


state 202

    (83) escriturap -> STRING meteconst cuadescriturastring escriturapp .

    RKEY            reduce using rule 83 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    ID              reduce using rule 83 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    IF              reduce using rule 83 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    WHILE           reduce using rule 83 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    DO              reduce using rule 83 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)
    PRINT           reduce using rule 83 (escriturap -> STRING meteconst cuadescriturastring escriturapp .)


state 203

    (46) funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp .

    MAIN            reduce using rule 46 (funcionf -> VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp .)


state 204

    (56) funcionpppp -> funcionf .

    MAIN            reduce using rule 56 (funcionpppp -> funcionf .)


state 205

    (57) funcionpppp -> empty .

    MAIN            reduce using rule 57 (funcionpppp -> empty .)


state 206

    (47) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR . resetmem SEMICOLON funcionpppp
    (48) resetmem -> .

    SEMICOLON       reduce using rule 48 (resetmem -> .)

    resetmem                       shift and go to state 211

state 207

    (88) condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .

    RKEY            reduce using rule 88 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    ID              reduce using rule 88 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    IF              reduce using rule 88 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    WHILE           reduce using rule 88 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    DO              reduce using rule 88 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)
    PRINT           reduce using rule 88 (condif -> IF LPAR expresion cuadcondif RPAR bloque condifp cuadrellenoif .)


state 208

    (91) condifp -> ELSE cuadconifelse . bloque SEMICOLON
    (58) bloque -> . LKEY bloquep
    (59) bloque -> . LKEY bloqueppp

    LKEY            shift and go to state 79

    bloque                         shift and go to state 212

state 209

    (94) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile . SEMICOLON

    SEMICOLON       shift and go to state 213


state 210

    (98) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR . SEMICOLON

    SEMICOLON       shift and go to state 214


state 211

    (47) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem . SEMICOLON funcionpppp

    SEMICOLON       shift and go to state 215


state 212

    (91) condifp -> ELSE cuadconifelse bloque . SEMICOLON

    SEMICOLON       shift and go to state 216


state 213

    (94) condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .

    RKEY            reduce using rule 94 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    ID              reduce using rule 94 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    IF              reduce using rule 94 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    WHILE           reduce using rule 94 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    DO              reduce using rule 94 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)
    PRINT           reduce using rule 94 (condwhile -> WHILE LPAR guardarsal expresion quadcondwhile RPAR bloque rellenocondwhile SEMICOLON .)


state 214

    (98) conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .

    RKEY            reduce using rule 98 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    ID              reduce using rule 98 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    IF              reduce using rule 98 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    WHILE           reduce using rule 98 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    DO              reduce using rule 98 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)
    PRINT           reduce using rule 98 (conddowhile -> DO guardardowhile bloque WHILE LPAR expresion quadconddowhile RPAR SEMICOLON .)


state 215

    (47) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON . funcionpppp
    (56) funcionpppp -> . funcionf
    (57) funcionpppp -> . empty
    (46) funcionf -> . VOID funciontipo ID funcionid LPAR funcionp RPAR bloque resetmem SEMICOLON funcionpppp
    (47) funcionf -> . tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp
    (109) empty -> .
    (19) tipo -> . INT funciontipo
    (20) tipo -> . FLOAT funciontipo

    VOID            shift and go to state 22
    MAIN            reduce using rule 109 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    tipo                           shift and go to state 23
    funcionpppp                    shift and go to state 217
    funcionf                       shift and go to state 204
    empty                          shift and go to state 205

state 216

    (91) condifp -> ELSE cuadconifelse bloque SEMICOLON .

    RKEY            reduce using rule 91 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    ID              reduce using rule 91 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    IF              reduce using rule 91 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    WHILE           reduce using rule 91 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    DO              reduce using rule 91 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)
    PRINT           reduce using rule 91 (condifp -> ELSE cuadconifelse bloque SEMICOLON .)


state 217

    (47) funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp .

    MAIN            reduce using rule 47 (funcionf -> tipo ID funcionid LPAR funcionp RPAR bloque RETURN LPAR exp RPAR resetmem SEMICOLON funcionpppp .)

